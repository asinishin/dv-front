{"version":3,"sources":["webpack:///./bundles/printer-usage sync .*\\.tpl\\.html$","webpack:///./bundles/printer-usage sync \\..+\\/.+\\.js$","webpack:///./bundles/printer-usage/index.js","webpack:///./bundles/printer-usage/printer-usage/printer-usage-edit.controller.js","webpack:///./bundles/printer-usage/printer-usage/printer-usage-edit.tpl.html","webpack:///./bundles/printer-usage/printer-usage/printer-usage-list.controller.js","webpack:///./bundles/printer-usage/printer-usage/printer-usage-list.tpl.html","webpack:///./bundles/printer-usage/services/opts-print-formatting-type.service.js","webpack:///./bundles/printer-usage/services/print-import-profile.service.js","webpack:///./bundles/printer-usage/services/print-usage-type.service.js","webpack:///./bundles/printer-usage/services/printer-usage.service.js","webpack:///./bundles/printer-usage/settings/print-import-profiles.directive.js","webpack:///./bundles/printer-usage/settings/print-import-profiles.tpl.html","webpack:///./bundles/printer-usage/settings/print-part-numbers.directive.js","webpack:///./bundles/printer-usage/settings/print-part-numbers.tpl.html","webpack:///./bundles/printer-usage/settings/printer-usage-settings.controller.js","webpack:///./bundles/printer-usage/settings/printer-usage-settings.tpl.html"],"names":["index","$injector","importAll","r","js","require","loadNewModules","m","default","name","invoke","$templateCache","ctx","forEach","key","put","replace","angular","module","controller","$scope","$window","$translate","$route","dwAlerts","state","helper","PrinterUsage","$ctrl","setPageTitle","instant","onInit","navPage","back","setPath","save","form","pointFirstInvalid","usage","catch","err","error","then","$setPristine","delete","confirm","id","postCharges","sort","$page","get","current","params","printerUsageId","pageSize","result","jobs","length","jobsColumnsNames","$q","PrintImportProfile","query","centerId","getCurrentCenterId","profiles","importProfiles","importProfile","import","$files","$invalidFiles","spinImport","promises","$file","all","finally","data","page","edit","usages","printerUsages","factory","columns","_name","$resource","deskworksConfig","optsPrintFormattingType","url","getApiAbsUrl","res","update","method","new","reduce","obj","col","formattingType","$$formattingType","$promise","profile","opt","extend","urlUsageTypes","urlPrinterProducts","isArray","resUpdate","resPrinterProducts","usageTypeId","getPrinterProducts","$filter","datesDeserializer","Upload","urlBase","desDates","transformResponse","fromJson","self","serialize","action","importProfileId","upload","withCredentials","file","number","postDate","directive","templateUrl","restrict","scope","bindToController","autoSave","types","$onInit","push","wrap","onTypeChange","when","indexOf","PrintUsageType","usageTypes","products","saveProductMapping","usageType","saving","add","mappings","productMappings","from","to","printImportProfilesDirective","printPartNumbersDirective"],"mappings":"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","file":"printer-usage~._bundles_printer-usage .js?_rev=eebb4901da766fa1eb8a","sourcesContent":["var map = {\n\t\"./printer-usage/printer-usage-edit.tpl.html\": \"./bundles/printer-usage/printer-usage/printer-usage-edit.tpl.html\",\n\t\"./printer-usage/printer-usage-list.tpl.html\": \"./bundles/printer-usage/printer-usage/printer-usage-list.tpl.html\",\n\t\"./settings/print-import-profiles.tpl.html\": \"./bundles/printer-usage/settings/print-import-profiles.tpl.html\",\n\t\"./settings/print-part-numbers.tpl.html\": \"./bundles/printer-usage/settings/print-part-numbers.tpl.html\",\n\t\"./settings/printer-usage-settings.tpl.html\": \"./bundles/printer-usage/settings/printer-usage-settings.tpl.html\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./bundles/printer-usage sync recursive .*\\\\.tpl\\\\.html$\";","var map = {\n\t\"./printer-usage/printer-usage-edit.controller.js\": \"./bundles/printer-usage/printer-usage/printer-usage-edit.controller.js\",\n\t\"./printer-usage/printer-usage-list.controller.js\": \"./bundles/printer-usage/printer-usage/printer-usage-list.controller.js\",\n\t\"./services/opts-print-formatting-type.service.js\": \"./bundles/printer-usage/services/opts-print-formatting-type.service.js\",\n\t\"./services/print-import-profile.service.js\": \"./bundles/printer-usage/services/print-import-profile.service.js\",\n\t\"./services/print-usage-type.service.js\": \"./bundles/printer-usage/services/print-usage-type.service.js\",\n\t\"./services/printer-usage.service.js\": \"./bundles/printer-usage/services/printer-usage.service.js\",\n\t\"./settings/print-import-profiles.directive.js\": \"./bundles/printer-usage/settings/print-import-profiles.directive.js\",\n\t\"./settings/print-part-numbers.directive.js\": \"./bundles/printer-usage/settings/print-part-numbers.directive.js\",\n\t\"./settings/printer-usage-settings.controller.js\": \"./bundles/printer-usage/settings/printer-usage-settings.controller.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./bundles/printer-usage sync recursive \\\\..+\\\\/.+\\\\.js$\";","const index = ['$injector', function index($injector) {\n  // JS\n  const importAll = r => r.keys().map(r);\n  const js = importAll(require.context('./', true, /\\..+\\/.+\\.js$/));\n  $injector.loadNewModules(js.map(m => m.default.name));\n\n  // Templates\n  $injector.invoke(['$templateCache', function($templateCache) {\n    const ctx = require.context('./', true, /.*\\.tpl\\.html$/);\n    ctx.keys().forEach(key => $templateCache.put(key.replace(/^\\.\\//, ''), ctx(key)));\n  }]);\n}];\n\nexport default index;\n","export default angular.module('deskworks.PrinterUsageEditCtrl', [\n  'deskworks.PrinterUsage',\n])\n\n  .controller('PrinterUsageEditCtrl', function($scope, $window, $translate, $route, dwAlerts, state, helper, PrinterUsage) {\n    const $ctrl = this;\n\n    state.setPageTitle($translate.instant('PRINTER_USAGE.LIST.PAGE_TITLE'));\n\n    $ctrl.onInit = () => {\n      $ctrl.navPage();\n    };\n\n    /**\n     * Back button handler\n     */\n    $ctrl.back = () => state.setPath('/printer-usage');\n\n    /**\n     * Save button handler\n     */\n    $ctrl.save = form => {\n      if (helper.pointFirstInvalid('#printerUsage')) return;\n\n      return PrinterUsage.save($ctrl.usage)\n        .catch(err => dwAlerts.error(err, 'Failed to update printer usage.'))\n        .then(() => form.$setPristine());\n    };\n\n    /**\n     * Delete button handler\n     */\n    $ctrl.delete = () => {\n      if ($window.confirm($translate.instant('PRINTER_USAGE.CONFIRM_DELETE')))\n        return PrinterUsage.delete($ctrl.usage.id)\n          .catch(err => dwAlerts.error(err, 'Failed to delete printer usage.'))\n          .then(() => state.setPath('/printer-usage'));\n    };\n\n    /**\n     * Post Charges button handler\n     */\n    $ctrl.postCharges = () =>\n      PrinterUsage.postCharges($ctrl.usage.id)\n        .catch(err => dwAlerts.error(err, 'Failed to post charges for printer usage.'))\n        .then(() => state.setPath('/printer-usage'));\n\n    /**\n     * Sort handler\n     */\n    $ctrl.sort = sort => $ctrl.navPage(1, sort);\n\n    /**\n     * Navigate page handler\n     */\n    $ctrl.navPage = ($page, sort) => {\n      sort = sort || $ctrl.usage && $ctrl.usage.sort;\n      return PrinterUsage.get($route.current.params.printerUsageId, $page, $ctrl.usage && $ctrl.usage.pageSize, sort)\n        .catch(err => dwAlerts.error(err, 'Failed to query printer usages.'))\n        .then(result => {\n          $ctrl.usage = result;\n          if ($ctrl.usage.jobs.length) {\n            $ctrl.jobsColumnsNames = {};\n            Object.keys($ctrl.usage.jobs[0]).forEach(name => $ctrl.jobsColumnsNames[name] = name);\n          }\n        });\n    };\n\n    $ctrl.onInit();\n  });\n","// Module\nvar code = \"<form name=\\\"formMemberStatement\\\" id=\\\"printerUsage\\\" novalidate ff-bulk-read-only> <h1 class=\\\"page-title\\\">{{state.getPageTitle()}}</h1> <ff-row ng-if=\\\"!$ctrl.usage\\\" class=\\\"animate-collapse\\\"><ff-spin class=\\\"ff-spin-placeholder\\\"></ff-spin></ff-row> <div class=\\\"gutter-v\\\" ng-if=\\\"$ctrl.usage\\\" class=\\\"animate-collapse\\\"> <ff-panel style=\\\"max-width:600px\\\"> <label class=\\\"ff-row\\\"> <ff-label flex=\\\"0 0 100px\\\"><req translate=\\\"PRINTER_USAGE.NUMBER\\\"></req></ff-label> <ff-text ff-model=\\\"$ctrl.usage.number\\\" ff-required=\\\"true\\\" ff-validate-alert=\\\"{{'PRINTER_USAGE.NUMBER' | translate}}\\\"></ff-text> </label> <label class=\\\"ff-row\\\"> <ff-label flex=\\\"0 0 100px\\\"><req translate=\\\"PRINTER_USAGE.POST_DATE\\\"></req></ff-label> <ff-date ff-model=\\\"$ctrl.usage.postDate\\\" ff-required=\\\"true\\\" ff-validate-alert=\\\"{{'PRINTER_USAGE.POST_DATE' | translate}}\\\"></ff-date> </label> <label class=\\\"ff-row\\\"> <ff-label flex=\\\"0 0 100px\\\"><span translate=\\\"PRINTER_USAGE.POSTED\\\"></span></ff-label> <ff-static ff-bind=\\\"$ctrl.usage.posted | yesno\\\"></ff-static> </label> </ff-panel> <ff-btn-group> <ff-btn sense=\\\"save\\\" type=\\\"submit\\\" ff-click=\\\"$ctrl.save(formMemberStatement)\\\" ff-disabled=\\\"formMemberStatement.$pristine\\\"> <span translate=\\\"GLOBAL.BTN_SAVE\\\"></span> </ff-btn> <ff-btn sense=\\\"back\\\" ff-click=\\\"$ctrl.back()\\\"><span translate=\\\"GLOBAL.BTN_BACK\\\"></span></ff-btn> <ff-btn sense=\\\"delete\\\" ff-click=\\\"$ctrl.delete()\\\"><span translate=\\\"GLOBAL.BTN_DELETE\\\"></span></ff-btn> <ff-btn sense=\\\"charge\\\" ff-click=\\\"$ctrl.postCharges()\\\" ng-if=\\\"!$ctrl.usage.posted\\\"> <span translate=\\\"PRINTER_USAGE.BTN_POST_CHARGES\\\"></span> </ff-btn> </ff-btn-group> <ff-panel> <ff-panel-header><span translate=\\\"PRINTER_USAGE.JOBS.HEADER\\\"></span></ff-panel-header> <ff-header ng-if=\\\"$ctrl.usage.jobs.length\\\"> <ff-row> <cell flex=\\\"1 0 8%\\\" class=\\\"ff-center show-sm\\\" title=\\\"{{'PRINTER_USAGE.JOBS.#.HINT' | translate}}\\\"> <span translate=\\\"PRINTER_USAGE.JOBS.#\\\"></span> </cell> <cell flex=\\\"1 0 12%\\\" class=\\\"show-xs\\\"> <div class=\\\"ff-center\\\" style=\\\"display:flex\\\"> <ff-sort flex=\\\"none\\\" props=\\\"$ctrl.usage\\\" col-id=\\\"'id'\\\" ff-click=\\\"$ctrl.sort('id')\\\"></ff-sort> <span translate=\\\"PRINTER_USAGE.JOBS.ID\\\"></span> </div> </cell> <cell flex=\\\"1 0 15%\\\" class=\\\"ff-center\\\"> <span translate=\\\"PRINTER_USAGE.JOBS.PRINTER_CODE\\\"></span> </cell> <cell flex=\\\"1 0 33%\\\"> <div class=\\\"ff-center\\\" style=\\\"display:flex\\\"> <ff-sort flex=\\\"none\\\" props=\\\"$ctrl.usage\\\" col-id=\\\"'memberName'\\\" ff-click=\\\"$ctrl.sort('memberName')\\\"></ff-sort> <span translate=\\\"PRINTER_USAGE.JOBS.USER_NAME\\\"></span> </div> </cell> <cell flex=\\\"1 0 10%\\\" class=\\\"ff-center\\\" ng-if=\\\"$ctrl.jobsColumnsNames.mode\\\"> <span translate=\\\"PRINTER_USAGE.JOBS.JOB_MODE\\\"></span> </cell> <cell flex=\\\"1 0 10%\\\" class=\\\"ff-center\\\"> <span translate=\\\"PRINTER_USAGE.JOBS.BLACK_WHITE\\\"></span> </cell> <cell flex=\\\"1 0 12%\\\" class=\\\"ff-center\\\"> <span translate=\\\"PRINTER_USAGE.JOBS.FULL_COLOR\\\"></span> </cell> <cell flex=\\\"1 0 10%\\\" class=\\\"ff-center\\\" ng-if=\\\"$ctrl.jobsColumnsNames.scanCount\\\"> <span translate=\\\"PRINTER_USAGE.JOBS.SCAN\\\"></span> </cell> <cell flex=\\\"1 0 12%\\\" class=\\\"ff-center\\\" ng-if=\\\"$ctrl.jobsColumnsNames.faxCount\\\"> <span translate=\\\"PRINTER_USAGE.JOBS.FAX\\\"></span> </cell> </ff-row> </ff-header> <ff-row ng-repeat=\\\"job in $ctrl.usage.jobs\\\"> <ff-static flex=\\\"1 0 8%\\\" class=\\\"ff-center show-sm\\\" ff-bind=\\\"::$ctrl.usage.pageSize * ($ctrl.usage.page - 1) + $index + 2\\\"></ff-static> <ff-static flex=\\\"1 0 12%\\\" class=\\\"ff-center show-xs\\\" ff-bind=\\\"::job.id\\\"></ff-static> <ff-static flex=\\\"1 0 15%\\\" class=\\\"ff-center\\\" style=\\\"overflow:visible\\\" ff-style=\\\"{ overflow: 'visible' }\\\"><span> {{::job.printerCode}} <ff-hint hint-type=\\\"danger\\\" ng-if=\\\"!job.valid\\\"><span translate=\\\"PRINTER_USAGE.JOBS.UNKNOWN.HINT\\\"></span></ff-hint> </span></ff-static> <ff-static flex=\\\"1 0 33%\\\" class=\\\"ff-center\\\" ff-bind=\\\"::job.memberName\\\"></ff-static> <ff-static flex=\\\"1 0 10%\\\" class=\\\"ff-center\\\" ff-bind=\\\"::job.mode\\\" ng-if=\\\"$ctrl.jobsColumnsNames.mode\\\"></ff-static> <ff-static flex=\\\"1 0 10%\\\" class=\\\"ff-center\\\" ff-bind=\\\"::job.blackAndWhiteCount\\\"></ff-static> <ff-static flex=\\\"1 0 12%\\\" class=\\\"ff-center\\\" ff-bind=\\\"::job.fullColorCount\\\"></ff-static> <ff-static flex=\\\"1 0 12%\\\" class=\\\"ff-center\\\" ff-bind=\\\"::job.scanCount\\\" ng-if=\\\"$ctrl.jobsColumnsNames.scanCount\\\"></ff-static> <ff-static flex=\\\"1 0 12%\\\" class=\\\"ff-center\\\" ff-bind=\\\"::job.faxCount\\\" ng-if=\\\"$ctrl.jobsColumnsNames.faxCount\\\"></ff-static> </ff-row> <span translate=\\\"PRINTER_USAGE.JOBS.EMPTY\\\" ng-if=\\\"!$ctrl.usage.jobs.length\\\"></span> <ff-pagination props=\\\"$ctrl.usage\\\" ff-click=\\\"$ctrl.navPage($page)\\\" ng-if=\\\"$ctrl.usage.pageCount > 1\\\"></ff-pagination> </ff-panel> </div> </form> \";\n// Exports\nmodule.exports = code;","export default angular.module('deskworks.PrinterUsageListCtrl', [\n  'deskworks.PrinterUsage',\n  'deskworks.PrintImportProfile',\n  'ngFileUpload',\n])\n\n  .controller('PrinterUsageListCtrl', function($scope, $q, $translate, dwAlerts, state, helper, PrinterUsage, PrintImportProfile) {\n    const $ctrl = this;\n\n    state.setPageTitle($translate.instant('PRINTER_USAGE.LIST.PAGE_TITLE'));\n\n    $ctrl.onInit = () => {\n      $ctrl.navPage();\n\n      PrintImportProfile.query({ centerId: state.getCurrentCenterId() })\n        .catch(err => dwAlerts.error(err, 'Failed to get import profiles.'))\n        .then(profiles => {\n          $ctrl.importProfiles = profiles;\n          $ctrl.importProfile = $ctrl.importProfiles[0];\n        });\n    };\n\n    /**\n     * Import from CSV button handler\n     */\n    $ctrl.import = ($files, $invalidFiles) => {\n      if ($invalidFiles && $invalidFiles.length > 0) return dwAlerts.error($translate.instant('PRINTER_USAGE.INVALID_FORMAT'));\n      if (!$files || !$files.length) return;\n      if (helper.pointFirstInvalid('#printerUsageImport')) return;\n\n      $ctrl.spinImport = true;\n      const promises = $files.map($file =>\n        PrinterUsage.import(state.getCurrentCenterId(), $ctrl.importProfile.id, $file)\n          .catch(err => dwAlerts.error(err, 'Failed to import ' + $file.name)));\n\n      return $q.all(promises)\n        .finally(() =>\n          $ctrl.navPage($ctrl.data.page)\n            .finally(() => { $ctrl.spinImport = false; }));\n    };\n\n    /**\n     * Edit Usage button handler\n     */\n    $ctrl.edit = usage => state.setPath('/printer-usage/' + usage.id);\n\n    /**\n     * Navigate page handler\n     */\n    $ctrl.navPage = $page =>\n      PrinterUsage.query(state.getCurrentCenterId(), $page)\n        .catch(err => dwAlerts.error(err, 'Failed to query printer usages.'))\n        .then(result => {\n          $ctrl.data = result;\n          $ctrl.usages = $ctrl.data.printerUsages;\n        });\n\n    $ctrl.onInit();\n  });\n","// Module\nvar code = \"<div id=\\\"printerUsages\\\" ff-bulk-read-only> <h1 class=\\\"page-title\\\">{{state.getPageTitle()}}</h1> <div class=\\\"gutter-v\\\"> <ff-panel ngf-drop=\\\"true\\\" ngf-change=\\\"$ctrl.import($files, $rejectedFiles)\\\" ngf-multiple=\\\"true\\\" ngf-pattern=\\\"'text/csv,.csv'\\\" ngf-accept=\\\"'text/csv,.csv'\\\" ngf-drag-over-class=\\\"dragover\\\"> <ff-row ng-if=\\\"!$ctrl.usages\\\" class=\\\"animate-collapse\\\"><ff-spin class=\\\"ff-spin-placeholder\\\"></ff-spin></ff-row> <ff-header ng-if=\\\"$ctrl.usages\\\" class=\\\"animate-collapse\\\"> <ff-row> <cell class=\\\"ff-center\\\"><span translate=\\\"PRINTER_USAGE.NUMBER\\\"></span></cell> <cell flex=\\\"0 0 40%\\\" class=\\\"ff-center\\\"><span translate=\\\"PRINTER_USAGE.POST_DATE\\\"></span></cell> <cell flex=\\\"0 0 20%\\\" class=\\\"ff-center\\\"><span translate=\\\"PRINTER_USAGE.POSTED\\\"></span></cell> <ff-btn flex=\\\"none\\\" size=\\\"xs\\\" class=\\\"buttons-row zero-height\\\"></ff-btn> </ff-row> </ff-header> <ff-row ng-repeat=\\\"usage in $ctrl.usages\\\" class=\\\"animate-collapse\\\"> <ff-static class=\\\"ff-center\\\" ff-bind=\\\"usage.number\\\"></ff-static> <ff-static flex=\\\"0 0 40%\\\" class=\\\"ff-center\\\" ff-bind=\\\"usage.postDate | date:'mediumDate'\\\"></ff-static> <ff-static flex=\\\"0 0 20%\\\" class=\\\"ff-center\\\" ff-bind=\\\"usage.posted | yesno\\\"></ff-static> <ff-btn flex=\\\"none\\\" sense=\\\"edit\\\" size=\\\"xs\\\" class=\\\"buttons-row\\\" ff-click=\\\"$ctrl.edit(usage)\\\" title=\\\"{{'GLOBAL.BTN_EDIT' | translate}}\\\"></ff-btn> </ff-row> <ff-pagination props=\\\"$ctrl.data\\\" ff-click=\\\"$ctrl.navPage($page)\\\"></ff-pagination> </ff-panel> <div id=\\\"printerUsageImport\\\" class=\\\"ff-row\\\" style=\\\"max-width:450px;margin-left:auto\\\"> <span flex=\\\"none\\\"> <ff-btn sense=\\\"import\\\" ff-spin=\\\"$ctrl.spinImport\\\" ngf-select=\\\"$ctrl.import($files, $invalidFiles)\\\" ngf-multiple=\\\"true\\\" ngf-pattern=\\\"'text/csv,.csv'\\\" ngf-accept=\\\"'text/csv,.csv'\\\"> <span translate=\\\"PRINTER_USAGE.BTN_IMPORT\\\"></span> </ff-btn> </span> <label flex=\\\"auto\\\" class=\\\"ff-row\\\"> <span flex=\\\"none\\\" translate=\\\"PRINTER_USAGE.USING\\\" style=\\\"align-items:center;margin:0 .5rem\\\"></span> <ff-select name=\\\"importProfile\\\" ff-model=\\\"$ctrl.importProfile\\\" ff-required=\\\"true\\\" ff-options=\\\"profile.name for profile in $ctrl.importProfiles\\\" ff-validate-alert=\\\"{{'PRINTER_USAGE.IMPORT_PROFILE' | translate}}\\\"> </ff-select> </label> </div> </div> </div> \";\n// Exports\nmodule.exports = code;","/**\n * Options for Printer Usage Settings -> Import Profiles -> Formatting Type\n */\nexport default angular.module('deskworks.optsPrintFormattingType', [])\n\n  .factory('optsPrintFormattingType', function() {\n\n    return [\n      {\n        id: 'Sharp',\n        name: 'Sharp',\n        columns: [\n          { id: 'colPrinterCode', _name: 'PRINTER_USAGE_SETTINGS.IMPORT_PROFILES.PRINTER_CODE', default: 'Login Name' },\n          { id: 'colJobMode', _name: 'PRINTER_USAGE_SETTINGS.IMPORT_PROFILES.JOB_MODE', default: 'Job Mode' },\n          { id: 'colBwCount', _name: 'PRINTER_USAGE_SETTINGS.IMPORT_PROFILES.PRINT_BLACK', default: 'Black & White Total Count' },\n          { id: 'colColorCount', _name: 'PRINTER_USAGE_SETTINGS.IMPORT_PROFILES.PRINT_COLOR', default: 'Full Color Total Count' },\n        ],\n      },\n      {\n        id: 'Canon',\n        name: 'Canon',\n        columns: [\n          { id: 'colPrinterCode', _name: 'PRINTER_USAGE_SETTINGS.IMPORT_PROFILES.PRINTER_CODE', default: 'Login Name' },\n          { id: 'colBwCount', _name: 'PRINTER_USAGE_SETTINGS.IMPORT_PROFILES.PRINT_BLACK', default: 'Black & White Total Count' },\n          { id: 'colColorCount', _name: 'PRINTER_USAGE_SETTINGS.IMPORT_PROFILES.PRINT_COLOR', default: 'Full Color Total Count' },\n          { id: 'colScanCount', _name: 'PRINTER_USAGE_SETTINGS.IMPORT_PROFILES.SCAN', default: 'Scan Total Count' },\n          { id: 'colFaxCount', _name: 'PRINTER_USAGE_SETTINGS.IMPORT_PROFILES.FAX', default: 'Fax Total Count' },\n        ],\n      },\n      {\n        id: 'Ezeep',\n        name: 'Ezeep',\n        columns: [\n          { id: 'colPrinterCode', _name: 'PRINTER_USAGE_SETTINGS.IMPORT_PROFILES.PRINTER_CODE', default: 'User' },\n          { id: 'colBwCount', _name: 'PRINTER_USAGE_SETTINGS.IMPORT_PROFILES.PRINT_BLACK', default: 'B/W' },\n          { id: 'colColorCount', _name: 'PRINTER_USAGE_SETTINGS.IMPORT_PROFILES.PRINT_COLOR', default: 'Color' },\n        ],\n      },\n    ];\n  });\n","export default angular.module('deskworks.PrintImportProfile', [\n  'ngResource',\n  'deskworks.config',\n  'deskworks.optsPrintFormattingType',\n])\n\n  .factory('PrintImportProfile', function($resource, deskworksConfig, optsPrintFormattingType) {\n    const url = deskworksConfig.getApiAbsUrl('/dw-print/import-profiles/:id');\n\n    const res = $resource(url, {}, {\n      update: { method: 'PUT' },\n    });\n\n    return {\n      new: () => optsPrintFormattingType[0].columns\n        .reduce((obj, col) => (obj[col.id] = col.default, obj), { formattingType: optsPrintFormattingType[0].id, $$formattingType: optsPrintFormattingType[0] }),\n\n      query: params => res.query(params).$promise\n        .then(profiles => {\n          profiles.forEach(profile => {\n            profile.$$formattingType = optsPrintFormattingType.find(opt => opt.id === profile.formattingType);\n          });\n          return profiles;\n        }),\n\n      save: (params, data) => data.id ?\n        res.update(angular.extend({ id: data.id }, params), data).$promise :\n        res.save(params, data).$promise\n          .then(result => (data.id = result.id, result)),\n\n      delete: data => res.delete({ id: data.id }).$promise,\n    };\n  });\n","export default angular.module('deskworks.PrintUsageType', [\n  'ngResource',\n  'deskworks.config',\n])\n\n  .factory('PrintUsageType', function($resource, deskworksConfig) {\n    const urlUsageTypes = deskworksConfig.getApiAbsUrl('/dw-print/usage-types');\n    const urlPrinterProducts = deskworksConfig.getApiAbsUrl('/dw-print/printer-products');\n\n    const res = $resource(urlUsageTypes, {}, {\n      query: { method: 'GET', isArray: true },\n    });\n\n    const resUpdate = $resource(urlUsageTypes + '/:usageTypeId', {}, {\n      update: { method: 'PUT' },\n    });\n\n    const resPrinterProducts = $resource(urlPrinterProducts, {}, {\n      query: { method: 'GET', isArray: true },\n    });\n\n    return {\n      query: centerId => res.query(centerId).$promise,\n\n      save: data => resUpdate.update({ usageTypeId: data.id }, data).$promise,\n\n      getPrinterProducts: () => resPrinterProducts.query().$promise,\n    };\n  });\n","/**\n * Printer Usage service\n */\nexport default angular.module('deskworks.PrinterUsage', [\n  'ngResource',\n  'ngFileUpload',\n  'deskworks.helper',\n  'datesDeserializer',\n])\n\n  .factory('PrinterUsage', function($resource, $q, $filter, datesDeserializer, deskworksConfig, helper, Upload) {\n    const urlBase = deskworksConfig.getApiAbsUrl('/dw-print/printer-usages');\n    const url = `${urlBase}/:id/:action`;\n    const desDates = datesDeserializer(['printerUsages.postDate', 'postDate']);\n\n    const res = $resource(url, {}, {\n      query: { method: 'GET', isArray: false, transformResponse: [angular.fromJson, desDates] },\n      get: { method: 'GET', isArray: false, transformResponse: [angular.fromJson, desDates] },\n      update: { method: 'PUT' },\n    });\n\n    return {\n      query: (centerId, page, pageSize) =>\n        res.query({ centerId: centerId || 0, page: page || 1, pageSize: pageSize || 10 }).$promise,\n\n      get: (id, page = 1, pageSize = 50, sort = 'id') =>\n        res.get({ id, page, pageSize, sort }).$promise,\n\n      save: function(usage) {\n        const self = this;\n        return res.update({ id: usage.id }, self.serialize(usage)).$promise;\n      },\n\n      delete: id =>\n        res.delete({ id }).$promise,\n\n      postCharges: id =>\n        res.save({ id, action: 'charge' }, {}).$promise,\n\n      import: (centerId, importProfileId, $file) =>\n        Upload.upload({\n          url: urlBase + '?centerId=' + centerId + '&importProfileId=' + importProfileId,\n          method: 'POST',\n          withCredentials: true,\n          data: {file: $file},\n        }),\n\n      serialize: usage => {\n        return {\n          number: usage.number,\n          postDate: $filter('date')(usage.postDate, 'yyyy-MM-dd'),\n        };\n      },\n    };\n  });\n","/**\n * importProfiles directive - Import Profiles section of Printer Usage Settings\n */\nexport default angular.module('deskworks.printImportProfilesDirective', [\n  'autoSave',\n  'deskworks.helper',\n  'deskworks.state',\n  'deskworks.PrintImportProfile',\n  'deskworks.optsPrintFormattingType',\n])\n\n  .directive('printImportProfiles', function() {\n    const templateUrl = 'settings/print-import-profiles.tpl.html';\n\n    return {\n      restrict: 'E',\n      scope: true,\n      templateUrl: templateUrl,\n      controller: 'PrintImportProfilesCtrl as $ctrl',\n      bindToController: {},\n    };\n  })\n\n  .controller('PrintImportProfilesCtrl', function($scope, $translate, $window, $q, state, autoSave,\n                                                  helper, dwAlerts, PrintImportProfile, optsPrintFormattingType) {\n    const $ctrl = this;\n\n    $ctrl.types = optsPrintFormattingType;\n\n    /**\n     * $onInit\n     */\n    $ctrl.$onInit = () => {\n      PrintImportProfile.query({ centerId: state.getCurrentCenterId() })\n        .catch(err => dwAlerts.error(err, 'Failed to get import profiles.'))\n        .then(result => {\n          $ctrl.profiles = result;\n        });\n    };\n\n    /**\n     * Create New\n     */\n    $ctrl.new = () => {\n      $ctrl.profiles.push(PrintImportProfile.new());\n    };\n\n    /**\n     * Save\n     */\n    $ctrl.save = autoSave.wrap(save);\n    function save(profile) {\n      return PrintImportProfile.save({ centerId: state.getCurrentCenterId() }, profile)\n        .catch(err => dwAlerts.error(err, 'Failed to save print import profile.'));\n    }\n\n    /**\n     * Formatting type change handler\n     */\n    $ctrl.onTypeChange = (profile) => {\n      if (profile.formattingType !== profile.$$formattingType.id) { // formatting type changed, apply defaults\n        profile.$$formattingType.columns.forEach(col => { profile[col.id] = col.default; });\n        profile.formattingType = profile.$$formattingType.id;\n      }\n      return $ctrl.save(profile);\n    };\n\n    /**\n     * Delete\n     */\n    $ctrl.delete = profile => {\n      if ($window.confirm($translate.instant('PRINTER_USAGE_SETTINGS.CONFIRM_DELETE'))) {\n        return $q.when(profile.id ? PrintImportProfile.delete(profile) : null)\n          .catch(err => dwAlerts.error(err, 'Failed to delete import profile.'))\n          .then(() => {\n            $ctrl.profiles.splice($ctrl.profiles.indexOf(profile), 1);\n          });\n      }\n    };\n  });\n","// Module\nvar code = \"<div class=\\\"ff-grid gutter-v\\\" ff-bulk-read-only> <ff-spin class=\\\"ff-spin-placeholder animate-collapse\\\" ng-if=\\\"!$ctrl.profiles\\\"></ff-spin> <ng-form name=\\\"profile.$$form\\\" ng-repeat=\\\"profile in $ctrl.profiles track by $index\\\" class=\\\"animate-collapse\\\"> <ff-panel> <ff-panel-header ng-if=\\\"!$index\\\"> <cell> <span translate=\\\"PRINTER_USAGE_SETTINGS.IMPORT_PROFILES.HEADER\\\"></span> <ff-hint flex=\\\"none\\\"><span translate=\\\"PRINTER_USAGE_SETTINGS.IMPORT_PROFILES.HEADER.HINT\\\"></span></ff-hint> </cell> </ff-panel-header> <ff-spin ng-if=\\\"profile.$$autoSaving\\\"></ff-spin> <label class=\\\"ff-row\\\"> <ff-label flex=\\\"0 0 50%\\\"><req translate=\\\"PRINTER_USAGE_SETTINGS.IMPORT_PROFILES.NAME\\\"></req></ff-label> <ff-text ff-model=\\\"profile.name\\\" ff-required=\\\"true\\\" ff-change=\\\"$ctrl.save(profile)\\\" ff-validate-alert=\\\"{{'PRINTER_USAGE_SETTINGS.IMPORT_PROFILES.NAME' | translate}}\\\"></ff-text> </label> <label class=\\\"ff-row\\\"> <ff-label flex=\\\"0 0 50%\\\"><req translate=\\\"PRINTER_USAGE_SETTINGS.IMPORT_PROFILES.FORMATTING_TYPE\\\"></req></ff-label> <ff-select ff-model=\\\"profile.$$formattingType\\\" ff-required=\\\"true\\\" ff-change=\\\"$ctrl.onTypeChange(profile)\\\" ff-validate-alert=\\\"{{'PRINTER_USAGE_SETTINGS.IMPORT_PROFILES.FORMATTING_TYPE' | translate}}\\\" ff-options=\\\"type as type.name for type in $ctrl.types\\\"> </ff-select> </label> <label class=\\\"ff-row\\\" ng-repeat=\\\"col in profile.$$formattingType.columns\\\"> <ff-label flex=\\\"0 0 50%\\\"><req translate=\\\"{{col._name}}\\\"></req></ff-label> <ff-text ff-model=\\\"profile[col.id]\\\" ff-required=\\\"true\\\" ff-change=\\\"$ctrl.save(profile)\\\" ff-validate-alert=\\\"{{col._name | translate}}\\\"></ff-text> </label> <ff-btn-group class=\\\"ff-section-buttons\\\"> <ff-btn sense=\\\"delete\\\" size=\\\"sm\\\" ff-click=\\\"$ctrl.delete(profile)\\\"><span translate=\\\"GLOBAL.BTN_DELETE\\\"></span></ff-btn> </ff-btn-group> </ff-panel> </ng-form> <ff-btn-group> <ff-btn sense=\\\"new\\\" size=\\\"sm\\\" ff-click=\\\"$ctrl.new()\\\"><span translate=\\\"PRINTER_USAGE_SETTINGS.NEW_IMPORT_PROFILE\\\"></span></ff-btn> </ff-btn-group> </div> \";\n// Exports\nmodule.exports = code;","/**\n * printPartNumbers directive - Part Numbers Mapping section of Printer Usage Settings\n */\nexport default angular.module('deskworks.printPartNumbersDirective', [\n  'autoSave',\n  'deskworks.helper',\n  'deskworks.state',\n  'deskworks.PrintUsageType',\n])\n\n  .directive('printPartNumbers', function() {\n    const templateUrl = 'settings/print-part-numbers.tpl.html';\n\n    return {\n      restrict: 'E',\n      scope: true,\n      templateUrl: templateUrl,\n      controller: 'PrintPartNumbersCtrl as $ctrl',\n      bindToController: {},\n    };\n  })\n\n  .controller('PrintPartNumbersCtrl', function($scope, $translate, $window, $q, state, autoSave,\n                                               helper, dwAlerts, PrintUsageType) {\n    const $ctrl = this;\n\n    /**\n     * $onInit\n     */\n    $ctrl.$onInit = () => {\n      PrintUsageType.query({ centerId: state.getCurrentCenterId() })\n        .catch(err => dwAlerts.error(err, 'Failed to get printer usage types.'))\n        .then(types => {\n          $ctrl.usageTypes = types;\n        });\n\n      PrintUsageType.getPrinterProducts()\n        .catch(err => dwAlerts.error(err, 'Failed to get printer products.'))\n        .then(products => {\n          $ctrl.products = products;\n        });\n    };\n\n    /**\n     * Save Product Mapping\n     */\n    $ctrl.save = autoSave.wrap(saveProductMapping);\n    function saveProductMapping(usageType) {\n      $ctrl.saving = true;\n      return PrintUsageType.save(usageType)\n        .catch(err => dwAlerts.error(err, 'Failed to save printer usage type.'))\n        .finally(() => { $ctrl.saving = false; });\n    }\n\n    /**\n     * Add Product Mapping\n     */\n    $ctrl.add = usageType => {\n      const mappings = usageType.productMappings;\n      mappings.push({ from: mappings.length ? null : 1, to: null });\n    };\n\n    /**\n     * Delete Product Mapping\n     */\n    $ctrl.delete = (usageType, index) => {\n      const mappings = usageType.productMappings;\n      mappings.splice(index, 1);\n      if (mappings.length) mappings[mappings.length - 1].to = null;\n      if (mappings.length) mappings[0].from = 1;\n\n      return PrintUsageType.save(usageType)\n        .catch(err => dwAlerts.error(err, 'Failed to save printer usage type.'))\n        .finally(() => { $ctrl.saving = false; });\n    };\n  });\n","// Module\nvar code = \"<div ff-bulk-read-only> <ff-panel> <ff-panel-header><span translate=\\\"PRINTER_USAGE_SETTINGS.PART_NUMBERS.HEADER\\\"></span></ff-panel-header> <ff-header> <ff-row> <cell flex=\\\"0 0 50px\\\" class=\\\"ff-center\\\" title=\\\"{{'PRINTER_USAGE_SETTINGS.PART_NUMBERS.FROM.HINT' | translate}}\\\"> <span translate=\\\"PRINTER_USAGE_SETTINGS.PART_NUMBERS.FROM\\\"></span> </cell> <cell flex=\\\"0 0 50px\\\" class=\\\"ff-center\\\" title=\\\"{{'PRINTER_USAGE_SETTINGS.PART_NUMBERS.TO.HINT' | translate}}\\\"> <span translate=\\\"PRINTER_USAGE_SETTINGS.PART_NUMBERS.TO\\\"></span> </cell> <cell title=\\\"{{'PRINTER_USAGE_SETTINGS.PART_NUMBERS.MAP_TO.HINT' | translate}}\\\"> <span translate=\\\"PRINTER_USAGE_SETTINGS.PART_NUMBERS.MAP_TO\\\"></span> </cell> </ff-row> </ff-header> <ff-row><ff-spin class=\\\"ff-spin-placeholder animate-collapse\\\" ng-if=\\\"!$ctrl.usageTypes\\\"></ff-spin></ff-row> <ng-form name=\\\"usageType.$$form\\\" ng-repeat=\\\"usageType in $ctrl.usageTypes\\\" class=\\\"ff-col animate-collapse\\\"> <ff-row> <ff-label class=\\\"em\\\"> {{usageType.type}} <ff-spin ng-if=\\\"usageType.$$autoSaving\\\" class=\\\"ff-spin-sm\\\" style=\\\"margin:0 .5rem 0 auto\\\"></ff-spin> </ff-label> <ff-btn sense=\\\"add\\\" size=\\\"xs\\\" flex=\\\"none\\\" class=\\\"buttons-row\\\" ff-click=\\\"$ctrl.add(usageType)\\\" title=\\\"{{'PRINTER_USAGE_SETTINGS.PART_NUMBERS.BTN_ADD.HINT' | translate}}\\\"></ff-btn> </ff-row> <ff-row ng-repeat=\\\"mapping in usageType.productMappings\\\"> <ff-number flex=\\\"0 0 50px\\\" class=\\\"ff-center\\\" ff-model=\\\"mapping.from\\\" ff-required=\\\"true\\\" ff-disabled=\\\"!$index\\\" ff-lt=\\\"mapping.to\\\" ff-gt=\\\"usageType.productMappings[$index - 1].to\\\" ff-change=\\\"$ctrl.save(usageType)\\\" ff-validate-alert=\\\"{{'PRINTER_USAGE_SETTINGS.PART_NUMBERS.FROM.HINT' | translate}}\\\"></ff-number> <ff-number flex=\\\"0 0 50px\\\" class=\\\"ff-center\\\" ff-model=\\\"mapping.to\\\" ff-required=\\\"true\\\" ff-change=\\\"$ctrl.save(usageType)\\\" ff-validate-alert=\\\"{{'PRINTER_USAGE_SETTINGS.PART_NUMBERS.TO.HINT' | translate}}\\\" ff-gt=\\\"mapping.from\\\" ff-lt=\\\"usageType.productMappings[$index + 1].from\\\" ng-if=\\\"$index < usageType.productMappings.length - 1\\\"></ff-number> <ff-static flex=\\\"0 0 50px\\\" class=\\\"ff-center\\\" ff-disabled=\\\"true\\\" ng-if=\\\"$index === usageType.productMappings.length - 1\\\">&infin;</ff-static> <ff-select ff-model=\\\"mapping.productId\\\" ff-required=\\\"true\\\" ff-change=\\\"$ctrl.save(usageType)\\\" ff-validate-alert=\\\"{{'PRINTER_USAGE_SETTINGS.PART_NUMBERS.MAP_TO.HINT' | translate}}\\\" ff-options=\\\"product.id as product.name for product in $ctrl.products\\\"> </ff-select> <ff-btn sense=\\\"remove\\\" size=\\\"xs\\\" flex=\\\"none\\\" class=\\\"buttons-row\\\" ff-click=\\\"$ctrl.delete(usageType, $index)\\\" title=\\\"{{'PRINTER_USAGE_SETTINGS.PART_NUMBERS.BTN_DELETE.HINT' | translate}}\\\"></ff-btn> </ff-row> </ng-form> </ff-panel> </div> \";\n// Exports\nmodule.exports = code;","import printImportProfilesDirective from './print-import-profiles.directive';\nimport printPartNumbersDirective from './print-part-numbers.directive';\n\nexport default angular.module('deskworks.printerUsageSettings', [\n  'deskworks.state',\n  printImportProfilesDirective.name,\n  printPartNumbersDirective.name,\n])\n\n  .controller('PrinterUsageSettingsCtrl', function($scope, $translate, dwAlerts, state) {\n    const $ctrl = this;\n\n    state.setPageTitle($translate.instant('PRINTER_USAGE_SETTINGS.PAGE_TITLE'));\n  });\n","// Module\nvar code = \"<div id=\\\"printerUsageSettings\\\" ff-bulk-read-only> <h1 class=\\\"page-title\\\">{{state.getPageTitle()}}</h1> <div class=\\\"ff-grid gutter-v gutter-h\\\"> <print-import-profiles flex=\\\"{lg: '0 0 50%'}\\\"></print-import-profiles> <print-part-numbers flex=\\\"{lg: '0 0 50%'}\\\"></print-part-numbers> </div> </div> \";\n// Exports\nmodule.exports = code;"],"sourceRoot":""}