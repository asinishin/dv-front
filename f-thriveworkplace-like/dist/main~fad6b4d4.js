(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{"+Pfa":function(e,t,r){"use strict";r.r(t);r("kYjL");var n=r("d4ov"),o=r("sh/D");t.default=angular.module("deskworks.reports",["oc.lazyLoad","deskworks.setup.service","deskworks.center.service","deskworks.userProfile.service","deskworks.purchase.service","deskworks.bank.service",n.a.name,o.a.name,"deskworks.lazyLoaders"]).config(["$routeProvider",function(e){e.when("/member-statement",{template:"<div ng-include=\"'member-statement/member-statement.tpl.html'\"></div>",controller:"MemberStatementCtrl as vm",label:"Member Statement",routeBranch:"member-statement",reloadOnSearch:!1,translations:["reports","member-statement"],resolve:{user:["dwAlerts","userProfileService","state","routeHelper","resolveTimezone",function(e,t,r,n,o){return n.auth().then((function(){return n.selectUser()})).then((function(){return o()})).then((function(){return t.get(r.getCurrentCenterId(),r.getCurrentUserId()).catch((function(t){return e.error(t,"Failed to get user profile.")}))}))}],lazy:"lazyLoadReports"}}),e.when("/mailbox-report",{template:"<div ng-include=\"'mailbox-report/mailbox-report.tpl.html'\"></div>",controller:"MailboxReportCtrl as vm",label:"Mailbox Report",routeBranch:"mailbox-report",reloadOnSearch:!1,translations:["reports","mailbox-report"],resolve:{auth:["routeHelper",function(e){return e.auth()}],lazy:"lazyLoadReports"}}),e.when("/membership-report",{template:"<div ng-include=\"'membership-report/membership-report.tpl.html'\"></div>",controller:"MembershipReportCtrl as vm",label:"Membership Report",routeBranch:"membership-report",reloadOnSearch:!1,translations:["reports","membership-report","user-search"],resolve:{auth:["routeHelper",function(e){return e.auth()}],fields:["dwAlerts","UserField",function(e,t){return t.query().catch((function(t){return e.error(t,"Failed to query user fields.")}))}],lazy:"lazyLoadReports"}}),e.when("/deposit-transaction-report",{template:"<div ng-include=\"'deposit-transaction-report/deposit-transaction-report.tpl.html'\"></div>",controller:"DepositTransactionReportCtrl as vm",label:"Deposit Transaction Report",routeBranch:"deposit-transaction-report",reloadOnSearch:!1,translations:["reports","deposit-transaction-report"],resolve:{banks:["routeHelper","dwAlerts","bankService",function(e,t,r){return e.auth().then((function(){return r.query().catch((function(e){return t.error(e,"Failed to query banks.")}))}))}],centers:["routeHelper","dwAlerts","centerService",function(e,t,r){return e.auth().then((function(){return r.getCenters().catch((function(e){return t.error(e,"Failed to query centers.")}))}))}],lazy:"lazyLoadReports"}}),e.when("/deposit-and-tax-report",{template:"<div ng-include=\"'deposit-and-tax-report/deposit-and-tax-report.tpl.html'\"></div>",controller:"DepositAndTaxReportCtrl as $ctrl",routeBranch:"deposit-and-tax-report",reloadOnSearch:!1,translations:["reports","deposit-and-tax-report"],resolve:{auth:["routeHelper",function(e){return e.auth()}],lazy:"lazyLoadReports"}}),e.when("/income-by-item-report",{template:"<div ng-include=\"'income-by-item-report/income-by-item-report.tpl.html'\"></div>",controller:"IncomeByItemReportCtrl as $ctrl",label:"Income By Item Report",routeBranch:"income-by-item-report",reloadOnSearch:!1,translations:["reports","income-by-item-report"],resolve:{auth:["routeHelper",function(e){return e.auth()}],lazy:"lazyLoadReports"}}),e.when("/income-report",{template:"<div ng-include=\"'income-report/income-report.tpl.html'\"></div>",controller:"IncomeReportCtrl as vm",label:"Income Report",routeBranch:"income-report",reloadOnSearch:!1,translations:["reports","income-report"],resolve:{auth:["routeHelper",function(e){return e.auth()}],lazy:"lazyLoadReports"}}),e.when("/accounts-receivable-report",{template:"<div ng-include=\"'accounts-receivable-report/accounts-receivable-report.tpl.html'\"></div>",controller:"AccountsReceivableReportCtrl as vm",label:"Accounts Receivable Report",routeBranch:"accounts-receivable-report",reloadOnSearch:!1,translations:["reports","accounts-receivable-report"],resolve:{auth:["routeHelper",function(e){return e.auth()}],lazy:"lazyLoadReports"}}),e.when("/credit-balance-report",{template:"<div ng-include=\"'credit-balance-report/credit-balance-report.tpl.html'\"></div>",controller:"CreditBalanceReportCtrl as vm",label:"Credit Balance Report",routeBranch:"credit-balance-report",reloadOnSearch:!1,translations:["reports","credit-balance-report"],resolve:{auth:["routeHelper",function(e){return e.auth()}],lazy:"lazyLoadReports"}}),e.when("/recurring-billing-report",{template:"<div ng-include=\"'recurring-billing-report/recurring-billing-report.tpl.html'\"></div>",controller:"RecurringBillingReportCtrl as vm",label:"Recurring Billings Report",routeBranch:"recurring-billing-report",reloadOnSearch:!1,translations:["reports","recurring-billings-report"],resolve:{auth:["routeHelper",function(e){return e.auth()}],lazy:"lazyLoadReports"}}),e.when("/recurring-billing-churn-report",{template:"<div ng-include=\"'recurring-billing-churn-report/recurring-billing-churn-report.tpl.html'\"></div>",controller:"RecurringBillingChurnReportCtrl as $ctrl",label:"Recurring Billing Churn Report",routeBranch:"recurring-billing-churn-report",reloadOnSearch:!1,translations:["reports","recurring-billing-churn-report","user-profile","billing-profile"],resolve:{auth:["routeHelper",function(e){return e.auth()}],lazy:"lazyLoadReports"}}),e.when("/reservation-report",{template:"<div ng-include=\"'reservation-report/reservation-report.tpl.html'\"></div>",controller:"ReservationReportCtrl as vm",label:"Reservation Report",routeBranch:"reservation-report",reloadOnSearch:!1,translations:["reports","reservation-report"],resolve:{auth:["routeHelper",function(e){return e.auth()}],reservationFields:["dwAlerts","ReservationField",function(e,t){return t.query().catch((function(t){return e.error(t,"Failed to query reservation fields.")}))}],lazy:"lazyLoadReports"}}),e.when("/security-deposit-report",{template:"<div ng-include=\"'security-deposit-report/security-deposit-report.tpl.html'\"></div>",controller:"SecurityDepositReportCtrl as $ctrl",label:"Security Deposit Report",routeBranch:"security-deposit-report",reloadOnSearch:!1,translations:["reports","security-deposit-report"],resolve:{auth:["routeHelper",function(e){return e.auth()}],lazy:"lazyLoadReports"}}),e.when("/availability-report",{template:"<div ng-include=\"'availability-report/availability-report.tpl.html'\"></div>",controller:"AvailabilityReportCtrl as $ctrl",label:"Availability Report",routeBranch:"availability-report",reloadOnSearch:!1,translations:["reports","availability-report"],resolve:{auth:["routeHelper",function(e){return e.auth()}],lazy:"lazyLoadReports"}}),e.when("/member-usage-report",{template:"<div ng-include=\"'member-usage-report/member-usage-report.tpl.html'\"></div>",controller:"MemberUsageReportCtrl as vm",label:"Member Usage Report",routeBranch:"member-usage-report",reloadOnSearch:!1,translations:["reports","member-usage-report"],resolve:{auth:["routeHelper",function(e){return e.auth().then((function(){return e.selectUser()}))}],lazy:"lazyLoadReports"}}),e.when("/check-in-report",{template:"<div ng-include=\"'check-in-report/check-in-report.tpl.html'\"></div>",controller:"CheckInReportCtrl as $ctrl",routeBranch:"check-in-report",reloadOnSearch:!1,translations:["reports","check-in-report"],resolve:{auth:["routeHelper",function(e){return e.auth()}],lazy:"lazyLoadReports"}}),e.when("/reservation-utilization-report",{template:"<div ng-include=\"'reservation-utilization-report/reservation-utilization-report.tpl.html'\"></div>",controller:"ReservationUtilizationReportCtrl as $ctrl",routeBranch:"reservation-utilization-report",reloadOnSearch:!1,translations:["reports","reservation-units","reservation-utilization-report"],resolve:{auth:["routeHelper",function(e){return e.auth()}],lazy:"lazyLoadReports"}}),e.when("/write-off-report",{template:"<div ng-include=\"'write-off-report/write-off-report.tpl.html'\"></div>",controller:"WriteOffReportCtrl as $ctrl",routeBranch:"write-off-report",reloadOnSearch:!1,translations:["reports","write-off-report"],resolve:{auth:["routeHelper",function(e){return e.auth()}],lazy:"lazyLoadReports"}}),e.when("/reservation-usage-report",{template:"<div ng-include=\"'reservation-usage-report/reservation-usage-report.tpl.html'\"></div>",controller:"ReservationUsageReportCtrl as $ctrl",routeBranch:"reservation-usage-report",reloadOnSearch:!1,translations:["reports","reservation-units","reservation-usage-report"],resolve:{auth:["routeHelper",function(e){return e.auth()}],lazy:"lazyLoadReports"}}),e.when("/passport-reservation-usage-report",{template:"<div ng-include=\"'passport-reservation-usage-report/passport-reservation-usage-report.tpl.html'\"></div>",controller:"PassportReservationUsageReportCtrl as $ctrl",routeBranch:"passport-reservation-usage-report",reloadOnSearch:!1,translations:["reports","passport-reservation-usage-report"],resolve:{auth:["routeHelper",function(e){return e.auth()}],lazy:"lazyLoadReports"}}),e.when("/rent-roll-report",{template:"<div ng-include=\"'rent-roll-report/rent-roll-report.tpl.html'\"></div>",controller:"RentRollReportCtrl as $ctrl",routeBranch:"rent-roll-report",reloadOnSearch:!1,translations:["reports","rent-roll-report"],resolve:{auth:["routeHelper",function(e){return e.auth()}],lazy:"lazyLoadReports"}}),e.when("/pass-usage-report",{template:"<div ng-include=\"'pass-usage-report/pass-usage-report.tpl.html'\"></div>",controller:"PassUsageReportCtrl as $ctrl",routeBranch:"pass-usage-report",reloadOnSearch:!1,translations:["reports","pass-usage-report"],resolve:{auth:["routeHelper",function(e){return e.auth()}],lazy:"lazyLoadReports"}}),e.when("/revenue-forecast-report",{template:"<div ng-include=\"'revenue-forecast-report/revenue-forecast-report.tpl.html'\"></div>",controller:"RevenueForecastReportCtrl as $ctrl",routeBranch:"revenue-forecast-report",reloadOnSearch:!1,translations:["reports","revenue-forecast-report"],resolve:{auth:["routeHelper",function(e){return e.auth()}],lazy:"lazyLoadReports"}}),e.when("/payment-reconciliation-report",{template:"<div ng-include=\"'payment-reconciliation-report/payment-reconciliation-report.tpl.html'\"></div>",controller:"PaymentReconciliationReportCtrl as $ctrl",routeBranch:"payment-reconciliation-report",reloadOnSearch:!1,translations:["reports","payment-reconciliation-report"],resolve:{auth:["routeHelper",function(e){return e.auth()}],lazy:"lazyLoadReports"}}),e.when("/recurring-billing-change-report",{template:"<div ng-include=\"'recurring-billing-change-report/recurring-billing-change-report.tpl.html'\"></div>",controller:"RecurringBillingChangeReportCtrl as $ctrl",routeBranch:"recurring-billing-change-report",reloadOnSearch:!1,translations:["reports","recurring-billing-change-report","user-profile"],resolve:{auth:["routeHelper",function(e){return e.auth()}],lazy:"lazyLoadReports"}})}])},"0+r9":function(e,t,r){"use strict";r.r(t);r("kYjL");t.default=angular.module("deskworks.whiteLabel",["ngRoute","deskworks.routeHelper","deskworks.dwAlerts","deskworks.lazyLoaders"]).config(["$routeProvider",function(e){e.when("/white-label-settings",{template:"<div ng-include=\"'settings/white-label-settings.tpl.html'\"></div>",controller:"WhiteLabelSettingsCtrl as $ctrl",routeBranch:"white-label-settings",translations:["white-label-settings"],resolve:{lazy:"lazyLoadWhiteLabel"}})}])},"1tnR":function(e,t,r){"use strict";r.r(t);r("kYjL"),r("tcE9");t.default=angular.module("deskworks.import",["deskworks.routeHelper","deskworks.dwAlerts","deskworks.lazyLoaders"]).config(["$routeProvider",function(e){e.when("/setup/import",{template:"<div ng-include=\"'wizard/import.tpl.html'\"></div>",controller:"SetupImportCtrl as $ctrl",label:"Setup Import",routeBranch:"setup/import",translations:["reservation-rules","user-profile","billing-profile","products","recurring-billing"],resolve:{auth:["routeHelper",function(e){return e.auth()}],lazy:"lazyLoadImport"}})}])},"4Ojp":function(e,t,r){"use strict";r.r(t);var n=r("nbuU"),o=r.n(n);r("kYjL");t.default=angular.module("deskworks.invoice",["oc.lazyLoad","deskworks.purchase.service","deskworks.lazyLoaders"]).config(["$routeProvider",function(e){e.when("/invoice/:orderId",{template:"<div ng-include=\"'invoice.tpl.html'\"></div>",controller:"InvoiceCtrl as $ctrl",routeBranch:"invoice",reloadOnSearch:!1,hideSidebar:!0,userTasksPolicy:!1,translations:["invoice","reports"],resolve:{auth:["routeHelper",function(e){return e.selectUser()}],orderId:["$route",function(e){return e.current.params.orderId}],lazy:"lazyLoadInvoice"}}),e.when("/purchases/:purchaseId/view",{template:"<div ng-include=\"'invoice.tpl.html'\"></div>",controller:"InvoiceCtrl as $ctrl",routeBranch:"purchases",reloadOnSearch:!1,translations:["invoice","reports"],resolve:{orderId:["$route",function(e){return e.current.params.purchaseId}],back:["state",function(e){return function(){return e.resetParams(),e.setPath("/purchases")}}],preventOrderUserMismatch:["$route","$q","dwAlerts","routeHelper","state","helper","purchaseService",function(e,t,r,n,a,i,s){return n.auth().then((function(){return n.selectUser()})).then((function(){return s.query(a.getCurrentCenterId(),a.getCurrentUserId()).catch((function(e){return r.error(e,"Failed to query purchases.")}))})).then((function(r){if(!o()(r).call(r,(function(t){return+t.id==+e.current.params.purchaseId})))return a.resetParams(),a.setPath("/purchases"),t.reject()}))}],lazy:"lazyLoadInvoice"}}),e.when("/generate-invoice",{template:"<div ng-include=\"'invoice.tpl.html'\"></div>",controller:"InvoiceCtrl as $ctrl",routeBranch:"generate-invoice",reloadOnSearch:!1,translations:["invoice","reports"],resolve:{auth:["routeHelper",function(e){return e.auth().then((function(){return e.selectUser()}))}],orderId:function(){return null},lazy:"lazyLoadInvoice"}})}])},"6IZz":function(e,t,r){"use strict";r.r(t);var n=r("hsT8"),o=r.n(n),a=r("nbuU"),i=r.n(a),s=(r("kYjL"),r("2/1H")),l=r("sh/D");t.default=angular.module("deskworks.simpleReservation",["ngRoute","deskworks.center.service","deskworks.reservationCategory.service","deskworks.calendarService","deskworks.userProfile.service","deskworks.purchase.service","deskworks.setup.service","deskworks.lazyLoaders",s.a.name,l.a.name]).config(["$routeProvider",function(e){function t(e,t,r){return r.auth(t.interpolateRoute("/simple-reservation/centers/:centerId/types/:reservationTypeId/dates/:date/units/:reservationUnitId/users",e.current.params))}e.when("/simple-reservation",{template:"<div ng-include=\"'01-centers/centers.tpl.html'\"></div>",controller:"SimpleReservationCentersCtrl as $ctrl",routeBranch:"new-reservation",hideSidebar:!0,userTasksPolicy:!1,translations:["simple-reservation"],resolve:{centers:["$q","dwAlerts","centerService",function(e,t,r){return r.getCenters().catch((function(e){return t.error(e,"Failed to query centers.")})).then((function(e){return(e=o()(e).call(e,(function(e){return e.reservationUnitsCount>0}))).length?e:t.error("<b>No public centers.</b> At least one center needs <b>Center for Internal Use</b> setting <b>turned off.</b>")}))}],lazy:"lazyLoadSimpleReservation"}}),e.when("/simple-reservation/centers/:centerId/types",{template:"<div ng-include=\"'02-reservation-categories/reservation-categories.tpl.html'\"></div>",controller:"SimpleReservationCategoriesCtrl as $ctrl",routeBranch:"new-reservation",hideSidebar:!0,userTasksPolicy:!1,translations:["simple-reservation","reservations"],resolve:{reservationCategories:["$route","state","helper","dwAlerts","calendarService","resolveTimezone",function(e,t,r,n,o,a){return a().then((function(){return o.query(e.current.params.centerId,moment(),moment()).catch((function(e){return n.error(e,"Failed to query reservation categories.")}))}))}],center:["$route","dwAlerts","centerService",function(e,t,r){return r.get(e.current.params.centerId).catch((function(e){return t.error(e,"Failed to get center.")}))}],settings:["dwAlerts","setupService",function(e,t){return t.getSetupSettings().catch((function(t){return e.error(t,"Failed to get setup settings.")}))}],lazy:"lazyLoadSimpleReservation"}}),e.when("/simple-reservation/centers/:centerId/types/:reservationTypeId",{template:"<div ng-include=\"'03-reservation-category/reservation-category.tpl.html'\"></div>",controller:"SimpleReservationCategoryCtrl as $ctrl",routeBranch:"new-reservation",hideSidebar:!0,userTasksPolicy:!1,translations:["simple-reservation"],resolve:{reservationCategory:["$q","$route","dwAlerts","reservationCategoryService",function(e,t,r,n){return n.get(t.current.params.centerId,t.current.params.reservationTypeId).catch((function(e){return r.error(e,"Failed to get reservation category.")}))}],lazy:"lazyLoadSimpleReservation"}}),e.when("/simple-reservation/centers/:centerId/types/:reservationTypeId/dates",{template:"<div ng-include=\"'04-date/date.tpl.html'\"></div>",controller:"SimpleReservationDateCtrl as $ctrl",routeBranch:"new-reservation",hideSidebar:!0,userTasksPolicy:!1,translations:["simple-reservation"],resolve:{unavailableDates:["$route","dwAlerts","reservationCategoryService",function(e,t,r){return r.getUnavailableDates(e.current.params.centerId,e.current.params.reservationTypeId).catch((function(e){return t.error(e,"Failed to query unavailable dates.")}))}],lazy:"lazyLoadSimpleReservation"}}),e.when("/simple-reservation/centers/:centerId/types/:reservationTypeId/dates/:date/units",{template:"<div ng-include=\"'05-reservation-units/reservation-units.tpl.html'\"></div>",controller:"SimpleReservationUnitsCtrl as vm",routeBranch:"new-reservation",hideSidebar:!0,userTasksPolicy:!1,translations:["simple-reservation","reservations"],resolve:{resUnits:["$route","$filter","state","helper","dwAlerts","calendarService","resolveTimezone",function(e,t,r,n,o,a,s){return s().then((function(){var r=t("toDate")(e.current.params.date);return r=moment.isMoment(r)?r:moment(),a.query(e.current.params.centerId,r,r).catch((function(e){return o.error(e,"Failed to fetch calendar data.")})).then((function(t){return(i()(n).call(n,t,e.current.params.reservationTypeId)||{}).reservationUnits||[]}))}))}],center:["$route","dwAlerts","centerService",function(e,t,r){return r.get(e.current.params.centerId).catch((function(e){return t.error(e,"Failed to get center.")}))}],settings:["dwAlerts","setupService",function(e,t){return t.getSetupSettings().catch((function(t){return e.error(t,"Failed to get setup settings.")}))}],lazy:"lazyLoadSimpleReservation"}}),e.when("/simple-reservation/centers/:centerId/types/:reservationTypeId/dates/:date/units/:reservationUnitId",{template:"<div ng-include=\"'06-time/simple-reservation-time.tpl.html'\"></div>",controller:"SimpleReservationTimeCtrl as $ctrl",reloadOnSearch:!1,routeBranch:"new-reservation",hideSidebar:!0,userTasksPolicy:!1,translations:["simple-reservation","reservations"],resolve:{center:["$route","dwAlerts","centerService",function(e,t,r){return r.get(e.current.params.centerId).catch((function(e){return t.error(e,"Failed to get center.")}))}],calData:["$route","$filter","state","helper","dwAlerts","calendarService","resolveTimezone",function(e,t,r,n,o,a,i){return i().then((function(){var n=t("toDate")(e.current.params.date||r.getParam("date"));return n=moment.isMoment(n)?n:moment(),a.query(e.current.params.centerId,n,n,r.getParam("role")).catch((function(e){return o.error(e,"Failed to fetch calendar data.")}))}))}],settings:["dwAlerts","setupService",function(e,t){return t.getSetupSettings().catch((function(t){return e.error(t,"Failed to get setup settings.")}))}],reservationFields:["dwAlerts","ReservationField","session",function(e,t,r){return r.wait().catch(angular.noop).then((function(){return t.query().catch((function(t){return e.error(t,"Failed to query reservation fields.")}))}))}],lazy:"lazyLoadSimpleReservation"}}),e.when("/simple-reservation/centers/:centerId/types/:reservationTypeId/dates/:date/units/:reservationUnitId/users",{template:"<div ng-include=\"'other/simple-reservation-sign-in.tpl.html'\"></div>",controller:"SimpleReservationSignInCtrl as vm",routeBranch:"new-reservation",hideSidebar:!0,userTasksPolicy:!1,translations:["sign-in"],resolve:{redirect:["$q","state",function(e,t){return t.isLoggedNonMember()?(t.setPath(t.getPath()+"/"+t.getLoggedUserId(),!0),e.reject()):t.getLoggedUserId()?(t.setPath(t.getPath()+"/"+t.getLoggedUserId()+"/confirm",!0),e.reject()):void 0}],lazy:"lazyLoadSimpleReservation"}}),e.when("/simple-reservation/centers/:centerId/types/:reservationTypeId/dates/:date/units/:reservationUnitId/users/:userId",{template:"<div ng-include=\"'templates/new-user-profile.tpl.html'\"></div>",controller:"SimpleReservationUserProfileCtrl as vm",routeBranch:"new-reservation",hideSidebar:!0,userTasksPolicy:!1,translations:["user-profile"],resolve:{reg:["$route",function(e){return{member:!1,selfRegistration:!0,new:"new"===e.current.params.userId}}],userProfile:["dwAlerts","$route","helper","state","routeHelper","userProfileService","centerService",function(e,r,n,o,a,i,s){return"new"===r.current.params.userId?s.get(r.current.params.centerId).then((function(t){return i.new(t,"nonMember","signUp").catch((function(t){return e.error(t,"Failed to get new member profile template.")}))})):t(r,n,a).then((function(){return i.getForRegistration(r.current.params.centerId,r.current.params.userId,"nonMember","signUp").catch((function(t){return e.error(t,"Failed to get user profile.")}))}))}],lazy:"lazyLoadSimpleReservation"}}),e.when("/simple-reservation/centers/:centerId/types/:reservationTypeId/dates/:date/units/:reservationUnitId/users/:userId/confirm",{template:"<div ng-include=\"'other/confirm.tpl.html'\"></div>",controller:"SimpleReservationConfirmCtrl",controllerAs:"vm",routeBranch:"new-reservation",hideSidebar:!0,userTasksPolicy:!1,translations:["simple-reservation","reservations"],resolve:{center:["$route","dwAlerts","centerService",function(e,t,r){return r.get(e.current.params.centerId).catch((function(e){return t.error(e,"Failed to get center.")}))}],reservationUnit:["$route","dwAlerts","helper","routeHelper","ReservationUnit",function(e,r,n,o,a){return t(e,n,o).then((function(){return a.get(e.current.params.centerId,e.current.params.reservationUnitId).catch((function(e){return r.error(e,"Failed to get reservation unit.")}))}))}],settings:["dwAlerts","setupService",function(e,t){return t.getSetupSettings().catch((function(t){return e.error(t,"Failed to get setup settings.")}))}],reservationFields:["dwAlerts","ReservationField","session",function(e,t,r){return r.wait().catch(angular.noop).then((function(){return t.query().catch((function(t){return e.error(t,"Failed to query reservation fields.")}))}))}],lazy:"lazyLoadSimpleReservation"}}),e.when("/simple-reservation/centers/:centerId/types/:reservationTypeId/dates/:date/units/:reservationUnitId/users/:userId/purchases/:purchaseId",{template:"<div ng-include=\"'08-purchase/purchase.tpl.html'\"></div>",controller:"SimpleReservationPurchaseCtrl",controllerAs:"vm",routeBranch:"new-reservation",hideSidebar:!0,userTasksPolicy:!1,reloadOnSearch:!1,translations:["simple-reservation","reservations","purchase","billing-profile"],resolve:{reg:function(){return{member:!1,selfRegistration:!0}},center:["$route","dwAlerts","centerService",function(e,t,r){return r.get(e.current.params.centerId).catch((function(e){return t.error(e,"Failed to get center.")}))}],purchase:["$route","dwAlerts","helper","routeHelper","purchaseService","resolveTimezone",function(e,r,n,o,a,i){return t(e,n,o).then((function(){return i()})).then((function(){return a.get(e.current.params.centerId,e.current.params.userId,e.current.params.purchaseId).catch((function(e){return r.error(e,"Failed to get purchase.")}))}))}],reservationUnit:["$route","dwAlerts","ReservationUnit",function(e,t,r){return r.get(e.current.params.centerId,e.current.params.reservationUnitId).catch((function(e){return t.error(e,"Failed to get reservation unit.")}))}],userProfile:["$q","$route","dwAlerts","helper","state","routeHelper","userProfileService","resolveTimezone",function(e,r,n,o,a,i,s,l){return t(r,o,i).then((function(){return l()})).then((function(){return s.get(r.current.params.centerId,r.current.params.userId).catch((function(e){return n.error(e,"Failed to get user profile.")}))}))}],settings:["dwAlerts","setupService",function(e,t){return t.getSetupSettings().catch((function(t){return e.error(t,"Failed to get setup settings.")}))}],reservationFields:["dwAlerts","ReservationField","session",function(e,t,r){return r.wait().catch(angular.noop).then((function(){return t.query().catch((function(t){return e.error(t,"Failed to query reservation fields.")}))}))}],lazy:"lazyLoadSimpleReservation"}}),e.when("/simple-reservation/centers/:centerId/types/:reservationTypeId/dates/:date/units/:reservationUnitId/users/:userId/purchases/:purchaseId/staff-help",{template:"<div ng-include=\"'staff-help/staff-help.tpl.html'\"></div>",controller:"StaffHelpCtrl",controllerAs:"vm",routeBranch:"new-reservation",hideSidebar:!0,userTasksPolicy:!1,translations:["simple-reservation"],resolve:{user:["$route","helper","routeHelper",function(e,r,n){return t(e,r,n)}],lazy:"lazyLoadSimpleReservation"}}),e.when("/simple-reservation/centers/:centerId/types/:reservationTypeId/dates/:date/units/:reservationUnitId/users/:userId/purchases/:purchaseId/complete",{template:"<div ng-include=\"'other/complete.tpl.html'\"></div>",controller:"SimpleReservationCompleteCtrl",routeBranch:"new-reservation",controllerAs:"vm",hideSidebar:!0,translations:["simple-reservation","purchase"],userTasksPolicy:!1,resolve:{reg:function(){return{member:!1,selfRegistration:!0}},purchase:["$route","dwAlerts","state","helper","routeHelper","purchaseService","resolveTimezone",function(e,r,n,o,a,i,s){return t(e,o,a).then((function(){return s()})).then((function(){return i.get(e.current.params.centerId,e.current.params.userId,e.current.params.purchaseId).catch((function(e){return r.error(e,"Failed to get purchase.")}))}))}],center:["$route","dwAlerts","centerService",function(e,t,r){return r.get(e.current.params.centerId).catch((function(e){return t.error(e,"Failed to get center.")}))}],settings:["dwAlerts","setupService",function(e,t){return t.getSetupSettings().catch((function(t){return e.error(t,"Failed to get setup settings.")}))}],lazy:"lazyLoadSimpleReservation"}}),e.when("/simple-reservation/complete",{template:"<div ng-include=\"'other/complete.tpl.html'\"></div>",controller:"SimpleReservationCompleteCtrl as vm",routeBranch:"new-reservation",hideSidebar:!0,userTasksPolicy:!1,translations:["simple-reservation"],resolve:{purchase:function(){},center:function(){},auth:["$route","helper","routeHelper",function(e,r,n){return t(e,r,n)}],settings:["dwAlerts","setupService",function(e,t){return t.getSetupSettings().catch((function(t){return e.error(t,"Failed to get setup settings.")}))}],lazy:"lazyLoadSimpleReservation"}})}])},"8ASL":function(e,t,r){"use strict";r.r(t);r("kYjL");var n=r("2/1H");t.default=angular.module("deskworks.inventory",["ngRoute","deskworks.routeHelper","deskworks.dwAlerts","deskworks.center.service","deskworks.inventory.membershipCategory.service","deskworks.reservationCategory.service","deskworks.inventory.priceList.service","deskworks.inventory.product.service","deskworks.ProductCategory","deskworks.lazyLoaders",n.a.name]).config(["$routeProvider",function(e){e.when("/membership-types",{template:"<div ng-include=\"'membership-category/membership-category-list.tpl.html'\"></div>",controller:"MembershipCategoryListCtrl as vm",label:"Membership Categories",routeBranch:"membership-types",translations:["membership-categories"],resolve:{membershipCategories:["dwAlerts","membershipCategoryService","routeHelper",function(e,t,r){return r.auth().then((function(){return t.query().catch((function(t){return e.error(t,"Failed to query membership categories.")}))}))}],lazy:"lazyLoadInventory"}}),e.when("/membership-types/:membershipCategoryId",{template:"<div ng-include=\"'membership-category/membership-category-edit.tpl.html'\"></div>",controller:"MembershipCategoryEditCtrl as vm",label:"Edit",routeBranch:"membership-types",translations:["membership-categories"],resolve:{membershipCategories:["dwAlerts","membershipCategoryService","routeHelper",function(e,t,r){return r.auth().then((function(){return t.query().catch((function(t){return e.error(t,"Failed to query membership categories.")}))}))}],lazy:"lazyLoadInventory"}}),e.when("/pricelists",{template:"<div ng-include=\"'price-list/price-list-list.tpl.html'\"></div>",controller:"PriceListListCtrl as vm",label:"Price Lists",routeBranch:"pricelists",reloadOnSearch:!1,translations:["price-lists","reports"],resolve:{priceLists:["dwAlerts","priceListService","state","routeHelper",function(e,t,r,n){return n.auth().then((function(){return t.getPricelists(r.getCurrentCenterId()).catch((function(t){return e.error(t,"Failed to query price lists.")}))}))}],centers:["dwAlerts","centerService",function(e,t){return t.getCenters().catch((function(t){return e.error(t,"Failed to query centers.")}))}],lazy:"lazyLoadInventory"}}),e.when("/pricelists/:priceListId",{template:"<div ng-include=\"'price-list/price-list-edit.tpl.html'\"></div>",controller:"PriceListEditCtrl as vm",label:"Edit",routeBranch:"pricelists",translations:["price-lists","products"],resolve:{priceList:["$route","dwAlerts","priceListService","state","routeHelper",function(e,t,r,n,o){return o.auth().then((function(){return r.getPricelist(n.getCurrentCenterId(),e.current.params.priceListId).catch((function(e){return t.error(e,"Failed to get price list.")}))}))}],lazy:"lazyLoadInventory"}}),e.when("/products",{template:"<div ng-include=\"'product/product-list.tpl.html'\"></div>",controller:"ProductListCtrl as vm",label:"Products",routeBranch:"products",translations:["products"],resolve:{products:["dwAlerts","productService","routeHelper",function(e,t,r){return r.auth().then((function(){return t.getProducts().catch((function(t){return e.error(t,"Failed to query products.")}))}))}],lazy:"lazyLoadInventory"}}),e.when("/products/:productId",{template:"<div ng-include=\"'product/product-edit.tpl.html'\"></div>",controller:"ProductEditCtrl as vm",label:"Edit",routeBranch:"products",translations:["products","recurring-billing","printer-usage-settings","user-types"],resolve:{product:["$route","dwAlerts","productService","routeHelper",function(e,t,r,n){return n.auth().then((function(){return r.getProduct(e.current.params.productId).catch((function(e){return t.error(e,"Failed to get product.")}))}))}],settings:["dwAlerts","setupService",function(e,t){return t.getSetupSettings().catch((function(t){return e.error(t,"Failed to get setup settings.")}))}],productCategories:["dwAlerts","ProductCategory","state","routeHelper",function(e,t,r,n){return n.auth().then((function(){return t.query(r.getCurrentCenterId()).catch((function(t){return e.error(t,"Failed to query product categories.")}))}))}],lazy1:"lazyLoadInventory",lazy2:"lazyLoadQuickBooks",lazy3:"lazyLoadDeskworksSweep"}}),e.when("/reservation-types",{template:"<div ng-include=\"'reservation-category/reservation-category-list.tpl.html'\"></div>",controller:"InventoryReservationCategoriesCtrl as vm",label:"Reservation Categories",routeBranch:"reservation-types",translations:["reservation-categories"],resolve:{reservationCategories:["dwAlerts","reservationCategoryService","state","routeHelper",function(e,t,r,n){return n.auth().then((function(){return t.query(r.getCurrentCenterId()).catch((function(t){return e.error(t,"Failed to query reservation categories.")}))}))}],lazy:"lazyLoadInventory"}}),e.when("/reservation-types/:reservationTypeId",{template:"<div ng-include=\"'reservation-category/reservation-category-edit.tpl.html'\"></div>",controller:"InventoryReservationCategoryEditCtrl as vm",label:"Edit",routeBranch:"reservation-types",translations:["reservation-categories","reservation-units"],resolve:{reservationCategory:["$route","dwAlerts","reservationCategoryService","state","routeHelper",function(e,t,r,n,o){return o.auth().then((function(){return r.get(n.getCurrentCenterId(),e.current.params.reservationTypeId).catch((function(e){return t.error(e,"Failed to get reservation category.")}))}))}],reservationCategories:["dwAlerts","reservationCategoryService","state","routeHelper",function(e,t,r,n){return n.auth().then((function(){return t.query(r.getCurrentCenterId()).catch((function(t){return e.error(t,"Failed to query reservation categories.")}))}))}],lazy:"lazyLoadInventory"}}),e.when("/reservation-units",{template:"<div ng-include=\"'reservation-unit/reservation-unit-list.tpl.html'\"></div>",controller:"InventoryReservationUnitListCtrl as vm",label:"Reservation Units",routeBranch:"reservation-units",translations:["reservation-units","reservation-rules"],resolve:{reservationUnits:["dwAlerts","ReservationUnit","state","routeHelper",function(e,t,r,n){return n.auth().then((function(){return t.query(r.getCurrentCenterId()).catch((function(t){return e.error(t,"Failed to query reservation units.")}))}))}],lazy:"lazyLoadInventory"}}),e.when("/reservation-units/:reservationUnitId",{template:"<div ng-include=\"'reservation-unit/reservation-unit-edit.tpl.html'\"></div>",controller:"InventoryReservationUnitEditCtrl as $ctrl",label:"Edit",routeBranch:"reservation-units",translations:["reservation-units","reservation-rules"],resolve:{unit:["$route","dwAlerts","ReservationUnit","state","routeHelper",function(e,t,r,n,o){return o.auth().then((function(){return r.get(n.getCurrentCenterId(),e.current.params.reservationUnitId).catch((function(e){return t.error(e,"Failed to get reservation unit.")}))}))}],categories:["dwAlerts","reservationCategoryService","state",function(e,t,r){return t.query(r.getCurrentCenterId()).catch((function(t){return e.error(t,"Failed to query reservation categories.")}))}],lazy:"lazyLoadInventory"}}),e.when("/product-categories",{template:"<div ng-include=\"'product-categories/product-categories.tpl.html'\"></div>",controller:"ProductCategoriesCtrl as $ctrl",label:"Product Categories",routeBranch:"product-categories",translations:["product-categories"],resolve:{categories:["dwAlerts","ProductCategory","state","routeHelper",function(e,t,r,n){return n.auth().then((function(){return t.query().catch((function(t){return e.error(t,"Failed to query product categories.")}))}))}],lazy:"lazyLoadInventory"}}),e.when("/discount-codes",{template:"<div ng-include=\"'discount-codes/discount-codes.tpl.html'\"></div>",controller:"DiscountCodesCtrl as $ctrl",routeBranch:"discount-codes",translations:["discount-codes"],resolve:{auth:["routeHelper",function(e){return e.auth()}],lazy:"lazyLoadInventory"}}),e.when("/user-types",{template:"<div ng-include=\"'user-types/user-types.tpl.html'\"></div>",controller:"UserTypesCtrl as $ctrl",routeBranch:"user-types",translations:["user-types"],resolve:{auth:["routeHelper",function(e){return e.auth()}],lazy:"lazyLoadInventory"}})}])},"9tHT":function(e,t,r){"use strict";r.r(t);r("kYjL");var n=r("sh/D");t.default=angular.module("deskworks.reservationTablet",["ngStorage","ngRoute","deskworks.routeHelper","deskworks.dwAlerts","deskworks.calendarService","deskworks.center.service","deskworks.userProfile.service","deskworks.lazyLoaders",n.a.name]).config(["$routeProvider",function(e){e.when("/reservation-tablet-setup",{template:"<div ng-include=\"'reservation-tablet-setup/setup.tpl.html'\"></div>",controller:"ReservationTabletSetupCtrl as $ctrl",routeBranch:"reservation-tablet-setup",translations:["reservation-tablet"],resolve:{categories:["dwAlerts","state","routeHelper","calendarService",function(e,t,r,n){return r.auth().then((function(){return n.query(t.getCurrentCenterId()).catch((function(t){return e.error(t,"Failed to get calendar data.")}))}))}],lazy:"lazyReservationTablet"}});var t="/reservation-tablet-wizard/sign-in";e.when("/reservation-tablet-wizard",{template:"<div ng-include=\"'reservation-tablet-wizard/01-schedule.tpl.html'\"></div>",controller:"ReservationTabletScheduleCtrl as $ctrl",routeBranch:"reservation-tablet-wizard",hideSidebar:!0,userTasksPolicy:!1,translations:["reservation-tablet"],resolve:{lazy:"lazyReservationTablet",validate:["validateReservationTablet",function(e){return e()}]}}),e.when("/reservation-tablet-wizard/sign-in",{template:"<div ng-include=\"'reservation-tablet-wizard/02-sign-in.tpl.html'\"></div>",controller:"ReservationTabletSignInCtrl as $ctrl",routeBranch:"reservation-tablet-wizard",hideSidebar:!0,userTasksPolicy:!1,reloadOnSearch:!1,translations:["sign-in"],resolve:{lazy:"lazyReservationTablet",validate:["validateReservationTablet",function(e){return e()}]}}),e.when("/reservation-tablet-wizard/reserve",{template:"<div ng-include=\"'reservation-tablet-wizard/03-reserve.tpl.html'\"></div>",controller:"ReservationTabletReserveCtrl as $ctrl",routeBranch:"reservation-tablet-wizard",hideSidebar:!0,reloadOnSearch:!1,userTasksPolicy:!1,translations:["reservations"],resolve:{user:["$q","userProfileService","state","dwAlerts","routeHelper","resolveTimezone",function(e,r,n,o,a,i){return e.all([a.auth(t),i()]).then((function(){return r.get(n.getCurrentCenterId(),n.getCurrentUserId()).catch((function(e){return o.error(e,"Failed to get user profile.")}))}))}],center:["state","dwAlerts","centerService","routeHelper",function(e,r,n,o){return o.auth(t).then((function(){return n.get(e.getCurrentCenterId()).catch((function(e){return r.error(e,"Failed to get center.")}))}))}],calData:["$q","$filter","state","helper","dwAlerts","calendarService","routeHelper","resolveTimezone",function(e,r,n,o,a,i,s,l){return e.all([s.auth(t),l()]).then((function(){var e=r("toDate")(n.getParam("date"),"Z");return e=moment.isMoment(e)?e:moment(),i.query(n.getCurrentCenterId(),e,e,n.getParam("role")).catch((function(e){return a.error(e,"Failed to fetch calendar data.")}))}))}],reservationFields:["dwAlerts","ReservationField","session",function(e,t,r){return r.wait().catch(angular.noop).then((function(){return t.query().catch((function(t){return e.error(t,"Failed to query reservation fields.")}))}))}],lazy:"lazyReservationTablet",validate:["validateReservationTablet",function(e){return e()}]}}),e.when("/reservation-tablet-wizard/complete",{template:"<div ng-include=\"'reservation-tablet-wizard/04-complete.tpl.html'\"></div>",controller:"ReservationTabletCompleteCtrl as $ctrl",routeBranch:"reservation-tablet-wizard",hideSidebar:!0,reloadOnSearch:!1,userTasksPolicy:!1,translations:["reservation-tablet"],resolve:{lazy:"lazyReservationTablet",validate:["validateReservationTablet",function(e){return e()}]}})}]).factory("validateReservationTablet",["$localStorage","$route","dwAlerts","state",function(e,t,r,n){return function(){e.reservationTablet=e.reservationTablet||{};var o=e.reservationTablet,a="Missing $localStorage.reservationTablet";if(!o.centerId)return r.error("".concat(a,".centerId"));if(!o.login)return r.error("".concat(a,".login"));if(!o.password)return r.error("".concat(a,".password"));if(!o.unitId)return r.error("".concat(a,".unitId"));if(o.unitId!==+n.getParam("unit"))throw n.setParam("unit",o.unitId),t.reload(),!1;return!0}}])},Hn7Y:function(e,t,r){"use strict";r.r(t);r("kYjL");var n=r("2/1H"),o=r("sh/D"),a=r("03gP");t.default=angular.module("deskworks.reservations",["deskworks.state","deskworks.routeHelper","deskworks.setup.service","deskworks.userProfile.service","deskworks.center.service","deskworks.calendarService","deskworks.ReservationPrice","deskworks.lazyLoaders",n.a.name,o.a.name,a.a.name]).config(["$routeProvider",function(e){e.when("/reservations",{template:"<div ng-include=\"'user-reservations/user-reservations.tpl.html'\"></div>",controller:"UserReservationsCtrl as $ctrl",label:"Reservations",routeBranch:"reservations",translations:["user-reservations"],resolve:{reservationUnits:["dwAlerts","routeHelper","state","ReservationUnit",function(e,t,r,n){return t.auth().then((function(){return n.query(r.getCurrentCenterId()).catch((function(t){return e.error(t,"Failed to query reservation units.")}))}))}],user:["dwAlerts","userProfileService","state","routeHelper",function(e,t,r,n){return n.auth().then((function(){return n.selectUser().then((function(){return t.get(r.getCurrentCenterId(),r.getCurrentUserId()).catch((function(t){return e.error(t,"Failed to get user profile.")}))}))}))}],settings:["dwAlerts","setupService",function(e,t){return t.getSetupSettings().catch((function(t){return e.error(t,"Failed to get setup settings.")}))}],reservationFields:["dwAlerts","ReservationField",function(e,t){return t.query().catch((function(t){return e.error(t,"Failed to query reservation fields.")}))}],lazy:"lazyLoadReservations"}}),e.when("/reservation-calendar",{template:'\n<rc-calendar cal-data="$resolve.calData" settings="$resolve.settings" ff-bulk-read-only\n reservation-fields="$resolve.reservationFields" cal-data-pre-process="$resolve.bayCalDataPreProcess($params)"></rc-calendar>',label:"Reservation Calendar",routeBranch:"reservation-calendar",reloadOnSearch:!1,hideBanner:!0,translations:["reservations"],resolve:{calData:["$q","$filter","state","helper","routeHelper","dwAlerts","calendarService","rcHelper","resolveTimezone",function(e,t,r,n,o,a,i,s,l){return e.all([o.auth(),l()]).then((function(){var e=t("toDate")(r.getParam("date"),"Z");return e=moment.isMoment(e)?e:moment(),i.query(r.getCurrentCenterId(),e,e,r.getParam("role")).catch((function(e){return a.error(e,"Failed to fetch calendar data.")}))}))}],settings:["dwAlerts","setupService",function(e,t){return t.getSetupSettings().catch((function(t){return e.error(t,"Failed to get setup settings.")}))}],reservationFields:["dwAlerts","ReservationField","session",function(e,t,r){return r.wait().catch(angular.noop).then((function(){return t.query().catch((function(t){return e.error(t,"Failed to query reservation fields.")}))}))}],lazy:"lazyLoadReservations",bayCalDataPreProcess:"bayCalDataPreProcess"}}),e.when("/new-reservation",{template:'<res-reservation center="$resolve.center" user="$resolve.user" cal-data="$resolve.calData" hide-reservation-cost-estimate="$resolve.settings.hideReservationCostEstimate" hide-recurring-reservations="$resolve.settings.hideRecurringReservations" hide-staff-only-units="$resolve.settings.hideStaffOnlyUnits" reservation-prices="$resolve.reservationPrices" reservation-fields="$resolve.reservationFields"></res-reservation>',label:"New Reservation",routeBranch:"new-reservation",hideBanner:!0,reloadOnSearch:!1,translations:["reservations"],userTasksPolicy:!1,resolve:{user:["$q","userProfileService","state","dwAlerts","routeHelper","resolveTimezone",function(e,t,r,n,o,a){return e.all([o.auth(),a()]).then((function(){return t.get(r.getCurrentCenterId(),r.getCurrentUserId()).catch((function(e){return n.error(e,"Failed to get user profile.")}))}))}],center:["state","dwAlerts","centerService","routeHelper",function(e,t,r,n){return n.auth().then((function(){return r.get(e.getCurrentCenterId()).catch((function(e){return t.error(e,"Failed to get center.")}))}))}],calData:["$q","$filter","state","helper","dwAlerts","calendarService","routeHelper","resolveTimezone",function(e,t,r,n,o,a,i,s){return e.all([i.auth(),s()]).then((function(){var e=t("toDate")(r.getParam("date"),"Z");return e=moment.isMoment(e)?e:moment(),a.query(r.getCurrentCenterId(),e,e,r.getParam("role")).catch((function(e){return o.error(e,"Failed to fetch calendar data.")}))}))}],reservationPrices:["state","dwAlerts","ReservationPrice","routeHelper",function(e,t,r,n){return n.auth().then((function(){return r.query(e.getCurrentCenterId(),e.getCurrentUserId()).catch((function(e){return t.error(e,"Failed to query reservation prices.")}))}))}],settings:["dwAlerts","setupService",function(e,t){return t.getSetupSettings().catch((function(t){return e.error(t,"Failed to get setup settings.")}))}],reservationFields:["dwAlerts","ReservationField",function(e,t){return t.query().catch((function(t){return e.error(t,"Failed to query reservation fields.")}))}],lazy:"lazyLoadReservations"}}),e.when("/edit-reservation/:reservationId",{template:'<res-reservation center="$resolve.center" user="$resolve.user" cal-data="$resolve.calData" hide-reservation-cost-estimate="$resolve.settings.hideReservationCostEstimate" hide-staff-only-units="$resolve.settings.hideStaffOnlyUnits" reservation-prices="$resolve.reservationPrices" reservation-fields="$resolve.reservationFields" ff-bulk-read-only></res-reservation>',label:"Edit Reservation",routeBranch:"reservation-calendar",reloadOnSearch:!1,hideBanner:!0,translations:["reservations"],resolve:{user:["$q","userProfileService","state","dwAlerts","routeHelper","resolveTimezone",function(e,t,r,n,o,a){return e.all([o.auth(),a()]).then((function(){return t.get(r.getCurrentCenterId(),r.getCurrentUserId()).catch((function(e){return n.error(e,"Failed to get user profile.")}))}))}],center:["state","dwAlerts","centerService","routeHelper",function(e,t,r,n){return n.auth().then((function(){return r.get(e.getCurrentCenterId()).catch((function(e){return t.error(e,"Failed to get center.")}))}))}],calData:["$q","$filter","state","helper","dwAlerts","calendarService","routeHelper","resolveTimezone",function(e,t,r,n,o,a,i,s){return e.all([i.auth(),s()]).then((function(){var e=t("toDate")(r.getParam("date"),"Z");return e=moment.isMoment(e)?e:moment(),a.query(r.getCurrentCenterId(),e,e,r.getParam("role")).catch((function(e){return o.error(e,"Failed to fetch calendar data.")}))}))}],reservationPrices:["state","dwAlerts","ReservationPrice","routeHelper",function(e,t,r,n){return n.auth().then((function(){return r.query(e.getCurrentCenterId(),e.getCurrentUserId()).catch((function(e){return t.error(e,"Failed to query reservation prices.")}))}))}],settings:["dwAlerts","setupService",function(e,t){return t.getSetupSettings().catch((function(t){return e.error(t,"Failed to get setup settings.")}))}],reservationFields:["dwAlerts","ReservationField",function(e,t){return t.query().catch((function(t){return e.error(t,"Failed to query reservation fields.")}))}],lazy:"lazyLoadReservations"}})}])},LRO4:function(e,t,r){"use strict";r.r(t);r("kYjL");t.default=angular.module("deskworks.terminationRequest",["ngRoute","deskworks.routeHelper","deskworks.lazyLoaders"]).config(["$routeProvider",function(e){e.when("/termination-request",{template:"<div ng-include=\"'termination-request/termination-request.tpl.html'\"></div>",controller:"TerminationRequestCtrl as $ctrl",routeBranch:"termination-request",translations:["termination-request"],resolve:{recurringCharges:["dwAlerts","recurringChargeService","state","routeHelper",function(e,t,r,n){return n.auth().then((function(){return n.selectUser()})).then((function(){return t.query(r.getCurrentCenterId(),r.getCurrentUserId()).catch((function(t){return e.error(t,"Failed to query recurring charges.")}))}))}],lazy:"lazyLoadTerminationRequest"}})}])},Lgk8:function(e,t,r){"use strict";r.r(t);r("kYjL");t.default=angular.module("deskworks.paymentsAssignment",["ngRoute","deskworks.routeHelper","deskworks.lazyLoaders"]).config(["$routeProvider",function(e){e.when("/bulk-payments-assignment",{template:"<div ng-include=\"'bulk-assignment/bulk-assignment.tpl.html'\"></div>",controller:"BulkPaymentsAssignmentCtrl as $ctrl",routeBranch:"bulk-payments-assignment",reloadOnSearch:!1,translations:["payments-assignment","bulk-invoicing","purchase"],resolve:{auth:["routeHelper",function(e){return e.auth()}],lazy:"lazyLoadPaymentsAssignment"}})}])},LzLv:function(e,t,r){"use strict";r.r(t);r("kYjL");var n=r("d4ov");t.default=angular.module("deskworks.setup",["ngRoute","deskworks.routeHelper","deskworks.dwAlerts","deskworks.setup.service","deskworks.bank.service","deskworks.center.service","deskworks.allowedHost.service","deskworks.Task","deskworks.Admin","deskworks.Owner","deskworks.Region",n.a.name,"deskworks.Roles","deskworks.lazyLoaders"]).config(["$routeProvider",function(e){e.when("/setup/settings",{template:"<div ng-include=\"'settings/settings.tpl.html'\"></div>",controller:"SetupSettingsCtrl as vm",label:"Setup Settings",routeBranch:"setup/settings",translations:["setup-settings"],resolve:{settings:["dwAlerts","setupService","state","routeHelper",function(e,t,r,n){return n.auth().then((function(){return t.getSetupSettings().catch((function(t){return e.error(t,"Failed to get setup settings.")}))}))}],locales:["dwAlerts","setupService",function(e,t){return t.queryLocales().catch((function(t){return e.error(t,"Failed to query locales.")}))}],lazy1:"lazyLoadSetup",lazy2:"lazyLoadAffiliatly"}}),e.when("/setup/bar-upload-settings",{template:"<div ng-include=\"'bar-upload-settings/bar-upload-settings.tpl.html'\"></div>",controller:"BarUploadSettingsCtrl as vm",label:"Bar Upload Settings",routeBranch:"setup/bar-upload-settings",translations:["bar-upload-settings"],resolve:{settings:["dwAlerts","setupService","state","routeHelper",function(e,t,r,n){return n.auth().then((function(){return t.getBarUploadSettings(r.getCurrentCenterId()).catch((function(t){return e.error(t,"Failed to get bar upload settings.")}))}))}],lazy:"lazyLoadSetup"}}),e.when("/banks",{template:"<div ng-include=\"'banks/banks.tpl.html'\"></div>",controller:"SetupBanksCtrl as $ctrl",label:"Banks",routeBranch:"banks",translations:["banks"],resolve:{banks:["dwAlerts","bankService","state","routeHelper",function(e,t,r,n){return n.auth().then((function(){return t.query().catch((function(t){return e.error(t,"Failed to query banks.")}))}))}],lazy:"lazyLoadSetup"}}),e.when("/banks/:bankId",{template:"<div ng-include=\"'banks/bank-edit.tpl.html'\"></div>",controller:"SetupBankEditCtrl as $ctrl",label:"Bank Edit",routeBranch:"banks",translations:["banks"],resolve:{bank:["$route","dwAlerts","bankService","state","routeHelper",function(e,t,r,n,o){return o.auth().then((function(){return r.get(e.current.params.bankId).catch((function(e){return t.error(e,"Failed to get bank.")}))}))}],lazy:"lazyLoadSetup"}}),e.when("/centers",{template:"<div ng-include=\"'center/center-list.tpl.html'\"></div>",controller:"CenterListCtrl as vm",label:"Centers",routeBranch:"centers",translations:["centers"],resolve:{centers:["dwAlerts","centerService","routeHelper",function(e,t,r){return r.auth().then((function(){return t.getCenters().catch((function(t){return e.error(t,"Failed to query centers.")}))}))}],admin:["dwAlerts","Admin","routeHelper","state",function(e,t,r,n){return r.auth().then((function(){if(n.isLoggedAdmin())return t.get(n.getLoggedUserId()).catch((function(t){return e.error(t,"Failed to get admin.")}))}))}],lazy:"lazyLoadSetup"}}),e.when("/centers/:centerId",{template:"<div ng-include=\"'center/center-edit.tpl.html'\"></div>",controller:"CenterEditCtrl as vm",label:"Edit",routeBranch:"centers",translations:["centers","reservation-rules"],resolve:{center:["$route","dwAlerts","centerService","state","routeHelper",function(e,t,r,n,o){return o.auth().then((function(){return r.get(e.current.params.centerId).catch((function(e){return t.error(e,"Failed to get center.")}))}))}],settings:["dwAlerts","setupService",function(e,t){return t.getSetupSettings().catch((function(t){return e.error(t,"Failed to get setup settings.")}))}],lazy:"lazyLoadSetup"}}),e.when("/system-emails",{template:"<div ng-include=\"'system-email/system-email-list.tpl.html'\"></div>",controller:"SystemEmailListCtrl as $ctrl",label:"System Emails",routeBranch:"system-emails",translations:["system-emails"],resolve:{systemEmails:["dwAlerts","systemService","routeHelper",function(e,t,r){return r.auth().then((function(){return t.getSystemEmails().catch((function(t){return e.error(t,"Failed to query system emails.")}))}))}],lazy:"lazyLoadSetup"}}),e.when("/system-emails/:systemEmailId",{template:"<div ng-include=\"'system-email/system-email-edit.tpl.html'\"></div>",controller:"SystemEmailEditCtrl as $ctrl",label:"Edit",routeBranch:"system-emails",translations:["system-emails"],resolve:{systemEmail:["$route","dwAlerts","systemService","state","routeHelper",function(e,t,r,n,o){return o.auth().then((function(){return r.getSystemEmail(e.current.params.systemEmailId).catch((function(e){return t.error(e,"Failed to get system email.")}))}))}],lazy:"lazyLoadSetup"}}),e.when("/tasks",{template:"<div ng-include=\"'task/task-list.tpl.html'\"></div>",controller:"TaskListCtrl as $ctrl",label:"Tasks",routeBranch:"tasks",translations:["tasks"],resolve:{tasks:["dwAlerts","Task","state","routeHelper",function(e,t,r,n){return n.auth().then((function(){return t.query().catch((function(t){return e.error(t,"Failed to query tasks.")}))}))}],roles:["dwAlerts","Roles",function(e,t){return t.query().catch((function(t){return e.error(t,"Failed to query user roles.")}))}],lazy:"lazyLoadSetup"}}),e.when("/tasks/:taskId",{template:"<div ng-include=\"'task/task-edit.tpl.html'\"></div>",controller:"TaskEditCtrl as $ctrl",label:"Edit",routeBranch:"tasks",translations:["tasks"],resolve:{task:["$route","dwAlerts","Task","state","routeHelper",function(e,t,r,n,o){return o.auth().then((function(){return r.get(e.current.params.taskId).catch((function(e){return t.error(e,"Failed to get task.")}))}))}],roles:["dwAlerts","Roles",function(e,t){return t.query().catch((function(t){return e.error(t,"Failed to query user roles.")}))}],lazy:"lazyLoadSetup"}}),e.when("/setup/api-settings",{template:"<div ng-include=\"'api-settings/api-settings.tpl.html'\"></div>",controller:"ApiSettingsCtrl as $ctrl",label:"API Settings",routeBranch:"setup/api-settings",translations:["api-settings"],resolve:{allowedHosts:["dwAlerts","allowedHostService","routeHelper",function(e,t,r){return r.auth().then((function(){return t.query().catch((function(t){return e.error(t,"Failed to query allowed hosts.")}))}))}],lazy:"lazyLoadSetup"}}),e.when("/owners-regions",{template:"<div ng-include=\"'owners-regions/owners-regions.tpl.html'\"></div>",controller:"OwnersRegionsCtrl as $ctrl",label:"Owners & Regions",routeBranch:"owners-regions",translations:["owners-regions"],resolve:{owners:["dwAlerts","Owner","routeHelper",function(e,t,r){return r.auth().then((function(){return t.query().catch((function(t){return e.error(t,"Failed to query owners.")}))}))}],regions:["dwAlerts","Region","routeHelper",function(e,t,r){return r.auth().then((function(){return t.query().catch((function(t){return e.error(t,"Failed to query regions.")}))}))}],lazy:"lazyLoadSetup"}}),e.when("/user-fields",{template:"<div ng-include=\"'user-fields/user-fields.tpl.html'\"></div>",controller:"UserFieldsCtrl as $ctrl",routeBranch:"user-fields",translations:["form-design"],resolve:{userFields:["dwAlerts","UserField","routeHelper",function(e,t,r){return r.auth().then((function(){return t.query().catch((function(t){return e.error(t,"Failed to query user fields.")}))}))}],lazy:"lazyLoadSetup"}}),e.when("/reservation-fields",{template:"<div ng-include=\"'reservation-fields/reservation-fields.tpl.html'\"></div>",controller:"ReservationFieldsCtrl as $ctrl",routeBranch:"reservation-fields",translations:["form-design"],resolve:{auth:["routeHelper",function(e){return e.auth()}],lazy:"lazyLoadSetup"}}),e.when("/integrations-setup",{template:"<div ng-include=\"'integrations-setup/integrations-setup.tpl.html'\"></div>",controller:"IntegrationsSetupCtrl as $ctrl",label:"Integrations Setup",routeBranch:"integrations-setup",translations:["integrations-setup"],resolve:{lazy1:"lazyLoadSetup",lazy2:"lazyLoadAppointmentPlus",lazy3:"lazyLoadQuickBooks",lazy4:"lazyLoadTeamgo",lazy5:"lazyLoadKisi",lazy6:"lazyLoadEzeep",lazy7:"lazyLoadGreetly"}}),e.when("/bundles",{template:"<div ng-include=\"'bundles/bundles.tpl.html'\"></div>",controller:"BundlesCtrl as $ctrl",routeBranch:"bundles",userTasksPolicy:!1,resolve:{auth:["routeHelper","session","dwAlerts",function(e,t,r){return e.auth().then((function(){if(!t.isAdmin())return r.error("Insufficient permissions.")}))}],lazy:"lazyLoadSetup"}})}])},Ogbq:function(e,t,r){"use strict";r.r(t);var n=r("nbuU"),o=r.n(n),a=r("hsT8"),i=r.n(a),s=(r("kYjL"),r("c5i4"));t.default=angular.module("deskworks.memberSignUp",[s.a.name,"deskworks.lazyLoaders","deskworks.membership.service"]).config(["$routeProvider",function(e){e.when("/member-sign-up",{template:'<forbid admin="true" member="$resolve.user"><div><ng-include src="\'steps/01-membership.tpl.html\'"></ng-include></div></forbid>',controller:"MemberSignUpMembershipCtrl as vm",label:"New Membership",routeBranch:"member-sign-up",hideSidebar:!0,userTasksPolicy:!1,translations:["member-sign-up"],resolve:{reg:function(){return{member:!0,selfRegistration:!0,step:1,stepCount:3}},data:["$q","dwAlerts","centerService","setupService","state","filterHiddenCenters",function(e,t,r,n,o,a){return e.all({centers:r.getCenters().catch((function(e){return t.error(e,"Failed to query centers.")})).then(a),settings:n.getSetupSettings().catch((function(e){return t.error(e,"Failed to get setup settings.")}))}).then((function(e){return e.centers.length?e.settings.skipPlanMemberSignUp&&1===e.centers.length?(o.setCurrentCenterId(e.centers[0].id),o.setPath(o.getPath()+"/"+(o.getCurrentUserId()||"new"))):e:t.error("<b>No public centers.</b> At least one center needs <b>Center for Internal Use</b> setting <b>turned off.</b>")}))}],user:["session","state","userProfileService",function(e,t,r){return e.wait().then((function(){return e.isRole("member")?r.get(t.getCurrentCenterId(),e.user.id):null}))}],lazy1:"lazyMemberSignUp"}}),e.when("/member-sign-up-landing",{template:'<forbid admin="true" member="$resolve.user"><div><ng-include src="\'steps/01-landing.tpl.html\'"></ng-include></div></forbid>',controller:"MemberSignUpLandingCtrl as $ctrl",label:"New Membership",routeBranch:"member-sign-up",hideSidebar:!0,userTasksPolicy:!1,translations:["member-sign-up"],resolve:{reg:function(){return{member:!0,selfRegistration:!0,step:1,stepCount:3}},center:["dwAlerts","centerService","state",function(e,t,r){return t.get(r.getCurrentCenterId()).catch((function(t){return e.error(t,"Failed to get a center.")}))}],product:["dwAlerts","membershipService","state",function(e,t,r){return t.query(r.getCurrentCenterId()).catch((function(t){return e.error(t,"Failed to query membership categories.")})).then((function(t){var n,o=+r.getParam("productId");return t.some((function(e){return e.products.some((function(e){if(e.id===o)return n=e,!0}))})),n||e.error("No product with id="+r.getParam("productId")+" found in membership categories.")}))}],user:["session","state","userProfileService",function(e,t,r){return e.wait().then((function(){return e.isRole("member")?r.get(t.getCurrentCenterId(),e.user.id):null}))}],lazy1:"lazyMemberSignUp"}}),e.when("/member-sign-up/new",{template:'<forbid admin="true" member="$resolve.user"><div><ng-include src="\'templates/new-user-profile.tpl.html\'"></ng-include></div></forbid>',controller:"MemberSignUpProfileCtrl",controllerAs:"vm",label:"Member Sign Up",routeBranch:"member-sign-up",hideSidebar:!0,userTasksPolicy:!1,translations:["user-profile","member-sign-up"],resolve:{reg:["$q","helper","state","dwAlerts","centerService","setupService","filterHiddenCenters",function(e,t,r,n,a,i,s){return e.all({centers:a.getCenters().catch((function(e){return n.error(e,"Failed to query centers.")})).then(s),settings:i.getSetupSettings().catch((function(e){return n.error(e,"Failed to get setup settings.")}))}).then((function(e){return e.centers.length?e.settings.skipPlanMemberSignUp&&1===e.centers.length?{member:!0,selfRegistration:!0,step:1,stepCount:2,new:!0,phone:(o()(t).call(t,e.centers,r.getCurrentCenterId())||{}).phone}:{member:!0,selfRegistration:!0,step:2,stepCount:3,new:!0,phone:(o()(t).call(t,e.centers,r.getCurrentCenterId())||{}).phone}:n.error("<b>No public centers.</b> At least one center needs <b>Center for Internal Use</b> setting <b>turned off.</b>")}))}],userProfile:["dwAlerts","userProfileService","helper","state","centerService",function(e,t,r,n,o){return o.getCenter(n.getCurrentCenterId()).catch((function(t){return e.error(t,"Failed to get center.")})).then((function(r){return t.new(r,"member","signUp").catch((function(t){return e.error(t,"Failed to get new member profile template.")}))}))}],user:["session","state","userProfileService",function(e,t,r){return e.wait().then((function(){return e.isRole("member")?r.get(t.getCurrentCenterId(),e.user.id):null}))}],settings:["dwAlerts","setupService",function(e,t){return t.getSetupSettings().catch((function(t){return e.error(t,"Failed to get setup settings.")}))}],lazy1:"lazyMemberSignUp"}}),e.when("/member-sign-up/:userId",{template:'<forbid admin="true" member="$resolve.userProfile"><div><ng-include src="\'templates/new-user-profile.tpl.html\'"></ng-include></div></forbid>',controller:"MemberSignUpProfileCtrl",controllerAs:"vm",label:"Member Sign Up",routeBranch:"member-sign-up",hideSidebar:!0,userTasksPolicy:!1,translations:["user-profile","member-sign-up"],resolve:{reg:["$q","helper","state","dwAlerts","centerService","setupService","filterHiddenCenters",function(e,t,r,n,a,i,s){return e.all({centers:a.getCenters().catch((function(e){return n.error(e,"Failed to query centers.")})).then(s),settings:i.getSetupSettings().catch((function(e){return n.error(e,"Failed to get setup settings.")}))}).then((function(e){return e.centers.length?e.settings.skipPlanMemberSignUp&&1===e.centers.length?{member:!0,selfRegistration:!0,step:1,stepCount:2,phone:(o()(t).call(t,e.centers,r.getCurrentCenterId())||{}).phone}:{member:!0,selfRegistration:!0,step:2,stepCount:3,phone:(o()(t).call(t,e.centers,r.getCurrentCenterId())||{}).phone}:n.error("<b>No public centers.</b> At least one center needs <b>Center for Internal Use</b> setting <b>turned off.</b>")}))}],userProfile:["dwAlerts","$route","routeHelper","userProfileService","resolveTimezone",function(e,t,r,n,o){return r.auth().then((function(){return o()})).then((function(){return n.getForRegistration(0,t.current.params.userId,"member","signUp").catch((function(t){return e.error(t,"Failed to get user profile.")}))}))}],settings:["dwAlerts","setupService",function(e,t){return t.getSetupSettings().catch((function(t){return e.error(t,"Failed to get setup settings.")}))}],lazy1:"lazyMemberSignUp"}}),e.when("/member-sign-up/:userId/purchases/:purchaseId",{template:'<forbid admin="true" member="$resolve.userProfile"><div><ng-include src="\'steps/03-purchase.tpl.html\'"></ng-include></div></forbid>',controller:"MemberSignUpPurchaseCtrl",controllerAs:"vm",hideSidebar:!0,userTasksPolicy:!1,translations:["member-sign-up","purchase","billing-profile","simple-reservation"],resolve:{reg:function(){return{member:!0,selfRegistration:!0,step:3,stepCount:3}},center:["dwAlerts","state","centerService",function(e,t,r){return r.get(t.getCurrentCenterId()).catch((function(t){return e.error(t,"Failed to get center.")}))}],purchase:["$route","dwAlerts","state","routeHelper","purchaseService","resolveTimezone",function(e,t,r,n,o,a){return n.auth().then((function(){return a()})).then((function(){return o.get(r.getCurrentCenterId(),e.current.params.userId,e.current.params.purchaseId,r.getParam("productId")).catch((function(e){return t.error(e,"Failed to get purchase.")}))}))}],userProfile:["$q","$route","dwAlerts","state","routeHelper","userProfileService","resolveTimezone",function(e,t,r,n,o,a,i){return o.auth().then((function(){return i()})).then((function(){return a.get(n.getCurrentCenterId(),t.current.params.userId).catch((function(e){return r.error(e,"Failed to get user profile.")}))}))}],settings:["dwAlerts","setupService",function(e,t){return t.getSetupSettings().catch((function(t){return e.error(t,"Failed to get setup settings.")}))}],lazy1:"lazyMemberSignUp",lazy2:"lazyLoadAffiliatly"}}),e.when("/member-sign-up/:userId/purchases/:purchaseId/staff-help",{template:'<forbid admin="true"><div><ng-include src="\'staff-help/staff-help.tpl.html\'"></ng-include></div></forbid>',controller:"StaffHelpCtrl",controllerAs:"vm",hideSidebar:!0,userTasksPolicy:!1,translations:["simple-reservation"],resolve:{auth:["routeHelper",function(e){return e.auth()}],lazy1:"lazyMemberSignUp"}}),e.when("/member-sign-up/:userId/purchases/:purchaseId/complete",{template:'<forbid admin="true"><div><ng-include src="\'steps/04-complete.tpl.html\'"></ng-include></div></forbid>',controller:"MemberSignUpCompleteCtrl",controllerAs:"vm",hideSidebar:!0,userTasksPolicy:!1,translations:["member-sign-up","purchase","simple-reservation"],resolve:{reg:function(){return{member:!0,selfRegistration:!0}},purchase:["$route","dwAlerts","routeHelper","state","purchaseService","resolveTimezone",function(e,t,r,n,o,a){return r.auth().then((function(){return a()})).then((function(){return o.get(n.getCurrentCenterId(),e.current.params.userId,e.current.params.purchaseId).catch((function(e){return t.error(e,"Failed to get purchase.")}))}))}],center:["state","dwAlerts","centerService",function(e,t,r){return r.get(e.getCurrentCenterId()).catch((function(e){return t.error(e,"Failed to get center.")}))}],template:["state","dwAlerts","Notifications",function(e,t,r){return r.getEmailTemplate("receipt-page").catch((function(e){return t.error(e,"Failed to get receipt page settings.")}))}],lazy1:"lazyMemberSignUp"}}),e.when("/member-sign-up/:userId/billing",{template:'<forbid admin="true" member="$resolve.userProfile"><div><ng-include src="\'templates/new-billing-profile.tpl.html\'"></ng-include></div></forbid>',controller:"MemberSignUpNoPlanBillingCtrl",controllerAs:"vm",hideSidebar:!0,userTasksPolicy:!1,translations:["member-sign-up","billing-profile","user-profile"],resolve:{reg:["$q","helper","state","dwAlerts","centerService","setupService","filterHiddenCenters",function(e,t,r,n,a,i,s){return e.all({centers:a.getCenters().catch((function(e){return n.error(e,"Failed to query centers.")})).then(s),settings:i.getSetupSettings().catch((function(e){return n.error(e,"Failed to get setup settings.")}))}).then((function(e){return e.centers.length?e.settings.skipPlanMemberSignUp&&1===e.centers.length?{member:!0,selfRegistration:!0,step:2,stepCount:1,phone:(o()(t).call(t,e.centers,r.getCurrentCenterId())||{}).phone}:{member:!0,selfRegistration:!0,step:3,stepCount:2,phone:(o()(t).call(t,e.centers,r.getCurrentCenterId())||{}).phone}:n.error("<b>No public centers.</b> At least one center needs <b>Center for Internal Use</b> setting <b>turned off.</b>")}))}],userProfile:["$route","state","dwAlerts","routeHelper","userProfileService","resolveTimezone",function(e,t,r,n,o,a){return n.selectUser().then((function(){return a()})).then((function(){return o.get(t.getCurrentCenterId(),e.current.params.userId).catch((function(e){return r.error(e,"Failed to get user profile.")}))}))}],settings:["dwAlerts","setupService",function(e,t){return t.getSetupSettings().catch((function(t){return e.error(t,"Failed to get setup settings.")}))}],lazy:"lazyMemberSignUp"}}),e.when("/member-sign-up/:userId/billing/complete",{template:"<div><ng-include src=\"'steps/04-complete.tpl.html'\"></ng-include></div>",controller:"MemberSignUpNoPlanCompleteCtrl",controllerAs:"vm",hideSidebar:!0,userTasksPolicy:!1,translations:["member-sign-up"],resolve:{reg:function(){return{member:!0,selfRegistration:!0}},lazy:"lazyMemberSignUp"}})}]).factory("filterHiddenCenters",(function(){return function(e){return i()(e).call(e,(function(e){return!e.hideInMemberSignUp}))}})).factory("affiliatly",["$injector",function(e){return{markPurchase:function(t){if(e.has("Affiliatly"))return e.get("Affiliatly").markPurchase(t)}}}])},TUFL:function(e,t,r){"use strict";r.r(t);r("kYjL");t.default=angular.module("deskworks.printerUsage",["ngRoute","deskworks.routeHelper","deskworks.lazyLoaders"]).config(["$routeProvider",function(e){e.when("/setup/printer-usage-settings",{template:"<div ng-include=\"'settings/printer-usage-settings.tpl.html'\"></div>",controller:"PrinterUsageSettingsCtrl as $ctrl",routeBranch:"setup/printer-usage-settings",translations:["printer-usage-settings"],resolve:{auth:["routeHelper",function(e){return e.auth()}],lazy:"lazyLoadPrinterUsage"}}),e.when("/printer-usage",{template:"<div ng-include=\"'printer-usage/printer-usage-list.tpl.html'\"></div>",controller:"PrinterUsageListCtrl as $ctrl",routeBranch:"printer-usage",translations:["printer-usage"],resolve:{auth:["routeHelper",function(e){return e.auth()}],tz:["resolveTimezone",function(e){return e()}],lazy:"lazyLoadPrinterUsage"}}),e.when("/printer-usage/:printerUsageId",{template:"<div ng-include=\"'printer-usage/printer-usage-edit.tpl.html'\"></div>",controller:"PrinterUsageEditCtrl as $ctrl",routeBranch:"printer-usage",translations:["printer-usage"],resolve:{auth:["routeHelper",function(e){return e.auth()}],tz:["resolveTimezone",function(e){return e()}],lazy:"lazyLoadPrinterUsage"}})}])},beEi:function(e,t,r){"use strict";r.r(t);var n=r("nbuU"),o=r.n(n);r("kYjL");t.default=angular.module("deskworks.system",["ngRoute","deskworks.routeHelper","deskworks.dwAlerts","deskworks.accessCard.service","deskworks.system.service","deskworks.Admin","deskworks.lazyLoaders"]).config(["$routeProvider",function(e){e.when("/access-cards",{template:"<div ng-include=\"'access-card/access-card-list.tpl.html'\"></div>",controller:"AccessCardListCtrl as vm",label:"Access Cards",routeBranch:"access-cards",translations:["access-cards"],resolve:{accessCards:["dwAlerts","AccessCard","state","routeHelper",function(e,t,r,n){return n.auth().then((function(){return t.query({centerId:r.getCurrentCenterId()}).$promise.catch((function(t){return e.error(t,"Failed to query access cards.")}))}))}],center:["state","dwAlerts","centerService",function(e,t,r){return r.get(e.getCurrentCenterId()).catch((function(e){return t.error(e,"Failed to get center.")}))}],lazy:"lazyLoadSystem"}}),e.when("/access-cards/:accessCardId",{template:"<div ng-include=\"'access-card/access-card-edit.tpl.html'\"></div>",controller:"AccessCardEditCtrl as vm",label:"Edit",routeBranch:"access-cards",translations:["access-cards"],resolve:{accessCard:["$route","dwAlerts","AccessCard","state","helper","routeHelper",function(e,t,r,n,a,i){return i.auth().then((function(){return r.query({centerId:n.getCurrentCenterId()}).$promise.catch((function(e){return t.error(e,"Failed to query access cards.")})).then((function(t){return o()(a).call(a,t,e.current.params.accessCardId)}))}))}],user:["dwAlerts","state","userProfileService",function(e,t,r){return r.get(t.getCurrentCenterId(),t.getCurrentUserId()).catch((function(t){return e.error(t,"Failed to get user profile.")}))}],lazy:"lazyLoadSystem"}}),e.when("/administrators",{template:"<div ng-include=\"'administrator/administrator-list.tpl.html'\"></div>",controller:"AdministratorListCtrl as $ctrl",label:"Administrators",routeBranch:"administrators",translations:["administrators"],resolve:{admins:["dwAlerts","Admin","routeHelper",function(e,t,r){return r.auth().then((function(){return t.query().catch((function(t){return e.error(t,"Failed to query administrators.")}))}))}],lazy:"lazyLoadSystem"}}),e.when("/administrators/:adminId",{template:"<div ng-include=\"'administrator/administrator-edit.tpl.html'\"></div>",controller:"AdminEditCtrl as $ctrl",label:"Edit",routeBranch:"administrators",translations:["administrators","user-profile"],resolve:{admin:["$route","dwAlerts","Admin","routeHelper",function(e,t,r,n){return n.auth().then((function(){return r.get(e.current.params.adminId).catch((function(e){return t.error(e,"Failed to get administrator.")}))}))}],userProfile:["$route","state","dwAlerts","userProfileService","routeHelper",function(e,t,r,n,o){return o.auth().then((function(){return n.get(t.getCurrentCenterId(),e.current.params.adminId).catch((function(e){return r.error(e,"Failed to get administrator user profile.")}))}))}],lazy:"lazyLoadSystem"}}),e.when("/lead-sources",{template:"<div ng-include=\"'lead-source/lead-source-list.tpl.html'\"></div>",controller:"LeadSourceListCtrl as vm",label:"Lead Sources",routeBranch:"lead-sources",translations:["lead-sources"],resolve:{leadSources:["dwAlerts","systemService","state","routeHelper",function(e,t,r,n){return n.auth().then((function(){return t.getLeadSources().catch((function(t){return e.error(t,"Failed to query lead sources.")}))}))}],lazy:"lazyLoadSystem"}})}])},cBkv:function(e,t,r){"use strict";r.r(t);var n=r("yCd9"),o=r.n(n);r("kYjL");t.default=angular.module("deskworks.notifications",["deskworks.routeHelper","deskworks.notifications.service","deskworks.lazyLoaders"]).config(["$routeProvider",function(e){e.when("/setup/bulk-invoices",{template:"<div ng-include=\"'bulk-invoices/bulk-invoices.tpl.html'\"></div>",controller:"BulkInvoicesTplCtrl as $ctrl",label:"Bulk Invoices Setup",routeBranch:"setup/bulk-invoices",translations:["notifications","short-codes"],resolve:{tpl:["dwAlerts","Notifications","state","routeHelper",function(e,t,r,n){return n.auth().then((function(){return t.getBulkInvoices().catch((function(t){return e.error(t,"Failed to load bulk invoices template.")}))}))}],lazy:"lazyLoadNotifications"}}),e.when("/setup/recurring-invoices",{template:"<div ng-include=\"'recurring-invoices/recurring-invoices.tpl.html'\"></div>",controller:"RecurringInvoicesEmailCtrl as $ctrl",label:"Recurring Invoices Setup",routeBranch:"setup/recurring-invoices",translations:["notifications","short-codes"],resolve:{tpl:["dwAlerts","Notifications","state","routeHelper",function(e,t,r,n){return n.auth().then((function(){return t.getRecurringInvoices().catch((function(t){return e.error(t,"Failed to load recurring invoices template.")}))}))}],lazy:"lazyLoadNotifications"}}),e.when("/setup/expired-card-email",{template:"<div ng-include=\"'expired-card-email/expired-card-email.tpl.html'\"></div>",controller:"ExpiredCardEmailCtrl as $ctrl",label:"Expired Card Email Setup",routeBranch:"setup/expired-card-email",translations:["notifications","short-codes"],resolve:{tpl:["dwAlerts","Notifications","state","routeHelper",function(e,t,r,n){return n.auth().then((function(){return t.getExpiredCardEmail().catch((function(t){return e.error(t,"Failed to load expired card email template.")}))}))}],lazy:"lazyLoadNotifications"}}),e.when("/setup/declined-card-email",{template:"<div ng-include=\"'declined-card-email/declined-card-email.tpl.html'\"></div>",controller:"DeclinedCardEmailCtrl as $ctrl",label:"Declined Card Email Setup",routeBranch:"setup/declined-card-email",translations:["notifications","short-codes"],resolve:{tpl:["dwAlerts","Notifications","state","routeHelper",function(e,t,r,n){return n.auth().then((function(){return t.getDeclinedCardEmail().catch((function(t){return e.error(t,"Failed to load declined card email template.")}))}))}],lazy:"lazyLoadNotifications"}}),e.when("/setup/welcome-letter",{template:"<div ng-include=\"'welcome-letter/welcome-letter.tpl.html'\"></div>",controller:"WelcomeLetterCtrl as $ctrl",label:"Welcome Letter Setup",routeBranch:"setup/welcome-letter",translations:["notifications","short-codes","attachments"],resolve:{tpl:["dwAlerts","Notifications","state","routeHelper",function(e,t,r,n){return n.auth().then((function(){return t.getWelcomeLetter().catch((function(t){return e.error(t,"Failed to load welcome letter template.")}))}))}],lazy:"lazyLoadNotifications"}}),e.when("/setup/reservation-confirmation",{template:"<div ng-include=\"'reservation-confirmation/reservation-confirmation.tpl.html'\"></div>",controller:"ReservationConfirmationEmailCtrl as $ctrl",label:"Reservation Confirmation Setup",routeBranch:"setup/reservation-confirmation",translations:["notifications","short-codes","attachments"],resolve:{tpl:["dwAlerts","Notifications","state","routeHelper",function(e,t,r,n){return n.auth().then((function(){return t.getReservationConfirmation().catch((function(t){return e.error(t,"Failed to load reservation confirmation template.")}))}))}],lazy:"lazyLoadNotifications"}}),e.when("/setup/reservation-reminder",{template:"<div ng-include=\"'reservation-reminder/reservation-reminder.tpl.html'\"></div>",controller:"ReservationReminderEmailCtrl as $ctrl",label:"Reservation Reminder",routeBranch:"setup/reservation-reminder",translations:["notifications","short-codes","attachments"],resolve:{tpl:["dwAlerts","Notifications","state","routeHelper",function(e,t,r,n){return n.auth().then((function(){return t.getReservationReminder().catch((function(t){return e.error(t,"Failed to get reservation reminder template.")}))}))}],lazy:"lazyLoadNotifications"}}),e.when("/setup/cal-sync-error-email",{template:"<div ng-include=\"'cal-sync-error-email/cal-sync-error-email.tpl.html'\"></div>",controller:"CalSyncErrorEmailCtrl as $ctrl",label:"Cal Sync Error",routeBranch:"setup/cal-sync-error-email",translations:["notifications","short-codes"],resolve:{tpl:["dwAlerts","Notifications","state","routeHelper",function(e,t,r,n){return n.auth().then((function(){return t.getCalSyncErrorEmail().catch((function(t){return e.error(t,"Failed to get calendar sync error email template.")}))}))}],lazy:"lazyLoadNotifications"}}),e.when("/setup/passes-used-up-email",{template:"<div ng-include=\"'passes-used-up-email/passes-used-up-email.tpl.html'\"></div>",controller:"PassesUsedUpEmailCtrl as $ctrl",label:"Passes Used Up Email",routeBranch:"setup/passes-used-up-email",translations:["notifications","short-codes"],resolve:{tpl:["dwAlerts","Notifications","state","routeHelper",function(e,t,r,n){return n.auth().then((function(){return t.getPassesUsedUpEmail().catch((function(t){return e.error(t,"Failed to get passes used up email template.")}))}))}],lazy:"lazyLoadNotifications"}}),e.when("/setup/plan-passes-used-up-notice",{template:"<div ng-include=\"'plan-passes-used-up-notice/plan-passes-used-up-notice.tpl.html'\"></div>",controller:"PlanPassesUsedUpNoticeCtrl as $ctrl",label:"Plan Passes Used Up Notice",routeBranch:"setup/plan-passes-used-up-notice",translations:["notifications","short-codes"],resolve:{tpl:["dwAlerts","Notifications","state","routeHelper",function(e,t,r,n){return n.auth().then((function(){return t.getEmailTemplate("plan-passes-used-up").catch((function(t){return e.error(t,"Failed to get plan passes used up notice template.")}))}))}],lazy:"lazyLoadNotifications"}}),e.when("/setup/bucket-used-up-email",{template:"<div ng-include=\"'bucket-used-up-email/bucket-used-up-email.tpl.html'\"></div>",controller:"BucketUsedUpEmailCtrl as $ctrl",label:"Bucket Used Up Email",routeBranch:"setup/bucket-used-up-email",translations:["notifications","short-codes"],resolve:{tpl:["dwAlerts","Notifications","state","routeHelper",function(e,t,r,n){return n.auth().then((function(){return t.getBucketUsedUpEmail().catch((function(t){return e.error(t,"Failed to get bucket used up email template.")}))}))}],lazy:"lazyLoadNotifications"}}),e.when("/setup/renewal-notice-email",{template:"<div ng-include=\"'renewal-notice-email/renewal-notice-email.tpl.html'\"></div>",controller:"RenewalNoticeEmailCtrl as $ctrl",label:"Renewal Notice Email",routeBranch:"setup/renewal-notice-email",translations:["notifications","short-codes"],resolve:{tpl:["dwAlerts","Notifications","state","routeHelper",function(e,t,r,n){return n.auth().then((function(){return t.getEmailTemplate("renewal-notice").catch((function(t){return e.error(t,"Failed to get renewal notice email template.")}))}))}],lazy:"lazyLoadNotifications"}}),e.when("/notifications/receipt-email",{template:"<div ng-include=\"'receipt-email/receipt-email.tpl.html'\"></div>",controller:"ReceiptEmailTplCtrl as $ctrl",label:"Receipt Email",routeBranch:"notifications/receipt-email",translations:["notifications","short-codes"],resolve:{tpls:["$q","dwAlerts","Notifications","state","routeHelper",function(e,t,r,n,a){return a.auth().then((function(){var n;return e.all(o()(n=[{$$id:"receipt",$$name:"NOTIFICATIONS.RECEIPT.GENERAL"},{$$id:"reservation-receipt",$$name:"NOTIFICATIONS.RECEIPT.RESERVATION"},{$$id:"pass-receipt",$$name:"NOTIFICATIONS.RECEIPT.PASS"}]).call(n,(function(e){return r.getEmailTemplate(e.$$id).catch((function(e){return t.error(e,"Failed to get receipt email template.")})).then((function(t){return angular.extend(t,e)}))})))}))}],lazy:"lazyLoadNotifications"}}),e.when("/notifications/message-board-notices",{template:"<div ng-include=\"'message-board-notices/message-board-notices.tpl.html'\"></div>",controller:"MessageBoardNoticesTplCtrl as $ctrl",label:"Message Board Notices Email",routeBranch:"notifications/message-board-notices",newDesign:!0,translations:["notifications","short-codes"],resolve:{tpls:["$q","dwAlerts","Notifications","state","routeHelper",function(e,t,r,n,a){return a.auth().then((function(){var n;return e.all(o()(n=[{$$id:"immediately",$$name:"NOTIFICATIONS.MESSAGE_BOARD.IMMEDIATELY"},{$$id:"daily",$$name:"NOTIFICATIONS.MESSAGE_BOARD.DAILY"},{$$id:"weekly",$$name:"NOTIFICATIONS.MESSAGE_BOARD.WEEKLY"}]).call(n,(function(e){return r.getMessageBoardEmailTemplate(e.$$id).catch((function(e){return t.error(e,"Failed to get receipt email template.")})).then((function(t){return angular.extend(t,e)}))})))}))}],lazy:"lazyLoadNotifications"}}),e.when("/notifications/startup-info",{template:"<div ng-include=\"'startup-info/startup-info.tpl.html'\"></div>",controller:"StartupInfoCtrl as $ctrl",label:"Startup Info",routeBranch:"notifications/startup-info",translations:["notifications","short-codes"],resolve:{tpl:["dwAlerts","Notifications","state","routeHelper",function(e,t,r,n){return n.auth().then((function(){return t.getEmailTemplate("startup-info").catch((function(t){return e.error(t,"Failed to get startup info settings.")}))}))}],lazy:"lazyLoadNotifications"}}),e.when("/notifications/reservation-follow-up-survey",{template:"<div ng-include=\"'reservation-follow-up-survey/reservation-follow-up-survey.tpl.html'\"></div>",controller:"ReservationFollowUpSurveyCtrl as $ctrl",label:"Reservation Follow Up Survey",routeBranch:"notifications/reservation-follow-up-survey",translations:["notifications","short-codes"],resolve:{tpl:["dwAlerts","Notifications","state","routeHelper",function(e,t,r,n){return n.auth().then((function(){return t.get("reservation-follow-up-survey").catch((function(t){return e.error(t,"Failed to get reservation follow up survey settings.")}))}))}],lazy:"lazyLoadNotifications"}}),e.when("/desk-tablet-template",{template:"<div ng-include=\"'desk-tablet-template/desk-tablet-template.tpl.html'\"></div>",controller:"DeskTabletTemplateCtrl as $ctrl",routeBranch:"desk-tablet-template",translations:["notifications","short-codes"],resolve:{tpl:["dwAlerts","Notifications","state","routeHelper",function(e,t,r,n){return n.auth().then((function(){return t.getDeskTabletTemplate(r.getCurrentCenterId()).catch((function(t){return e.error(t,"Failed to get desk tablet template.")}))}))}],lazy:"lazyLoadNotifications"}}),e.when("/notifications/refund-notice",{template:"<div ng-include=\"'refund-notice/refund-notice.tpl.html'\"></div>",controller:"RefundNoticeCtrl as $ctrl",label:"Refund Notice",routeBranch:"notifications/refund-notice",translations:["notifications","short-codes"],resolve:{tpl:["dwAlerts","Notifications","state","routeHelper",function(e,t,r,n){return n.auth().then((function(){return t.getEmailTemplate("refund-notice").catch((function(t){return e.error(t,"Failed to get refund notice settings.")}))}))}],lazy:"lazyLoadNotifications"}}),e.when("/notifications/receipt-page",{template:"<div ng-include=\"'receipt-page/receipt-page.tpl.html'\"></div>",controller:"ReceiptPageTplCtrl as $ctrl",routeBranch:"notifications/receipt-page",translations:["notifications","short-codes"],resolve:{tpl:["$q","dwAlerts","Notifications","state","routeHelper",function(e,t,r,n,o){return o.auth().then((function(){return r.getEmailTemplate("receipt-page").catch((function(e){return t.error(e,"Failed to get receipt page settings.")}))}))}],lazy:"lazyLoadNotifications"}})}])},kYjL:function(e,t,r){"use strict";r("JBxO"),r("FdtR"),r("WoWj"),r("U00V"),r("7gVQ");t.a=angular.module("deskworks.lazyLoaders",["deskworks.dwAlerts","deskworks.bundlesConfig"]).factory("checkBundleConfig",["$injector","bundlesConfig","dwAlerts",function(e,t,r){return function(e){var n=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return t.get().catch((function(e){return r.error(e,"Failed to load bundles config.")})).then((function(t){if(!t[e]&&n)throw null;return!!t[e]||r.error("".concat(e," bundle is disabled."))}))}}]).factory("lazyLoadAccounting",["$injector",function(e){return r.e(11).then(r.bind(null,"fjnr")).then((function(t){return e.invoke(t.default)}))}]).factory("lazyLoadCommunications",["$injector",function(e){return Promise.all([r.e(6),r.e(5),r.e(21)]).then(r.bind(null,"CZgw")).then((function(t){return e.invoke(t.default)}))}]).factory("lazyLoadDashboard",["$injector",function(e){return r.e(22).then(r.bind(null,"UEiN")).then((function(t){return e.invoke(t.default)}))}]).factory("lazyLoadImport",["$injector","checkBundleConfig",function(e,t){return t("import").then((function(){return Promise.all([r.e(84),r.e(88),r.e(86),r.e(87),r.e(85),r.e(27)]).then(r.bind(null,"RAZO"))})).then((function(t){return e.invoke(t.default)}))}]).factory("lazyLoadInventory",["$injector",function(e){return Promise.all([r.e(4),r.e(6),r.e(5),r.e(8),r.e(28)]).then(r.bind(null,"W5jD")).then((function(t){return e.invoke(t.default)}))}]).factory("lazyLoadNotifications",["$injector",function(e){return Promise.all([r.e(6),r.e(5),r.e(44)]).then(r.bind(null,"I/f7")).then((function(t){return e.invoke(t.default)}))}]).factory("lazyLoadReports",["$injector",function(e){return Promise.all([r.e(1),r.e(2),r.e(10),r.e(9),r.e(89),r.e(0),r.e(49),r.e(48),r.e(50)]).then(r.bind(null,"Tbc7")).then((function(t){return e.invoke(t.default)}))}]).factory("lazyLoadAnalytics",["$injector",function(e){return Promise.all([r.e(1),r.e(2),r.e(4),r.e(10),r.e(9),r.e(0),r.e(13)]).then(r.bind(null,"DLeD")).then((function(t){return e.invoke(t.default)}))}]).factory("lazyLoadInvoice",["$injector",function(e){return Promise.all([r.e(1),r.e(2),r.e(0),r.e(31)]).then(r.bind(null,"1xfW")).then((function(t){return e.invoke(t.default)}))}]).factory("lazyLoadReservations",["$injector",function(e){return Promise.all([r.e(3),r.e(7),r.e(52)]).then(r.bind(null,"roXK")).then((function(t){return e.invoke(t.default)}))}]).factory("lazyLoadSetup",["$injector",function(e){return Promise.all([r.e(4),r.e(8),r.e(54)]).then(r.bind(null,"47Sf")).then((function(t){return e.invoke(t.default)}))}]).factory("lazyLoadSystem",["$injector",function(e){return Promise.all([r.e(1),r.e(2),r.e(0),r.e(56)]).then(r.bind(null,"tNSu")).then((function(t){return e.invoke(t.default)}))}]).factory("lazyLoadUsage",["$injector",function(e){return r.e(60).then(r.bind(null,"4pnD")).then((function(t){return e.invoke(t.default)}))}]).factory("lazyLoadWhiteLabel",["$injector",function(e){return Promise.all([r.e(91),r.e(92)]).then(r.bind(null,"iSQY")).then((function(t){return e.invoke(t.default)}))}]).factory("lazyLoadPrinterUsage",["$injector",function(e){return r.e(46).then(r.bind(null,"LaoV")).then((function(t){return e.invoke(t.default)}))}]).factory("lazyLoadFloorPlans",["$injector",function(e){return Promise.all([r.e(4),r.e(25)]).then(r.bind(null,"eL8s")).then((function(t){return e.invoke(t.default)}))}]).factory("lazyLoadCheckInForm",["$injector",function(e){return r.e(20).then(r.bind(null,"lhYf")).then((function(t){return e.invoke(t.default)}))}]).factory("lazyLoadTerminationRequest",["$injector","checkBundleConfig",function(e,t){return t("termination-request").then((function(){return r.e(58).then(r.bind(null,"Lk2g"))})).then((function(t){return e.invoke(t.default)}))}]).factory("lazyLoadPaymentsAssignment",["$injector","checkBundleConfig",function(e,t){return t("payments-assignment").then((function(){return Promise.all([r.e(1),r.e(2),r.e(0),r.e(45)]).then(r.bind(null,"ff+D"))})).then((function(t){return e.invoke(t.default)}))}]).factory("lazyLoadBundleReservation",["$injector","checkBundleConfig",function(e,t){return t("bundle-reservation").then((function(){return r.e(17).then(r.bind(null,"TQqA"))})).then((function(t){return e.invoke(t.default)}))}]).factory("lazyLoadBuyPass",["$injector","checkBundleConfig",function(e,t){return t("buy-pass").then((function(){return r.e(19).then(r.bind(null,"1scS"))})).then((function(t){return e.invoke(t.default)}))}]).factory("lazyMemberSignUp",["$injector","checkBundleConfig",function(e,t){return t("member-sign-up").then((function(){return r.e(43).then(r.bind(null,"HKBC"))})).then((function(t){return e.invoke(t.default)}))}]).factory("lazyLoadSimpleReservation",["$injector","checkBundleConfig",function(e,t){return t("simple-reservation").then((function(){return Promise.all([r.e(90),r.e(3),r.e(55)]).then(r.bind(null,"mAfg"))})).then((function(t){return e.invoke(t.default)}))}]).factory("lazyReservationTablet",["$injector","checkBundleConfig",function(e,t){return t("reservation-tablet").then((function(){return Promise.all([r.e(3),r.e(51)]).then(r.bind(null,"day0"))})).then((function(t){return e.invoke(t.default)}))}]).factory("lazyBookItNow",["$injector","checkBundleConfig",function(e,t){return t("book-it-now").then((function(){return Promise.all([r.e(3),r.e(7),r.e(16)]).then(r.bind(null,"Wk/G"))})).then((function(t){return e.invoke(t.default)}))}]).factory("lazyBayReservation",["$injector","checkBundleConfig",function(e,t){return t("bay-reservation").then((function(){return r.e(15).then(r.bind(null,"SxvJ"))})).then((function(t){return e.invoke(t.default)}))}]).factory("lazyBuyProduct",["$injector","checkBundleConfig",function(e,t){return t("buy-a-product").then((function(){return r.e(18).then(r.bind(null,"ZTuD"))})).then((function(t){return e.invoke(t.default)}))}]).factory("lazyLoadAppointmentPlus",["$injector","checkBundleConfig",function(e,t){return t("appointment-plus",!0).then((function(){return r.e(14).then(r.bind(null,"tRtM"))})).then((function(t){return e.invoke(t.default)})).catch(angular.noop)}]).factory("lazyLoadQuickBooks",["$injector","checkBundleConfig",function(e,t){return t("quick-books",!0).then((function(){return r.e(47).then(r.bind(null,"abkP"))})).then((function(t){return e.invoke(t.default)})).catch(angular.noop)}]).factory("lazyLoadTeamgo",["$injector","checkBundleConfig",function(e,t){return t("teamgo",!0).then((function(){return r.e(57).then(r.bind(null,"OKZS"))})).then((function(t){return e.invoke(t.default)})).catch(angular.noop)}]).factory("lazyLoadKisi",["$injector","checkBundleConfig",function(e,t){return t("kisi",!0).then((function(){return r.e(32).then(r.bind(null,"BAIu"))})).then((function(t){return e.invoke(t.default)})).catch(angular.noop)}]).factory("lazyLoadEzeep",["$injector","checkBundleConfig",function(e,t){return t("ezeep",!0).then((function(){return r.e(24).then(r.bind(null,"oBRD"))})).then((function(t){return e.invoke(t.default)})).catch(angular.noop)}]).factory("lazyLoadGreetly",["$injector","checkBundleConfig",function(e,t){return t("greetly",!0).then((function(){return r.e(26).then(r.bind(null,"/kd0"))})).then((function(t){return e.invoke(t.default)})).catch(angular.noop)}]).factory("lazyLoadAffiliatly",["$injector","checkBundleConfig",function(e,t){return t("affiliatly",!0).then((function(){return r.e(12).then(r.bind(null,"zrTu"))})).then((function(t){return e.invoke(t.default)})).catch(angular.noop)}]).factory("lazyLoadDeskworksSweep",["$injector","checkBundleConfig",function(e,t){return t("deskworks-sweep",!0).then((function(){return r.e(23).then(r.bind(null,"hCzq"))})).then((function(t){return e.invoke(t.default)})).catch(angular.noop)}])},oYBI:function(e,t,r){"use strict";r.r(t);r("kYjL");t.default=angular.module("deskworks.usage",["ngRoute","deskworks.routeHelper","deskworks.dwAlerts","deskworks.usageEntryService","deskworks.checkInLog.service","deskworks.memberUsageService","deskworks.lazyLoaders"]).config(["$routeProvider",function(e){e.when("/usage-entry",{template:"<div ng-include=\"'usage-entry/usage-entry-list.tpl.html'\"></div>",controller:"UsageEntryListCtrl as $ctrl",routeBranch:"usage-entry",translations:["usage-entry"],resolve:{usageList:["dwAlerts","usageEntryService","state","routeHelper",function(e,t,r,n){return n.auth().then((function(){return n.selectUser()})).then((function(){return t.query(r.getCurrentCenterId(),r.getCurrentUserId(),1,15).catch((function(t){return e.error(t,"Failed to query usage entry.")}))}))}],user:["dwAlerts","userProfileService","state","routeHelper","resolveTimezone",function(e,t,r,n,o){return n.auth().then((function(){return n.selectUser()})).then((function(){return o()})).then((function(){return t.get(r.getCurrentCenterId(),r.getCurrentUserId()).catch((function(t){return e.error(t,"Failed to get user profile.")}))}))}],lazy:"lazyLoadUsage"}}),e.when("/usage-entry/:usageId",{template:"<div ng-include=\"'usage-entry/usage-entry-edit.tpl.html'\"></div>",controller:"UsageEntryEditCtrl as $ctrl",routeBranch:"usage-entry",translations:["usage-entry"],resolve:{usage:["$route","dwAlerts","usageEntryService","state","routeHelper",function(e,t,r,n,o){return o.auth().then((function(){return o.selectUser()})).then((function(){return r.get(n.getCurrentCenterId(),n.getCurrentUserId(),e.current.params.usageId).catch((function(e){return t.error(e,"Failed to get usage entry.")}))}))}],user:["dwAlerts","userProfileService","state","routeHelper","resolveTimezone",function(e,t,r,n,o){return n.auth().then((function(){return n.selectUser()})).then((function(){return o()})).then((function(){return t.get(r.getCurrentCenterId(),r.getCurrentUserId()).catch((function(t){return e.error(t,"Failed to get user profile.")}))}))}],lazy:"lazyLoadUsage"}}),e.when("/member-usage",{template:"<div ng-include=\"'view-usage/view-usage.tpl.html'\"></div>",controller:"ViewUsageCtrl as $ctrl",routeBranch:"member-usage",translations:["view-usage"],resolve:{memberUsageList:["dwAlerts","memberUsageService","state","routeHelper",function(e,t,r,n){return n.auth().then((function(){return n.selectUser()})).then((function(){return t.query(r.getCurrentCenterId(),r.getCurrentUserId()).catch((function(t){return e.error(t,"Failed to query member usages.")}))}))}],user:["dwAlerts","userProfileService","state","routeHelper","resolveTimezone",function(e,t,r,n,o){return n.auth().then((function(){return n.selectUser()})).then((function(){return o()})).then((function(){return t.get(r.getCurrentCenterId(),r.getCurrentUserId()).catch((function(t){return e.error(t,"Failed to get user profile.")}))}))}],lazy:"lazyLoadUsage"}}),e.when("/usage-tracking",{template:"<div ng-include=\"'usage-tracking/usage-tracking.tpl.html'\"></div>",controller:"UsageTrackingCtrl as $ctrl",routeBranch:"usage-tracking",translations:["usage-tracking"],resolve:{user:["dwAlerts","userProfileService","state","routeHelper","resolveTimezone",function(e,t,r,n,o){return n.auth().then((function(){return n.selectUser()})).then((function(){return o()})).then((function(){return t.get(r.getCurrentCenterId(),r.getCurrentUserId()).catch((function(t){return e.error(t,"Failed to get user profile.")}))}))}],lazy:"lazyLoadUsage"}}),e.when("/member-log",{template:"<div ng-include=\"'check-in-log/check-in-log.tpl.html'\"></div>",controller:"CheckInLogCtrl as $ctrl",routeBranch:"member-log",translations:["check-in-log"],resolve:{user:["dwAlerts","userProfileService","state","routeHelper","resolveTimezone",function(e,t,r,n,o){return n.auth().then((function(){return n.selectUser()})).then((function(){return o()})).then((function(){return t.get(r.getCurrentCenterId(),r.getCurrentUserId()).catch((function(t){return e.error(t,"Failed to get user profile.")}))}))}],lazy:"lazyLoadUsage"}}),e.when("/manual-check-in-log",{template:"<div ng-include=\"'manual-check-in-log/manual-check-in-log.tpl.html'\"></div>",controller:"ManualCheckInLogCtrl as $ctrl",routeBranch:"manual-check-in-log",translations:["check-in-log"],resolve:{user:["dwAlerts","userProfileService","state","routeHelper","resolveTimezone",function(e,t,r,n,o){return n.auth().then((function(){return n.selectUser()})).then((function(){return o()})).then((function(){return t.get(r.getCurrentCenterId(),r.getCurrentUserId()).catch((function(t){return e.error(t,"Failed to get user profile.")}))}))}],lazy:"lazyLoadUsage"}})}])},tcE9:function(e,t,r){},"xc/y":function(e,t,r){"use strict";r.r(t);r("kYjL");t.default=angular.module("deskworks.floorPlans",["ngRoute","deskworks.routeHelper","deskworks.lazyLoaders"]).config(["$routeProvider",function(e){e.when("/floor-plans",{template:"<div ng-include=\"'floor-plans/floor-plans.tpl.html'\"></div>",controller:"FloorPlansCtrl as $ctrl",routeBranch:"floor-plans",translations:["floor-plans","reservations"],resolve:{auth:["$q","routeHelper","resolveTimezone",function(e,t,r){return e.all([t.auth(),r()])}],lazy:"lazyLoadFloorPlans"}}),e.when("/floor-plans-community",{template:"<div ng-include=\"'floor-plans/floor-plans.tpl.html'\"></div>",controller:"FloorPlansCtrl as $ctrl",routeBranch:"floor-plans-community",translations:["floor-plans","reservations"],resolve:{auth:["$q","routeHelper","resolveTimezone",function(e,t,r){return e.all([t.auth(),r()])}],communityOnly:function(){return!0},lazy:"lazyLoadFloorPlans"}})}])}}]);