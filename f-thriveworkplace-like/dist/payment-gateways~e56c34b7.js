(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{"+ZZM":function(e,t,a){var r={"./gateways/gateway-edit.controller.js":"cyhy","./gateways/gateways.controller.js":"rcyg","./services/payment-center.service.js":"0uo4","./services/payment-gateway.service.js":"eyCE","./services/payment-processor.service.js":"fYgO"};function n(e){var t=f(e);return a(t)}function f(e){if(!a.o(r,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return r[e]}n.keys=function(){return Object.keys(r)},n.resolve=f,e.exports=n,n.id="+ZZM"},"0uo4":function(e,t,a){"use strict";a.r(t),t.default=angular.module("deskworks.PaymentCenter",["ngResource","deskworks.config"]).factory("PaymentCenter",["$resource","deskworksConfig",function(e,t){var a=e(t.getApiAbsUrl("/payments/centers/:id"),{},{query:{method:"GET",isArray:!0},update:{method:"PUT"}});return{query:function(e){return a.query(e).$promise},save:function(e){return a.update({id:e.id},e).$promise}}}])},MZew:function(e,t,a){var r={"./gateways/gateway-edit.tpl.html":"jVJa","./gateways/gateways.tpl.html":"NfT1"};function n(e){var t=f(e);return a(t)}function f(e){if(!a.o(r,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return r[e]}n.keys=function(){return Object.keys(r)},n.resolve=f,e.exports=n,n.id="MZew"},NfT1:function(e,t){e.exports='<div ff-bulk-read-only> <h1 class="page-title">{{state.getPageTitle()}}</h1> <div class="gutter-v"> <ff-panel> <ff-spin ng-if="$ctrl.center.$$autoSaving"></ff-spin> <label class="ff-row" style="max-width:640px" ff-dim="!$ctrl.centers || !$ctrl.gateways"> <ff-label><span translate="PAYMENT_GATEWAYS.CENTER_GATEWAY" translate-values="{ center: $ctrl.center.name }"></span></ff-label> <ff-select ff-model="$ctrl.center.gatewayId" ff-options="opt.id as opt.name for opt in $ctrl.gateways" ff-change="$ctrl.save($ctrl.center)"> <option value="" translate="GLOBAL.NONE"></option> </ff-select> </label> </ff-panel> <ff-panel> <span ng-if="!$ctrl.gateways.length" translate="GLOBAL.NONE"></span> <ff-header ng-if="$ctrl.gateways.length > 0"> <ff-row> <cell flex="1 1 25%"><span translate="PAYMENT_GATEWAYS.NAME"></span></cell> <cell flex="1 1 25%"><span translate="PAYMENT_GATEWAYS.TIMEZONE"></span></cell> <cell flex="1 1 15%" class="ff-center"><span translate="PAYMENT_GATEWAYS.CURRENCY"></span></cell> <cell flex="1 1 15%" class="ff-center"><span translate="PAYMENT_GATEWAYS.CUT_OFF_TIME"></span></cell> <cell flex="1 1 25%" class="show-sm"><span translate="PAYMENT_GATEWAYS.NOTES"></span></cell> <ff-btn size="xs" class="buttons-row zero-height"></ff-btn> </ff-row> </ff-header> <ff-row ng-repeat="gateway in $ctrl.gateways"> <ff-static flex="1 1 25%">{{gateway.name}}</ff-static> <ff-static flex="1 1 25%">{{gateway.timezone}}</ff-static> <ff-static flex="1 1 15%" class="ff-center">{{gateway.currency}}</ff-static> <ff-static flex="1 1 15%" class="ff-center"><span nice-time="gateway.cutOffTime"></span></ff-static> <ff-static flex="1 1 25%" class="show-sm">{{gateway.notes}}</ff-static> <ff-btn sense="edit" size="xs" flex="none" class="buttons-row" ff-click="$ctrl.edit(gateway)" title="{{\'GLOBAL.BTN_EDIT\' | translate}}"></ff-btn> </ff-row> </ff-panel> <ff-btn-group> <ff-btn sense="new" ff-click="$ctrl.new()"><span translate="GLOBAL.BTN_NEW"></span></ff-btn> </ff-btn-group> </div> </div> '},"a/TE":function(e,t,a){"use strict";a.r(t);a("3dw1"),a("Muwe"),a("y89P");var r=a("yCd9"),n=a.n(r),f=a("lRNC"),s=a.n(f),l=["$injector",function(e){var t,r,f=(t=a("+ZZM"),n()(r=s()(t).call(t)).call(r,t));e.loadNewModules(n()(f).call(f,(function(e){return e.default.name}))),e.invoke(["$templateCache",function(e){var t=a("MZew");s()(t).call(t).forEach((function(a){return e.put(a.replace(/^\.\//,""),t(a))}))}])}];t.default=l},cyhy:function(e,t,a){"use strict";a.r(t);var r=a("nbuU"),n=a.n(r),f=a("eyCE"),s=a("fYgO");t.default=angular.module("deskworks.PaymentGatewayEditCtrl",[f.default.name,s.default.name,"deskworks.optsTimezone"]).controller("PaymentGatewayEditCtrl",["$scope","$window","$translate","$route","$q","$filter","$locale","dwAlerts","state","helper","PaymentProcessor","PaymentGateway","optsTimezone",function(e,t,a,r,f,s,l,c,o,i,u,d,p){var y=this;o.setPageTitle(a.instant("PAYMENT_GATEWAYS.EDIT.PAGE_TITLE")),y.onInit=function(){y.optsTimezone=p,y.currencies=["USD","GBP","EUR","CAD","MXN","ZAR"],y.fetchProcessors(),"new"===r.current.params.id?y.gateway={settings:{}}:y.fetchGateways()},y.fetchProcessors=function(){return u.query().catch((function(e){return c.error(e,"Failed to query payment processors.")})).then((function(e){y.processors=e,"new"===r.current.params.id&&(y.gateway.processorId=y.processors[0]&&y.processors[0].id,y.gateway.settings.baseUrl="https://test.oppwa.com",y.gateway.cutOffTime=s("toDate")("23:45"),y.gateway.currency=y.currencies[0])}))},y.fetchGateways=function(){return d.query().catch((function(e){return c.error(e,"Failed to query payment gateways.")})).then((function(e){y.gateway=n()(e).call(e,(function(e){return e.id===+r.current.params.id}))}))},y.save=function(){if(!i.pointFirstInvalid('form[name="$ctrl.form"]'))return d.save(y.gateway).catch((function(e){return c.error(e,"Failed to save payment gateway.")})).then((function(){if("new"===r.current.params.id)return o.setPath("/payment-gateways/".concat(y.gateway.id));y.form.$setPristine()}))},y.delete=function(){if(t.confirm(a.instant("PAYMENT_GATEWAYS.CONFIRM_DELETE")))return d.delete({id:y.gateway.id}).catch((function(e){return c.error(e,"Failed to delete payment gateway.")})).then((function(){return o.setPath("/payment-gateways")}))},y.back=function(){return o.setPath("/payment-gateways")},y.onInit()}])},eyCE:function(e,t,a){"use strict";a.r(t),t.default=angular.module("deskworks.PaymentGateway",["ngResource","deskworks.config","datesDeserializer"]).factory("PaymentGateway",["$resource","$filter","deskworksConfig","datesDeserializer",function(e,t,a,r){var n=r(["cutOffTime"]),f=e(a.getApiAbsUrl("/payments/gateways/:id"),{},{query:{method:"GET",isArray:!0,transformResponse:[angular.fromJson,n]},update:{method:"PUT"}});return{query:function(e){return f.query(e).$promise},save:function(e){var a=angular.copy(e);return a.cutOffTime=t("date")(a.cutOffTime,"HH:mm"),e.id?f.update({id:e.id},a).$promise:f.save(a).$promise.then((function(t){e.id=t.id}))},delete:function(e){return f.delete(e).$promise}}}])},fYgO:function(e,t,a){"use strict";a.r(t),t.default=angular.module("deskworks.PaymentProcessor",["ngResource","deskworks.config"]).factory("PaymentProcessor",["$resource","deskworksConfig",function(e,t){var a=e(t.getApiAbsUrl("/payments/processors"),{},{query:{method:"GET",isArray:!0}});return{query:function(e){return a.query(e).$promise}}}])},jVJa:function(e,t){e.exports='<form name="$ctrl.form" novalidate ff-bulk-read-only> <h1 class="page-title">{{state.getPageTitle()}}</h1> <div class="ff-grid gutter-h gutter-v"> <ff-panel flex="{md: \'0 0 50%\'}"> <label class="ff-row"> <ff-label flex="0 1 110px"><req translate="PAYMENT_GATEWAYS.NAME"></req></ff-label> <ff-text flex="1 1 290px" name="name" ff-model="$ctrl.gateway.name" ff-required="true" ff-validate-alert="{{\'PAYMENT_GATEWAYS.NAME\' | translate}}"></ff-text> </label> <label class="ff-row"> <ff-label flex="0 1 110px"><req translate="PAYMENT_GATEWAYS.TIMEZONE"></req></ff-label> <ff-select flex="1 1 290px" name="timezone" ff-model="$ctrl.gateway.timezone" ff-options="tz.iana as tz.name for tz in $ctrl.optsTimezone" ff-required="true" ff-validate-alert="{{\'PAYMENT_GATEWAYS.TIMEZONE\' | translate}}"></ff-select> </label> <div class="ff-row"> <label class="ff-row" flex="0 0 190px"> <ff-label flex="0 0 110px"><req translate="PAYMENT_GATEWAYS.CUT_OFF_TIME"></req></ff-label> <ff-time flex="auto" name="cutOffTime" ff-model="$ctrl.gateway.cutOffTime" ff-required="true" ff-validate-alert="{{\'PAYMENT_GATEWAYS.CUT_OFF_TIME\' | translate}}"></ff-time> </label> <ff-static flex="auto"></ff-static> <label class="ff-row" flex="0 0 140px"> <ff-label flex="0 0 80px"><req translate="PAYMENT_GATEWAYS.CURRENCY"></req></ff-label> <ff-select flex="auto" name="currency" ff-model="$ctrl.gateway.currency" ff-required="true" ff-validate-alert="{{\'PAYMENT_GATEWAYS.CURRENCY\' | translate}}" ff-options="curr for curr in $ctrl.currencies"></ff-select> </label> </div> <label class="ff-row"> <ff-label flex="0 1 110px"><span translate="PAYMENT_GATEWAYS.NOTES"></span></ff-label> <ff-text flex="1 1 290px" name="notes" ff-model="$ctrl.gateway.notes"></ff-text> </label> </ff-panel> <ff-panel flex="{md: \'0 0 50%\'}"> <label class="ff-row"> <ff-label flex="0 1 120px"><req translate="PAYMENT_GATEWAYS.PROCESSOR"></req></ff-label> <ff-select flex="1 1 290px" name="processor" ff-model="$ctrl.gateway.processorId" ff-options="p.id as p.name for p in $ctrl.processors" ff-required="true" ff-validate-alert="{{\'PAYMENT_GATEWAYS.PROCESSOR\' | translate}}"></ff-select> </label> <label class="ff-row"> <ff-label flex="0 1 120px"><req translate="PAYMENT_GATEWAYS.BASE_URL"></req></ff-label> <ff-text flex="1 1 290px" name="baseUrl" ff-model="$ctrl.gateway.settings.baseUrl" ff-required="true" ff-validate-alert="{{\'PAYMENT_GATEWAYS.BASE_URL\' | translate}}" placeholder="https://test.oppwa.com"></ff-text> </label> <label class="ff-row"> <ff-label flex="0 1 120px"><req translate="PAYMENT_GATEWAYS.ACCESS_TOKEN"></req></ff-label> <ff-text flex="1 1 290px" name="accessToken" ff-model="$ctrl.gateway.settings.accessToken" ff-required="true" ff-validate-alert="{{\'PAYMENT_GATEWAYS.ACCESS_TOKEN\' | translate}}"></ff-text> </label> <label class="ff-row"> <ff-label flex="0 1 120px"><req translate="PAYMENT_GATEWAYS.ENTITY_ID"></req></ff-label> <ff-text flex="1 1 290px" name="entityId" ff-model="$ctrl.gateway.settings.entityId" ff-required="true" ff-validate-alert="{{\'PAYMENT_GATEWAYS.ENTITY_ID\' | translate}}"></ff-text> </label> </ff-panel> <ff-btn-group> <ff-btn sense="save" type="submit" ff-click="$ctrl.save()" ff-disabled="$ctrl.form.$pristine"> <span translate="GLOBAL.BTN_SAVE"></span> </ff-btn> <ff-btn sense="delete" ff-click="$ctrl.delete()" ng-if="$ctrl.bank.id !== \'new\'"> <span translate="GLOBAL.BTN_DELETE"></span> </ff-btn> <ff-btn sense="back" ff-click="$ctrl.back()"><span translate="GLOBAL.BTN_BACK"></span></ff-btn> </ff-btn-group> </div> </form> '},rcyg:function(e,t,a){"use strict";a.r(t);var r=a("nbuU"),n=a.n(r),f=a("+l1P"),s=a("eyCE"),l=a("fYgO"),c=a("0uo4");t.default=angular.module("deskworks.PaymentGatewaysCtrl",["autoSave",f.a.name,s.default.name,l.default.name,c.default.name]).controller("PaymentGatewaysCtrl",["$scope","$translate","$q","dwAlerts","state","helper","autoSave","PaymentGateway","PaymentProcessor","PaymentCenter",function(e,t,a,r,f,s,l,c,o,i){var u=this;f.setPageTitle(t.instant("PAYMENT_GATEWAYS.PAGE_TITLE")),u.onInit=function(){u.fetch()},u.fetchGateways=function(){return c.query().catch((function(e){return r.error(e,"Failed to query payment gateways.")})).then((function(e){u.gateways=e}))},u.fetchCenters=function(){return i.query().catch((function(e){return r.error(e,"Failed to query payment centers.")})).then((function(e){var t;u.centers=e,u.center=n()(t=u.centers).call(t,(function(e){return e.id===f.getCurrentCenterId()}))}))},u.fetch=function(){return a.all([u.fetchGateways(),u.fetchCenters()])},e.$watch((function(){return+f.getCurrentCenterId()}),(function(e){var t;u.centers&&(u.center=n()(t=u.centers).call(t,(function(t){return t.id===e})))})),u.save=l.wrap((function(){return i.save(u.center).catch((function(e){return r.error(e,"Failed to update payment center.")}))})),u.edit=function(e){return f.setPath("/payment-gateways/"+e.id)},u.new=function(){return f.setPath("/payment-gateways/new")},u.onInit()}])}}]);