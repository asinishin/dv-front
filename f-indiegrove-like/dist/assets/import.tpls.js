!function(t){try{t=angular.module("import.templates")}catch(e){t=angular.module("import.templates",[])}t.run(["$templateCache",function(t){t.put("import.tpl.html",'<div id="setupImport">\n\t<h4 class="page-title" ng-bind="state.getPageTitle()"></h4>\n\t<h5 class="step-title" ng-if="$ctrl.steps[$ls.step].id !== \'complete\'">Step {{$ls.step + 1}} of {{$ctrl.steps.length - 1}}</h5>\n\n\t<import-step-init ng-if="$ctrl.steps[$ls.step].id === \'init\'"\n\t                  step="$ls.step" sheets="$ls.sheets" purge="$ctrl.purge"></import-step-init>\n\n\t<import-step-import ng-if="$ctrl.steps[$ls.step].id !== \'init\' && $ctrl.steps[$ls.step].id !== \'complete\'"\n\t                    step="$ls.step" sheets="$ls.sheets" purge="$ctrl.purge"></import-step-import>\n\n\t<import-step-complete ng-if="$ctrl.steps[$ls.step].id === \'complete\'"\n\t                  step="$ls.step" sheets="$ls.sheets" purge="$ctrl.purge"></import-step-complete>\n</div>\n')}])}(),function(t){try{t=angular.module("import.templates")}catch(e){t=angular.module("import.templates",[])}t.run(["$templateCache",function(t){t.put("handsontable/import-handsontable.tpl.html",'<handsontable id="htImport" ht-data="$ctrl.sheet.data" ht-rows-meta="$ctrl.sheet.rowsMeta"\n              ht-renderer="$ctrl.cellRenderer" ht-manual-column-widths="$ctrl.sheet.manualColumnWidths">\n\n\t<ht-header-extra>\n\t\t<div class="itooltip ht-head-tooltip" ng-class="{ ok: $ctrl.sheet.mapping[$col] || !$ctrl.unMappedFields.length }">\n\t\t\t<span ng-bind="$ctrl.mappingFields[$col].name || \'UNKNOWN\'"></span>\n\t\t\t<ff-select ff-model="$ctrl.sheet.mapping[$col]" ff-options="field.id as field.name for field in $ctrl.availableFields[$col]">\n\t\t\t\t<option value="">UNKNOWN</option>\n\t\t\t</ff-select>\n\t\t</div>\n\t</ht-header-extra>\n\n\t<ht-row-extra>\n\t\t<div class="ht-row-extra" ng-init="rowMeta = $ctrl.sheet.rowsMeta[$row]" ng-show="!$ctrl.unMappedFields.length">\n\t\t\t<ff-icon sense="error" ng-if="rowMeta.error && rowMeta.ignore"\n\t\t\t         ng-click="$ctrl.onClickRowIcon($row)"\n\t\t\t         title="{{rowMeta.error}}">\n\t\t\t</ff-icon>\n\n\t\t\t<ff-icon sense="warning" ng-if="rowMeta.invalid && !rowMeta.ignore"\n\t\t\t         ng-click="$ctrl.onClickRowIcon($row)"\n\t\t\t         title="This row contains invalid values. Fix them or click this icon to ignore this row."></ff-icon>\n\n\t\t\t<ff-icon sense="check" ng-if="rowMeta.id && !rowMeta.invalid && rowMeta.ignore && !rowMeta.error"\n\t\t\t         ng-click="$ctrl.onClickRowIcon($row)" class="text-primary"\n\t\t\t         title="Existing data, this row will not be imported."></ff-icon>\n\n\t\t\t<ff-icon sense="refresh" ng-if="rowMeta.id && !rowMeta.invalid && !rowMeta.ignore"\n\t\t\t         ng-click="$ctrl.onClickRowIcon($row)" class="text-success" ng-class="{ rotate: rowMeta.spin }"\n\t\t\t         title="Existing data, this row will updated."></ff-icon>\n\n\t\t\t<ff-icon sense="plus" ng-if="!rowMeta.id && !rowMeta.ignore && !rowMeta.headRow && !rowMeta.empty && !rowMeta.invalid"\n\t\t\t         ng-click="$ctrl.onClickRowIcon($row)" class="text-success" ng-class="{ rotate: rowMeta.spin }"\n\t\t\t         title="This row is new and will be imported."></ff-icon>\n\n\t\t\t<ff-icon sense="ignore" ng-if="!rowMeta.id && rowMeta.ignore && !rowMeta.error"\n\t\t\t         ng-click="$ctrl.onClickRowIcon($row)" class="text-primary"\n\t\t\t         title="This row is ignored. Click this icon to stop ignoring this row."></ff-icon>\n\n\t\t\t<ff-icon sense="header" ng-if="rowMeta.headRow"\n\t\t\t         ng-click="$ctrl.onClickRowIcon($row)"\n\t\t\t         title="This row is recognized as header."></ff-icon>\n\t\t</div>\n\t</ht-row-extra>\n\n\t<ht-body-extra>\n\t\t<div class="itooltip ht-body-tooltip" ng-show="$ctrl.sheet.rowsMeta[$row].cellsMeta[$col].invalid">\n\t\t\t<span ng-if="$ctrl.sheet.rowsMeta[$row].cellsMeta[$col].invalid | isString"\n\t\t\t      ng-bind-html="$ctrl.sheet.rowsMeta[$row].cellsMeta[$col].invalid"></span>\n\t\t\t<ff-select ff-model="newVal" ff-options="opt.name as opt.name for opt in $ctrl.sheet.rowsMeta[$row].cellsMeta[$col].invalid"\n\t\t\t           ff-change="$ctrl.onSelectValidData(newVal, $row, $col)"\n\t\t\t           ng-if="$ctrl.sheet.rowsMeta[$row].cellsMeta[$col].invalid | isArray">\n\t\t\t\t<option value="">please select</option>\n\t\t\t</ff-select>\n\t\t</div>\n\t</ht-body-extra>\n</handsontable>\n')}])}(),function(t){try{t=angular.module("import.templates")}catch(e){t=angular.module("import.templates",[])}t.run(["$templateCache",function(t){t.put("step-components/import-dashboard.tpl.html",'<div class="ff-2-columns import-dashboard">\n\t<div class="import-stats" ng-if="$ctrl.sheet && !$ctrl.unMappedFields.length">\n\t\t<div class="text-success">\n\t\t\t<span class="counter">{{$ctrl.stats.create}}</span>\n\t\t\t<ff-icon sense="plus"></ff-icon>\n\t\t\t<span class="text">Create</span>\n\t\t</div>\n\n\t\t<div class="text-success">\n\t\t\t<span class="counter">{{$ctrl.stats.update}}</span>\n\t\t\t<ff-icon sense="refresh"></ff-icon>\n\t\t\t<span class="text">Update</span>\n\t\t</div>\n\n\t\t<div class="text-primary">\n\t\t\t<span class="counter">{{$ctrl.stats.existing}}</span>\n\t\t\t<ff-icon sense="check"></ff-icon>\n\t\t\t<span class="text">Existing</span>\n\t\t</div>\n\n\t\t<div class="text-primary">\n\t\t\t<span class="counter">{{$ctrl.stats.ignore}}</span>\n\t\t\t<ff-icon sense="ignore"></ff-icon></ff-icon>\n\t\t\t<span class="text">Ignore</span>\n\t\t</div>\n\n\t\t<div class="text-danger" ng-if="!$ctrl.stats.invalid">\n\t\t\t<span class="counter">{{$ctrl.stats.error}}</span>\n\t\t\t<ff-icon sense="error"></ff-icon></ff-icon>\n\t\t\t<span class="text">Error</span>\n\t\t</div>\n\n\t\t<div class="text-warning" ng-if="$ctrl.stats.invalid">\n\t\t\t<span class="counter">{{$ctrl.stats.invalid}}</span>\n\t\t\t<ff-icon sense="warning"></ff-icon></ff-icon>\n\t\t\t<span class="text">Invalid</span>\n\t\t</div>\n\t</div>\n\n\t<ff-info>\n\t\t<span ng-if="$ctrl.sheet.mappedToStep === $ctrl.step && $ctrl.unMappedFields.length" class="text-warning">\n\t\t\tSome columns are unmapped. Please map them manually.\n\t\t\tCheck <span class="itooltip">UNKNOWN</span> markers and select correct field mapping from the drop-down.\n\t\t</span>\n\n\t\t<span ng-if="$ctrl.sheet.mappedToStep === $ctrl.step && !$ctrl.unMappedFields.length && $ctrl.invalidCount" class="text-warning">\n\t\t\tInvalid values detected. Please fix them manually to proceed to the next step.\n\t\t\tLook for cells with <ff-icon sense="warning"></ff-icon> icon and fix their values.\n\t\t\tYou can also ignore some rows by clicking <ff-icon sense="warning"></ff-icon> icons near the row indexes at left.\n\t\t</span>\n\n\t\t<span ng-if="$ctrl.sheet.mappedToStep === $ctrl.step && !$ctrl.unMappedFields.length && !$ctrl.invalidCount">\n\t\t\tClick Next to proceed to the next step.\n\t\t</span>\n\t</ff-info>\n</div>\n')}])}(),function(t){try{t=angular.module("import.templates")}catch(e){t=angular.module("import.templates",[])}t.run(["$templateCache",function(t){t.put("step-components/import-sheet-selector.tpl.html",'<ff-two-columns class="ff-bmargin">\n\t<flex-form ff-dim="$ctrl.spin || !$ctrl.sheet">\n\t\t<label class="ff-row">\n\t\t\t<ff-label flex="0 0 120px" ff-required="true">Select Sheet</ff-label>\n\t\t\t<ff-select ff-model="$ctrl.sheet" ff-options="sheet.name for sheet in $ctrl.sheets" ff-required="true" ff-valdate-alert="Sheet"></ff-select>\n\t\t</label>\n\t</flex-form>\n</ff-two-columns>\n\n<ff-info ng-if="$ctrl.sheet && !$ctrl.sheet.mappedToStep">\n\t<span class="text-warning">\n\t\t<ff-icon sense="info"></ff-icon>\n\t\tThis sheet seems to misfit to current import step. Please select another sheet or map all columns manually.\n\t</span>\n</ff-info>\n\n<ff-info ng-if="$ctrl.sheet && $ctrl.sheet.mappedToStep && $ctrl.sheet.mappedToStep !== $ctrl.step">\n\t<span class="text-warning">\n\t\t<ff-icon sense="info"></ff-icon>\n\t\tThis sheet is already mapped to "{{$ctrl.steps[$ctrl.sheet.mappedToStep].name}}" step, please select another sheet or\n\t\t<ff-btn sense="remove" size="sm" ff-click="$ctrl.remapFields()">Remap Fields</ff-btn>\n\t</span>\n</ff-info>\n')}])}(),function(t){try{t=angular.module("import.templates")}catch(e){t=angular.module("import.templates",[])}t.run(["$templateCache",function(t){t.put("step-components/step-complete.tpl.html",'<ff-info>\n\tCongratulations! You have completed the import. You can manage imported data through sidebar:<br>\n\t<a href="#/reservation-types" ng-click="$ctrl.navSidebar($event)">Inventory <ff-icon sense="breadcrumb"></ff-icon> Reservation Categories</a><br>\n\t<a href="#/reservation-units" ng-click="$ctrl.navSidebar($event)">Inventory <ff-icon sense="breadcrumb"></ff-icon> Reservation Units</a><br>\n\t<a href="#/products" ng-click="$ctrl.navSidebar($event)">Inventory <ff-icon sense="breadcrumb"></ff-icon> Products</a><br>\n\t<a href="#/user-search" ng-click="$ctrl.navSidebar($event)">Members <ff-icon sense="breadcrumb"></ff-icon> View/Edit Profile</a><br>\n</ff-info>\n\n<ff-btn-group class="buttons-bottom">\n\t<ff-btn sense="back" ff-click="$ctrl.back()">Back To Step {{$ctrl.step}}</ff-btn>\n\t<ff-btn sense="home" ff-click="$ctrl.home()">Go To Dashboard</ff-btn>\n\t<ff-btn sense="remove" ff-click="$ctrl.purge()">Purge & Start From Scratch</ff-btn>\n</ff-btn-group>\n')}])}(),function(t){try{t=angular.module("import.templates")}catch(e){t=angular.module("import.templates",[])}t.run(["$templateCache",function(t){t.put("step-components/step-import.tpl.html",'<ff-info>\n\tThis step allows you to import <b ng-bind="$ctrl.steps[$ctrl.step].name"></b>.\n\tPlease select correct Excel sheet, check & fix columns mapping, fix invalid values, then import.\n</ff-info>\n\n<div ng-include="\'step-components/import-sheet-selector.tpl.html\'"></div>\n\n<div ng-include="\'step-components/import-dashboard.tpl.html\'"></div>\n\n<ff-btn-group class="buttons-bottom">\n\t<ff-btn sense="next" ff-click="$ctrl.import()">Next</ff-btn>\n\t<ff-btn sense="back" ff-click="$ctrl.back()">Back To Step {{$ctrl.step}}</ff-btn>\n\t<ff-btn sense="remove" ff-click="$ctrl.purge()">Purge & Start From Scratch</ff-btn>\n</ff-btn-group>\n\n<import-handsontable step="$ctrl.step" sheet="$ctrl.sheet" fields="$ctrl.fields" on-validate="$ctrl.validateData()"\n                     un-mapped-fields="$ctrl.unMappedFields" ff-dim="$ctrl.spin" ng-if="$ctrl.sheet"></import-handsontable>\n')}])}(),function(t){try{t=angular.module("import.templates")}catch(e){t=angular.module("import.templates",[])}t.run(["$templateCache",function(t){t.put("step-components/step-init.tpl.html",'<ff-info>\n\t<p>\n\t\t<ff-icon sense="info"></ff-icon>\n\t\tThis wizard will guide you through the following import steps:<br>\n\t\t<span class="text-text">\n\t\t\t\tReservation Categories <ff-icon sense="breadcrumb"></ff-icon>\n\t\t\t\tOther Products <ff-icon sense="breadcrumb"></ff-icon>\n\t\t\t\tMembership Products <ff-icon sense="breadcrumb"></ff-icon>\n\t\t\t\tReservation Units <ff-icon sense="breadcrumb"></ff-icon>\n\t\t\t\tMembers\n\t\t\t</span>\n\t</p>\n\t<p>\n\t\t<ff-icon sense="info"></ff-icon>\n\t\tThe workflow for each step is:<br>\n\t\t<span class="text-text">\n\t\t\t\tSelect sheet in Excel file <ff-icon sense="breadcrumb"></ff-icon>\n\t\t\t\tMap fields <ff-icon sense="breadcrumb"></ff-icon>\n\t\t\t\tFix invalid data <ff-icon sense="breadcrumb"></ff-icon>\n\t\t\t\tImport <ff-icon sense="breadcrumb"></ff-icon>\n\t\t\t\tMove to next step\n\t\t\t</span>\n\t</p>\n\t<p>\n\t\t<ff-icon sense="info"></ff-icon>\n\t\tPlease download import template, open it in Excel (Numbers on Mac),\n\t\treplace sample data with your real data, then start import by selecting the file you\'ve made.\n\t</p>\n\t<p class="text-warning">\n\t\t<ff-icon sense="warning"></ff-icon>\n\t\tDon\'t add/remove columns in the template, but you may add/remove rows.\n\t</p>\n\n\t<ff-btn-group class="buttons-top">\n\t\t<ff-btn sense="upload" ngf-select="$ctrl.upload($files, $invalidFiles)"\n\t\t        ngf-pattern="\'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet,application/vnd.ms-excel\'"\n\t\t        accept="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet,application/vnd.ms-excel">\n\t\t\tSelect Excel File to Import\n\t\t</ff-btn>\n\n\t\t<a href="assets/new-center-startup-workbook.xlsx" target="_blank" rel="noopener" download>\n\t\t\t<ff-btn sense="download">Download Import Template</ff-btn>\n\t\t</a>\n\t</ff-btn-group>\n</ff-info>\n')}])}();