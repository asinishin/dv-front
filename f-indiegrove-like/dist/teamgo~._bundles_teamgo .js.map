{"version":3,"sources":["webpack:///./bundles/teamgo sync .*\\.tpl\\.html$","webpack:///./bundles/teamgo sync \\..+\\/.+\\.js$","webpack:///./bundles/teamgo/index.js","webpack:///./bundles/teamgo/settings/teamgo-settings.directive.js","webpack:///./bundles/teamgo/settings/teamgo-settings.service.js","webpack:///./bundles/teamgo/settings/teamgo-settings.tpl.html"],"names":["index","$injector","importAll","r","js","require","loadNewModules","m","default","name","invoke","$templateCache","ctx","forEach","key","put","replace","angular","module","directive","templateUrl","restrict","scope","controller","dwAlerts","debounce","TeamgoSettings","$ctrl","$onInit","load","spin","get","catch","err","error","finally","then","settings","save","form","$invalid","factory","$resource","deskworksConfig","res","getApiAbsUrl","method","update","$promise","data"],"mappings":"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","file":"teamgo~._bundles_teamgo .js?_rev=6a5d552d089bfddd72ff","sourcesContent":["var map = {\n\t\"./settings/teamgo-settings.tpl.html\": \"./bundles/teamgo/settings/teamgo-settings.tpl.html\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./bundles/teamgo sync recursive .*\\\\.tpl\\\\.html$\";","var map = {\n\t\"./settings/teamgo-settings.directive.js\": \"./bundles/teamgo/settings/teamgo-settings.directive.js\",\n\t\"./settings/teamgo-settings.service.js\": \"./bundles/teamgo/settings/teamgo-settings.service.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./bundles/teamgo sync recursive \\\\..+\\\\/.+\\\\.js$\";","const index = ['$injector', function index($injector) {\n  // JS\n  const importAll = r => r.keys().map(r);\n  const js = importAll(require.context('./', true, /\\..+\\/.+\\.js$/));\n  $injector.loadNewModules(js.map(m => m.default.name));\n\n  // Templates\n  $injector.invoke(['$templateCache', function($templateCache) {\n    const ctx = require.context('./', true, /.*\\.tpl\\.html$/);\n    ctx.keys().forEach(key => $templateCache.put(key.replace(/^\\.\\//, ''), ctx(key)));\n  }]);\n}];\n\nexport default index;\n","/**\n * Integrations Setup -> Teamgo Settings directive\n */\nexport default angular.module('deskworks.teamgoSettingsDirective', [\n  'debounce',\n  'deskworks.TeamgoSettings',\n])\n\n  .directive('teamgoSettings', function() {\n    const templateUrl = 'settings/teamgo-settings.tpl.html';\n    return {\n      templateUrl,\n      restrict: 'E',\n      scope: true,\n      controller: 'TeamgoSettingsCtrl as $ctrl',\n    };\n  })\n\n  .controller('TeamgoSettingsCtrl', function(dwAlerts, debounce, TeamgoSettings) {\n    const $ctrl = this;\n\n    $ctrl.$onInit = () => {\n      $ctrl.load();\n    };\n\n    /**\n     * Load settings\n     */\n    $ctrl.load = () => {\n      $ctrl.spin = true;\n\n      return TeamgoSettings.get()\n        .catch(err => dwAlerts.error(err, 'Failed to load Teamgo settings.'))\n        .finally(() => { $ctrl.spin = false; })\n        .then(settings => { $ctrl.settings = settings; });\n    };\n\n    /**\n     * Save settings\n     */\n    $ctrl.save = debounce(save, 1000);\n    function save(form) {\n      if (form.$invalid) return;\n      $ctrl.spin = true;\n      return TeamgoSettings.save($ctrl.settings)\n        .catch(err => dwAlerts.error(err, 'Failed to save Teamgo settings.'))\n        .finally(() => { $ctrl.spin = false; });\n    }\n  });\n","export default angular.module('deskworks.TeamgoSettings', [\n  'ngResource',\n  'deskworks.config',\n])\n\n  .factory('TeamgoSettings', function($resource, deskworksConfig) {\n\n    const res = $resource(deskworksConfig.getApiAbsUrl('/teamgo/settings'), {}, {\n      get: { method: 'GET' },\n      update: { method: 'PUT' },\n    });\n\n    return {\n      get: () => res.get().$promise,\n\n      save: data => res.update({}, data).$promise,\n    };\n  });\n","// Module\nvar code = \"<ff-panel> <ff-panel-header ff-spin=\\\"$ctrl.spin\\\" class=\\\"ff-spin-right\\\"> <span translate=\\\"INTEGRATIONS_SETUP.TEAMGO.HEADER\\\"></span> </ff-panel-header> <form name=\\\"form\\\" novalidate> <ff-static> <label class=\\\"ff-row\\\"> <ff-checkbox name=\\\"enabled\\\" ff-model=\\\"$ctrl.settings.enabled\\\" ff-change=\\\"$ctrl.save(form)\\\"> <span translate=\\\"INTEGRATIONS_SETUP.TEAMGO.ENABLED\\\"></span> </ff-checkbox> </label> </ff-static> <label class=\\\"ff-row\\\"> <ff-label flex=\\\"0 0 120px\\\" ff-required=\\\"{{$ctrl.settings.enabled}}\\\"> <span translate=\\\"INTEGRATIONS_SETUP.TEAMGO.API_KEY\\\"></span> </ff-label> <ff-text ff-model=\\\"$ctrl.settings.apiKey\\\" ff-change=\\\"$ctrl.save(form)\\\" ff-required=\\\"$ctrl.settings.enabled\\\" ff-validate-alert=\\\"{{'INTEGRATIONS_SETUP.TEAMGO.API_KEY' | translate}}\\\"></ff-text> </label> <label class=\\\"ff-row\\\"> <ff-label flex=\\\"0 0 120px\\\" ff-required=\\\"{{$ctrl.settings.enabled}}\\\"> <span translate=\\\"INTEGRATIONS_SETUP.TEAMGO.LOGIN\\\"></span> </ff-label> <ff-text ff-model=\\\"$ctrl.settings.login\\\" ff-change=\\\"$ctrl.save(form)\\\" ff-required=\\\"$ctrl.settings.enabled\\\" ff-validate-alert=\\\"{{'INTEGRATIONS_SETUP.TEAMGO.LOGIN' | translate}}\\\"></ff-text> </label> <label class=\\\"ff-row\\\"> <ff-label flex=\\\"0 0 120px\\\" ff-required=\\\"{{$ctrl.settings.enabled}}\\\"> <span translate=\\\"INTEGRATIONS_SETUP.TEAMGO.PASSWORD\\\"></span> </ff-label> <ff-password ff-model=\\\"$ctrl.settings.password\\\" ff-change=\\\"$ctrl.save(form)\\\" ff-required=\\\"$ctrl.settings.enabled\\\" ff-validate-alert=\\\"{{'INTEGRATIONS_SETUP.TEAMGO.PASSWORD' | translate}}\\\"></ff-password> </label> </form> </ff-panel> \";\n// Exports\nmodule.exports = code;"],"sourceRoot":""}