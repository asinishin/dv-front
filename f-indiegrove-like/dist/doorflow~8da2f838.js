(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{"1Gax":function(e,o,r){"use strict";r.r(o),o.default=angular.module("deskworks.DoorflowCenter",["ngResource","deskworks.config"]).factory("DoorflowCenter",["$resource","deskworksConfig",function(e,o){var r=e(o.getApiAbsUrl("/doorflow/centers/:centerId"),{},{update:{method:"PUT"}});return{query:function(){return r.query().$promise},save:function(e){return r.update({centerId:e.id},e).$promise}}}])},"2l71":function(e,o,r){"use strict";r.r(o),o.default=angular.module("deskworks.DoorflowAccessGroup",["ngResource","deskworks.config"]).factory("DoorflowAccessGroup",["$resource","deskworksConfig",function(e,o){var r=e(o.getApiAbsUrl("/doorflow/doorflow-sites/:siteId/doorflow-groups"));return{query:function(e){return r.query({siteId:e}).$promise.then((function(e){return e.unshift({id:null,name:"No Access"}),e}))}}}])},GzqZ:function(e,o,r){"use strict";r.r(o);var t=r("nbuU"),n=r.n(t);o.default=angular.module("deskworks.doorflowAccessGroupDirective",["deskworks.DoorflowCenter","deskworks.DoorflowUser","deskworks.DoorflowAccessGroup"]).directive("doorflowAccessGroup",(function(){return{templateUrl:"access-group/doorflow-access-group.tpl.html",restrict:"E",scope:!0,controller:"DoorflowAccessGroupCtrl as $ctrl",bindToController:{userId:"<",save:"="}}})).controller("DoorflowAccessGroupCtrl",["$q","dwAlerts","helper","state","DoorflowCenter","DoorflowUser","DoorflowAccessGroup",function(e,o,r,t,s,l,f){var c=this;function i(){if(c.doorflowCenter.enabled)return c.doorflowUser.id=c.userId,l.save(t.getCurrentCenterId(),c.doorflowUser).catch((function(e){return o.error(e,"Failed to save DoorFlow user.")}))}c.$onInit=function(){c.load()},c.load=function(){return s.query().catch((function(e){return o.error(e,"Failed to query DoorFlow centers.")})).then((function(s){if(c.doorflowCenter=n()(r).call(r,s,t.getCurrentCenterId()),c.doorflowCenter&&c.doorflowCenter.enabled){var u={};return c.doorflowCenter.doorflowSiteId&&(u.doorflowGroups=f.query(c.doorflowCenter.doorflowSiteId).catch((function(e){return o.error(e,"Failed to query DoorFlow access groups.")}))),c.userId&&"new"!==c.userId&&!r.isUid(c.userId)&&(u.doorflowUser=l.get(t.getCurrentCenterId(),c.userId).catch((function(e){return o.error(e,"Failed to get DoorFlow user.")}))),e.all(u).then((function(e){e.doorflowUser?c.doorflowUser=e.doorflowUser:c.doorflowUser={doorflowGroupId:c.doorflowCenter.defaultDoorflowGroupId},c.doorflowGroups=e.doorflowGroups,c.doorflowGroups&&c.doorflowGroups.length&&c.doorflowCenter.enabled&&(c.save=i)}))}}))}}])},Jl5Q:function(e,o,r){"use strict";r.r(o),o.default=angular.module("deskworks.DoorflowUser",["ngResource","deskworks.config"]).factory("DoorflowUser",["$resource","deskworksConfig",function(e,o){var r=e(o.getApiAbsUrl("/doorflow/centers/:centerId/users/:userId"),{},{update:{method:"PUT"}});return{get:function(e,o){return r.get({centerId:e,userId:o}).$promise},save:function(e,o){return r.update({centerId:e,userId:o.id},o).$promise}}}])},TiEo:function(e,o,r){"use strict";r.r(o);r("3dw1"),r("Muwe"),r("y89P");var t=r("yCd9"),n=r.n(t),s=r("lRNC"),l=r.n(s),f=["$injector",function(e){var o,t,s=(o=r("fVSe"),n()(t=l()(o).call(o)).call(t,o));e.loadNewModules(n()(s).call(s,(function(e){return e.default.name}))),e.invoke(["$templateCache",function(e){var o=r("mMLT");l()(o).call(o).forEach((function(r){return e.put(r.replace(/^\.\//,""),o(r))}))}])}];o.default=f},"V8+7":function(e,o){e.exports='<label class="ff-row animate-collapse" ng-if="$ctrl.doorflowGroups.length && $ctrl.doorflowCenter.enabled"> <ff-label flex="0 1 116px"><span translate="USER_PROFILE.MEMBERSHIP.KISI_ACCESS_GROUP"></span></ff-label> <ff-select name="doorflowGroupId" ff-model="$ctrl.doorflowUser.doorflowGroupId" ff-options="opt.id as opt.name for opt in $ctrl.doorflowGroups"> </ff-select> </label> '},WA0m:function(e,o,r){"use strict";r.r(o),o.default=angular.module("deskworks.DoorflowSite",["ngResource","deskworks.config"]).factory("DoorflowSite",["$resource","deskworksConfig",function(e,o){var r=e(o.getApiAbsUrl("/doorflow/doorflow-sites"),{},{update:{method:"PUT"}});return{query:function(){return r.query().$promise}}}])},XMGG:function(e,o,r){"use strict";r.r(o),o.default=angular.module("deskworks.DoorflowSettings",["ngResource","deskworks.config"]).factory("DoorflowSettings",["$resource","deskworksConfig",function(e,o){var r=e(o.getApiAbsUrl("/doorflow/settings"),{},{update:{method:"PUT"}});return{get:function(){return r.get().$promise},save:function(e){return r.update({},e).$promise}}}])},fVSe:function(e,o,r){var t={"./access-group/doorflow-access-group.directive.js":"GzqZ","./services/doorflow-access-group.service.js":"2l71","./services/doorflow-center.service.js":"1Gax","./services/doorflow-settings.service.js":"XMGG","./services/doorflow-site.service.js":"WA0m","./services/doorflow-user.service.js":"Jl5Q","./settings/doorflow-settings.directive.js":"gmNY"};function n(e){var o=s(e);return r(o)}function s(e){if(!r.o(t,e)){var o=new Error("Cannot find module '"+e+"'");throw o.code="MODULE_NOT_FOUND",o}return t[e]}n.keys=function(){return Object.keys(t)},n.resolve=s,e.exports=n,n.id="fVSe"},gmNY:function(e,o,r){"use strict";r.r(o);r("JBxO"),r("FdtR");o.default=angular.module("deskworks.doorflowSettingsDirective",["debounce","deskworks.DoorflowSettings","deskworks.DoorflowCenter","deskworks.DoorflowSite","deskworks.DoorflowAccessGroup","deskworks.center.service"]).directive("doorflowSettings",(function(){return{templateUrl:"settings/doorflow-settings.tpl.html",restrict:"E",scope:!0,controller:"DoorflowSettingsCtrl as $ctrl"}})).controller("DoorflowSettingsCtrl",["dwAlerts","$q","debounce","helper","centerService","DoorflowSettings","DoorflowCenter","DoorflowAccessGroup","DoorflowSite",function(e,o,r,t,n,s,l,f,c){var i=this;i.$onInit=function(){i.load()},i.load=function(){var r={doorflowSettings:s.get().catch((function(o){return e.error(o,"Failed to load DoorFlow settings.")})),centers:n.getCenters().catch((function(o){return e.error(o,"Failed to query centers.")})),doorflowCenters:l.query().catch((function(o){return e.error(o,"Failed to query DoorFlow centers.")})),doorflowSites:c.query().catch((function(o){return e.error(o,"Failed to query DoorFlow sites.")}))};return i.spin=!0,o.all(r).then((function(e){return i.doorflowSettings=e.doorflowSettings,i.doorflowCenters=e.doorflowCenters,i.doorflowSites=e.doorflowSites,e})).finally((function(){i.spin=!1}))},i.saveSettings=r((function(o){if(o&&o.$invalid)return;return i.spin=!0,s.save(i.doorflowSettings).catch((function(o){return e.error(o,"Failed to save DoorFlow settings.")})).finally((function(){i.spin=!1})).then((function(){return delete i.doorflowCenters,i.load()}))}),1e3),i.saveCenter=r((function(o,r){if(r&&r.$invalid)return;return o.$$spin=!0,l.save(o).finally((function(){o.$$spin=!1})).catch((function(o){return e.error(o,"Failed to save DoorFlow center.")}))}),500),i.changeSite=function(e,o){return i.saveCenter(e,o)}}])},jdTA:function(e,o){e.exports='<ff-panel> <ff-panel-header ff-spin="$ctrl.spin" class="ff-spin-right"> <span translate="INTEGRATIONS_SETUP.DOORFLOW.HEADER"></span> </ff-panel-header> <form name="form" novalidate ff-dim="$ctrl.spin"> <label class="ff-row"> <ff-label flex="0 0 120px"><req translate="INTEGRATIONS_SETUP.API_KEY"></req></ff-label> <ff-text ff-model="$ctrl.doorflowSettings.apiKey" ff-change="$ctrl.saveSettings(form)" ff-required="true" ff-validate-alert="{{\'INTEGRATIONS_SETUP.API_KEY\' | translate}}"></ff-text> </label> </form> <form name="form" novalidate ng-repeat="center in $ctrl.doorflowCenters" class="animate-collapse"> <ff-header ff-dim="center.$$spin" style="padding-top:.6rem"><cell>{{center.$$name}}</cell></ff-header> <label class="ff-row"> <ff-label flex="1 1 270px"><span translate="INTEGRATIONS_SETUP.ENABLED"></span></ff-label> <ff-static flex="1 1 305px"> <ff-checkbox name="enabled" ff-model="center.enabled" ff-change="$ctrl.saveCenter(center, form)"></ff-checkbox> </ff-static> </label> <label class="ff-row"> <ff-label flex="1 1 270px"><req translate="INTEGRATIONS_SETUP.DOORFLOW.SITE"></req></ff-label> <ff-select flex="1 1 305px" name="doorflowSiteId" ff-model="center.doorflowSiteId" ff-required="true" ff-options="site.id as site.name for site in $ctrl.doorflowSites" ff-change="$ctrl.changeSite(center, form)" ff-validate-alert="{{\'INTEGRATIONS_SETUP.DOORFLOW.SITE\' | translate}}"></ff-select> </label> </form> </ff-panel> '},mMLT:function(e,o,r){var t={"./access-group/doorflow-access-group.tpl.html":"V8+7","./settings/doorflow-settings.tpl.html":"jdTA"};function n(e){var o=s(e);return r(o)}function s(e){if(!r.o(t,e)){var o=new Error("Cannot find module '"+e+"'");throw o.code="MODULE_NOT_FOUND",o}return t[e]}n.keys=function(){return Object.keys(t)},n.resolve=s,e.exports=n,n.id="mMLT"}}]);