(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["vendors~white-label~.._node_modules_j"],{

/***/ "../node_modules/jcrop/build/js/animate.js":
/*!*************************************************!*\
  !*** ../node_modules/jcrop/build/js/animate.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(Promise) {/* harmony import */ var _easing__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./easing */ "../node_modules/jcrop/build/js/easing.js");
/* harmony import */ var _easing__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_easing__WEBPACK_IMPORTED_MODULE_0__);


// Animate function uses requestAnimationFrame to sequence events
// Easing functions adapted from jQuery-ui and Robert Penner's equations
// el - element to animate
// from and to - "rect" objects representing initial and target coordinates
// cb - callback receives a "rect" object for each update/frame
// frames - number of frames to animate
// efunc - name of easing function to use
// returns a Promise that resolves when the animation is complete

function Animate (el,from,to,cb,frames=30,efunc='swing') {
  // Set the keys to update, in this case it is our Rect's properties
  // Normalize the initial state as a Rect named "cur"
  const p = ['x','y','w','h'];
  const cur = from.normalize();

  // Lookup the easing function if it is a string
  efunc = (typeof efunc === 'string')? _easing__WEBPACK_IMPORTED_MODULE_0___default.a[efunc] : efunc;

  var curFrame = 0;

  // Return a promise that will resolve when the animation is complete
  return new Promise((resolve,reject) => {
    function step () {
      if (curFrame < frames) {
        // Update each key for this frame
        p.forEach(key => {
          cur[key] = Math.round(efunc(curFrame,from[key],to[key]-from[key],frames));
        });

        // Send it to the callback function
        // update the current frame counter
        // and request the next animation frame
        cb(cur);
        curFrame++;
        requestAnimationFrame(step);
      } else {
        // We've reached the end of the animation frames
        cb(to);
        resolve();
      }
    }

    requestAnimationFrame(step);
  });
}

/* harmony default export */ __webpack_exports__["default"] = (Animate);

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! core-js/es/promise */ "../node_modules/core-js/es/promise/index.js")))

/***/ }),

/***/ "../node_modules/jcrop/build/js/confobj.js":
/*!*************************************************!*\
  !*** ../node_modules/jcrop/build/js/confobj.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _util_extend__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/extend */ "../node_modules/jcrop/build/js/util/extend.js");
/* harmony import */ var _domobj__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./domobj */ "../node_modules/jcrop/build/js/domobj.js");
/* harmony import */ var _defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./defaults */ "../node_modules/jcrop/build/js/defaults.js");




class ConfObj extends _domobj__WEBPACK_IMPORTED_MODULE_1__["default"] {

  constructor (el, options = {}) {
    super(el);
    this.options = {};
    Object.defineProperty(this, '_optconf', {
      configurable: false,
      enumerable: false,
      value: {},
      writable: true
    });
    this.initOptions();
    this.setOptions(Object(_util_extend__WEBPACK_IMPORTED_MODULE_0__["default"])({},_defaults__WEBPACK_IMPORTED_MODULE_2__["default"],options));
  }

  setOptions (options) {
    this.options = Object(_util_extend__WEBPACK_IMPORTED_MODULE_0__["default"])({},this.options,options);

    Object.keys(options).forEach(key => {
      if (this._optconf[key]) this._optconf[key](options[key]);
    });

    return this;
  }

  initOptions () { }

}

/* harmony default export */ __webpack_exports__["default"] = (ConfObj);


/***/ }),

/***/ "../node_modules/jcrop/build/js/defaults.js":
/*!**************************************************!*\
  !*** ../node_modules/jcrop/build/js/defaults.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ({
  animateEasingFunction: 'swing',
  animateFrames: 30,
  multi: false,
  multiMax: null,
  multiMin: 1,
  cropperClass: 'jcrop-widget',
  disabledClass: 'jcrop-disable',
  canDrag: true,
  canResize: true,
  canSelect: true,
  canRemove: true,
  multiple: false,
  autoFront: true,
  active: true,
  handles: ['n','s','e','w','sw','nw','ne','se'],
  shade: true,
  shadeClass: 'jcrop-shade',
  shadeColor: 'black',
  shadeOpacity: 0.5,
  widgetConstructor: null,
  x: 0,
  y: 0,
  w: 100,
  h: 100
});



/***/ }),

/***/ "../node_modules/jcrop/build/js/domobj.js":
/*!************************************************!*\
  !*** ../node_modules/jcrop/build/js/domobj.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
class DomObj {

  constructor (el) {
    if (typeof el === 'string') el = document.getElementById(el);
    this.el = el;
  }

  appendTo (el) {
    if (typeof el === 'string') el = document.getElementById(el);
    el.appendChild(this.el);
    return this;
  }

  emit (evname) {
    const ev = document.createEvent('Event');
    ev.initEvent(evname, true, true);
    ev.cropTarget = this;
    this.el.dispatchEvent(ev);
  }

  removeClass (cl) {
    this.el.className = this.el.className
      .split(' ').filter(i => cl !== i).join(' ');
    return this;
  }

  hasClass (cl) {
    return this.el.className.split(' ').filter(i => cl === i).length;
  }

  addClass (cl) {
    if (!this.hasClass(cl)) this.el.className += ' ' + cl;
    return this;
  }

  listen (evname,handler) {
    this.el.addEventListener(evname,e => handler(e.cropTarget,e));
    return this;
  }

}

/* harmony default export */ __webpack_exports__["default"] = (DomObj);



/***/ }),

/***/ "../node_modules/jcrop/build/js/dragger.js":
/*!*************************************************!*\
  !*** ../node_modules/jcrop/build/js/dragger.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/*
  Dragger function - sets up dragging callbacks on an element
*/

const Dragger = function (el,startcb,movecb,donecb) {
  var ox, oy;
  if (typeof el === 'string') el = document.getElementById(el);

  el.addEventListener('mousedown',start);
  el.addEventListener('touchstart',start);

  function start (e) {
    const obj = (e.type === 'touchstart')? e.touches[0]: e;

    ox = obj.pageX;
    oy = obj.pageY;

    e.preventDefault();
    e.stopPropagation();

    if (!startcb(ox,oy,obj)) return;

    if (e.type === 'mousedown') {
      window.addEventListener('mousemove',move);
      document.addEventListener('mouseup',done);
    } else if (e.type === 'touchstart') {
      document.addEventListener('touchmove',move);
      document.addEventListener('touchend',done);
    }
  }

  function move (e) {
    const obj = (e.type === 'touchmove')? e.changedTouches[0]: e;
    e.stopPropagation();
    movecb(obj.pageX - ox,obj.pageY - oy);
  }

  function done (e) {
    const obj = (e.type === 'touchend')? e.changedTouches[0]: e;

    if (obj.pageX && obj.pageY) movecb(obj.pageX - ox,obj.pageY - oy);

    document.removeEventListener('mouseup',done);
    window.removeEventListener('mousemove',move);
    document.removeEventListener('touchmove',move);
    document.removeEventListener('touchend',done);

    donecb();
  }

  function remove () {
    el.removeEventListener('mousedown',start);
    el.removeEventListener('touchstart',start);
  }

  return { remove };
};

/* harmony default export */ __webpack_exports__["default"] = (Dragger);


/***/ }),

/***/ "../node_modules/jcrop/build/js/easing.js":
/*!************************************************!*\
  !*** ../node_modules/jcrop/build/js/easing.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/* ============================================================
 * Easing functions adapted from jQuery easing library
 * Open source under the BSD License.
 *
 * Copyright Â© 2008 George McGinley Smith
 * All rights reserved.
 * ======================================================== */
/* eslint-disable */

const m = module.exports = {
  // t: current time, b: begInnIng value, c: change In value, d: duration
  def: 'outQuad',
  swing: function (t, b, c, d) {
    return m[m.def](t, b, c, d);
  },
  inQuad: function (t, b, c, d) {
    return c*(t/=d)*t + b;
  },
  outQuad: function (t, b, c, d) {
    return -c *(t/=d)*(t-2) + b;
  },
  inOutQuad: function (t, b, c, d) {
    if ((t/=d/2) < 1) return c/2*t*t + b;
    return -c/2 * ((--t)*(t-2) - 1) + b;
  },
  inCubic: function (t, b, c, d) {
    return c*(t/=d)*t*t + b;
  },
  outCubic: function (t, b, c, d) {
    return c*((t=t/d-1)*t*t + 1) + b;
  },
  inOutCubic: function (t, b, c, d) {
    if ((t/=d/2) < 1) return c/2*t*t*t + b;
    return c/2*((t-=2)*t*t + 2) + b;
  },
  inQuart: function (t, b, c, d) {
    return c*(t/=d)*t*t*t + b;
  },
  outQuart: function (t, b, c, d) {
    return -c * ((t=t/d-1)*t*t*t - 1) + b;
  },
  inOutQuart: function (t, b, c, d) {
    if ((t/=d/2) < 1) return c/2*t*t*t*t + b;
    return -c/2 * ((t-=2)*t*t*t - 2) + b;
  },
  inQuint: function (t, b, c, d) {
    return c*(t/=d)*t*t*t*t + b;
  },
  outQuint: function (t, b, c, d) {
    return c*((t=t/d-1)*t*t*t*t + 1) + b;
  },
  inOutQuint: function (t, b, c, d) {
    if ((t/=d/2) < 1) return c/2*t*t*t*t*t + b;
    return c/2*((t-=2)*t*t*t*t + 2) + b;
  },
  inSine: function (t, b, c, d) {
    return -c * Math.cos(t/d * (Math.PI/2)) + c + b;
  },
  outSine: function (t, b, c, d) {
    return c * Math.sin(t/d * (Math.PI/2)) + b;
  },
  inOutSine: function (t, b, c, d) {
    return -c/2 * (Math.cos(Math.PI*t/d) - 1) + b;
  },
  inExpo: function (t, b, c, d) {
    return (t==0) ? b : c * Math.pow(2, 10 * (t/d - 1)) + b;
  },
  outExpo: function (t, b, c, d) {
    return (t==d) ? b+c : c * (-Math.pow(2, -10 * t/d) + 1) + b;
  },
  inOutExpo: function (t, b, c, d) {
    if (t==0) return b;
    if (t==d) return b+c;
    if ((t/=d/2) < 1) return c/2 * Math.pow(2, 10 * (t - 1)) + b;
    return c/2 * (-Math.pow(2, -10 * --t) + 2) + b;
  },
  inCirc: function (t, b, c, d) {
    return -c * (Math.sqrt(1 - (t/=d)*t) - 1) + b;
  },
  outCirc: function (t, b, c, d) {
    return c * Math.sqrt(1 - (t=t/d-1)*t) + b;
  },
  inOutCirc: function (t, b, c, d) {
    if ((t/=d/2) < 1) return -c/2 * (Math.sqrt(1 - t*t) - 1) + b;
    return c/2 * (Math.sqrt(1 - (t-=2)*t) + 1) + b;
  },
  inElastic: function (t, b, c, d) {
    var s=1.70158;var p=0;var a=c;
    if (t==0) return b;  if ((t/=d)==1) return b+c;  if (!p) p=d*.3;
    if (a < Math.abs(c)) { a=c; var s=p/4; }
    else var s = p/(2*Math.PI) * Math.asin (c/a);
    return -(a*Math.pow(2,10*(t-=1)) * Math.sin( (t*d-s)*(2*Math.PI)/p )) + b;
  },
  outElastic: function (t, b, c, d) {
    var s=1.70158;var p=0;var a=c;
    if (t==0) return b;  if ((t/=d)==1) return b+c;  if (!p) p=d*.3;
    if (a < Math.abs(c)) { a=c; var s=p/4; }
    else var s = p/(2*Math.PI) * Math.asin (c/a);
    return a*Math.pow(2,-10*t) * Math.sin( (t*d-s)*(2*Math.PI)/p ) + c + b;
  },
  inOutElastic: function (t, b, c, d) {
    var s=1.70158;var p=0;var a=c;
    if (t==0) return b;  if ((t/=d/2)==2) return b+c;  if (!p) p=d*(.3*1.5);
    if (a < Math.abs(c)) { a=c; var s=p/4; }
    else var s = p/(2*Math.PI) * Math.asin (c/a);
    if (t < 1) return -.5*(a*Math.pow(2,10*(t-=1)) * Math.sin( (t*d-s)*(2*Math.PI)/p )) + b;
    return a*Math.pow(2,-10*(t-=1)) * Math.sin( (t*d-s)*(2*Math.PI)/p )*.5 + c + b;
  },
  inBack: function (t, b, c, d, s) {
    if (s == undefined) s = 1.70158;
    return c*(t/=d)*t*((s+1)*t - s) + b;
  },
  outBack: function (t, b, c, d, s) {
    if (s == undefined) s = 1.70158;
    return c*((t=t/d-1)*t*((s+1)*t + s) + 1) + b;
  },
  inOutBack: function (t, b, c, d, s) {
    if (s == undefined) s = 1.70158; 
    if ((t/=d/2) < 1) return c/2*(t*t*(((s*=(1.525))+1)*t - s)) + b;
    return c/2*((t-=2)*t*(((s*=(1.525))+1)*t + s) + 2) + b;
  },
  inBounce: function (t, b, c, d) {
    return c - m.outBounce (d-t, 0, c, d) + b;
  },
  outBounce: function (t, b, c, d) {
    if ((t/=d) < (1/2.75)) {
      return c*(7.5625*t*t) + b;
    } else if (t < (2/2.75)) {
      return c*(7.5625*(t-=(1.5/2.75))*t + .75) + b;
    } else if (t < (2.5/2.75)) {
      return c*(7.5625*(t-=(2.25/2.75))*t + .9375) + b;
    } else {
      return c*(7.5625*(t-=(2.625/2.75))*t + .984375) + b;
    }
  },
  inOutBounce: function (t, b, c, d) {
    if (t < d/2) return m.inBounce (t*2, 0, c, d) * .5 + b;
    return m.outBounce (t*2-d, 0, c, d) * .5 + c*.5 + b;
  }
};

/*
 * TERMS OF USE - EASING EQUATIONS
 * Open source under the BSD License. 
 * 
 * Copyright Â© 2001 Robert Penner All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without modification, 
 * are permitted provided that the following conditions are met:
 * 
 * Redistributions of source code must retain the above copyright notice,
 * this list of conditions and the following disclaimer.
 *
 * Redistributions in binary form must reproduce the above copyright
 * notice, this list of conditions and the following disclaimer in the
 * documentation and/or other materials provided with the distribution.
 * 
 * Neither the name of the author nor the names of contributors may be
 * used to endorse or promote products derived from this software
 * without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED 
 * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF
 * THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. 
 */


/***/ }),

/***/ "../node_modules/jcrop/build/js/handle.js":
/*!************************************************!*\
  !*** ../node_modules/jcrop/build/js/handle.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _domobj__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./domobj */ "../node_modules/jcrop/build/js/domobj.js");


class Handle extends _domobj__WEBPACK_IMPORTED_MODULE_0__["default"] {
}

Handle.create = function (clname) {
  const el = document.createElement('div');
  el.className = clname;
  return new Handle(el);
};

/* harmony default export */ __webpack_exports__["default"] = (Handle);


/***/ }),

/***/ "../node_modules/jcrop/build/js/jcrop.js":
/*!***********************************************!*\
  !*** ../node_modules/jcrop/build/js/jcrop.js ***!
  \***********************************************/
/*! exports provided: attach, Stage, defaults, Dragger, Widget, Rect, Handle, Sticker, easing, load, Shade, DomObj, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "attach", function() { return attach; });
/* harmony import */ var _util_extend__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/extend */ "../node_modules/jcrop/build/js/util/extend.js");
/* harmony import */ var _defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./defaults */ "../node_modules/jcrop/build/js/defaults.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "defaults", function() { return _defaults__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _stage_dom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./stage/dom */ "../node_modules/jcrop/build/js/stage/dom.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Stage", function() { return _stage_dom__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _stage_image__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./stage/image */ "../node_modules/jcrop/build/js/stage/image.js");
/* harmony import */ var _widget__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./widget */ "../node_modules/jcrop/build/js/widget.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Widget", function() { return _widget__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _shade__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./shade */ "../node_modules/jcrop/build/js/shade.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Shade", function() { return _shade__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _handle__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./handle */ "../node_modules/jcrop/build/js/handle.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Handle", function() { return _handle__WEBPACK_IMPORTED_MODULE_6__["default"]; });

/* harmony import */ var _dragger__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./dragger */ "../node_modules/jcrop/build/js/dragger.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Dragger", function() { return _dragger__WEBPACK_IMPORTED_MODULE_7__["default"]; });

/* harmony import */ var _rect__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./rect */ "../node_modules/jcrop/build/js/rect.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Rect", function() { return _rect__WEBPACK_IMPORTED_MODULE_8__["default"]; });

/* harmony import */ var _sticker__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./sticker */ "../node_modules/jcrop/build/js/sticker.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Sticker", function() { return _sticker__WEBPACK_IMPORTED_MODULE_9__["default"]; });

/* harmony import */ var _domobj__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./domobj */ "../node_modules/jcrop/build/js/domobj.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DomObj", function() { return _domobj__WEBPACK_IMPORTED_MODULE_10__["default"]; });

/* harmony import */ var _easing__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./easing */ "../node_modules/jcrop/build/js/easing.js");
/* harmony import */ var _easing__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(_easing__WEBPACK_IMPORTED_MODULE_11__);
/* harmony reexport (default from non-harmony) */ __webpack_require__.d(__webpack_exports__, "easing", function() { return _easing__WEBPACK_IMPORTED_MODULE_11___default.a; });
/* harmony import */ var _loader__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./loader */ "../node_modules/jcrop/build/js/loader.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "load", function() { return _loader__WEBPACK_IMPORTED_MODULE_12__["default"]; });















function attach (el,options={}) {
  options = Object(_util_extend__WEBPACK_IMPORTED_MODULE_0__["default"])({},_defaults__WEBPACK_IMPORTED_MODULE_1__["default"],options);

  if (typeof el === 'string') el = document.getElementById(el);
  if (el.tagName === 'IMG') return new _stage_image__WEBPACK_IMPORTED_MODULE_3__["default"](el,options);

  return new _stage_dom__WEBPACK_IMPORTED_MODULE_2__["default"](el,options);
}



/* harmony default export */ __webpack_exports__["default"] = ({ Stage: _stage_dom__WEBPACK_IMPORTED_MODULE_2__["default"], defaults: _defaults__WEBPACK_IMPORTED_MODULE_1__["default"], Dragger: _dragger__WEBPACK_IMPORTED_MODULE_7__["default"], Widget: _widget__WEBPACK_IMPORTED_MODULE_4__["default"], Rect: _rect__WEBPACK_IMPORTED_MODULE_8__["default"], Handle: _handle__WEBPACK_IMPORTED_MODULE_6__["default"], Sticker: _sticker__WEBPACK_IMPORTED_MODULE_9__["default"], easing: (_easing__WEBPACK_IMPORTED_MODULE_11___default()), load: _loader__WEBPACK_IMPORTED_MODULE_12__["default"], attach, Shade: _shade__WEBPACK_IMPORTED_MODULE_5__["default"], DomObj: _domobj__WEBPACK_IMPORTED_MODULE_10__["default"] });


/***/ }),

/***/ "../node_modules/jcrop/build/js/keyboard.js":
/*!**************************************************!*\
  !*** ../node_modules/jcrop/build/js/keyboard.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
class Keyboard {
  constructor (widget) {
    this.widget = widget;
    this.attach();
  }

  attach () {
    const c = this.widget;
    c.el.addEventListener('keydown',(e) => {
      const d = e.shiftKey ? 10 : 1;
      switch (e.key) {
        case 'ArrowRight': c.nudge(d); break;
        case 'ArrowLeft': c.nudge(-d); break;
        case 'ArrowUp': c.nudge(0,-d); break;
        case 'ArrowDown': c.nudge(0,d); break;

        case 'Delete':
        case 'Backspace':
          c.stage.removeWidget(c);
          break;

        default: return;
      }
      e.preventDefault();
    });
  }
}

Keyboard.attach = function (widget) {
  return new Keyboard(widget);
};

/* harmony default export */ __webpack_exports__["default"] = (Keyboard);


/***/ }),

/***/ "../node_modules/jcrop/build/js/loader.js":
/*!************************************************!*\
  !*** ../node_modules/jcrop/build/js/loader.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(Promise) {// IMAGE LOADING/LOADED FUNCTIONS
// returns a promise that resolves when image is loaded
// if it's already loaded, the promise will resolve immediately
function Loader (img) {
  if (typeof img === 'string') img = document.getElementById(img);

  return new Promise(function (resolve,reject) {
    if (Loader.check(img)) return resolve(img);

    function handler (e) {
      img.removeEventListener('load',handler);
      img.removeEventListener('error',handler);
      (e.type === 'load')? resolve(img): reject(img);
    }

    img.addEventListener('load',handler);
    img.addEventListener('error',handler);
  });
}

// static method to check if image is completely loaded
Loader.check = function (img) {
  if (!img.complete) return false;
  if (img.naturalWidth === 0) return false;
  return true;
};

/* harmony default export */ __webpack_exports__["default"] = (Loader);

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! core-js/es/promise */ "../node_modules/core-js/es/promise/index.js")))

/***/ }),

/***/ "../node_modules/jcrop/build/js/rect.js":
/*!**********************************************!*\
  !*** ../node_modules/jcrop/build/js/rect.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* Rect class -- describes a rectangle with two points, usually
   top left and bottom right. It allows the second set of coordinates
   to be described as either w/h or x2/y2 and allows getting and
   setting of those values such that the object values will always be
   consistent with the latest input. It should be noted that it does not
   attempt to keep these points normalized. That is, you should expect
   to see the actual w/h properties to sometimes be negative values.
   To normalize the values, use the normalize method, which will return
   a new Rect object with normalized values.
*/
class Rect {

  constructor () {
    this.x = 0;
    this.y = 0;
    this.w = 0;
    this.h = 0;
  }

  set x1 (v) {
    this.w = this.x2 - v;
    this.x = v;
  }

  set y1 (v) {
    this.h = this.y2 - v;
    this.y = v;
  }

  get x2 () {
    return this.x + this.w;
  }

  set x2 (x) {
    this.w = x - this.x;
  }

  get y2 () {
    return this.y + this.h;
  }

  get aspect () {
    return this.w/this.h;
  }

  set y2 (y) {
    this.h = y - this.y;
  }

  round () {
    return Rect.create(
      Math.round(this.x),
      Math.round(this.y),
      Math.round(this.w),
      Math.round(this.h)
    );
  }

  normalize () {
    const [x1,y1,x2,y2] = [
      Math.min(this.x,this.x2),
      Math.min(this.y,this.y2),
      Math.max(this.x,this.x2),
      Math.max(this.y,this.y2)
    ];
    return Rect.create(x1,y1,x2-x1,y2-y1);
  }

  rebound (w,h) {
    const rect = this.normalize();
    if (rect.x<0) rect.x = 0;
    if (rect.y<0) rect.y = 0;
    if (rect.x2>w) rect.x = w-rect.w;
    if (rect.y2>h) rect.y = h-rect.h;
    return rect;
  }

  scale (x,y) {
    y = y || x;
    return Rect.create(this.x,this.y,this.w*x,this.h*y);
  }

  center (w,h) {
    return Rect.create(
      (w - this.w)/2,
      (h - this.h)/2,
      this.w, this.h
    );
  }

  toArray () {
    return [ this.x, this.y, this.w, this.h ];
  }
}

Rect.fromPoints = function (p1,p2) {
  const [x1,y1,x2,y2] = [
    Math.min(p1[0],p2[0]),
    Math.min(p1[1],p2[1]),
    Math.max(p1[0],p2[0]),
    Math.max(p1[1],p2[1])
  ];
  return Rect.create(x1,y1,x2-x1,y2-y1);
};

Rect.create = function (x=0,y=0,w=0,h=0) {
  const c = new Rect();
  c.x = x;
  c.y = y;
  c.w = w;
  c.h = h;
  return c;
};

Rect.from = function (el) {
  if (Array.isArray(el)) return Rect.fromArray(el);
  const c = new Rect();
  c.x = el.offsetLeft;
  c.y = el.offsetTop;
  c.w = el.offsetWidth;
  c.h = el.offsetHeight;
  return c;
};

Rect.fromArray = function (args) {
  if (args.length === 4) return Rect.create.apply(this,args);
  else if (args.length === 2) return Rect.fromPoints(args[0],args[1]);
  else throw "fromArray method problem";
};

Rect.sizeOf = function (el,y) {
  if (y) return Rect.create(0,0,el,y);
  const c = new Rect();
  c.w = el.offsetWidth;
  c.h = el.offsetHeight;
  return c;
};

Rect.getMax = function (w,h,aspect) {
  if ((w/h) > aspect) return [ h*aspect, h ];
  else return [ w, w/aspect ];
};

Rect.fromPoint = function (point,w,h,quad='br') {
  const c = new Rect();
  c.x = point[0];
  c.y = point[1];
  switch (quad) {
    case 'br':
      c.x2 = c.x + w;
      c.y2 = c.y + h;
      break;
    case 'bl':
      c.x2 = c.x - w;
      c.y2 = c.y + h;
      break;
    case 'tl':
      c.x2 = c.x - w;
      c.y2 = c.y - h;
      break;
    case 'tr':
      c.x2 = c.x + w;
      c.y2 = c.y - h;
      break;
  }
  return c;
};

/* harmony default export */ __webpack_exports__["default"] = (Rect);



/***/ }),

/***/ "../node_modules/jcrop/build/js/shade.js":
/*!***********************************************!*\
  !*** ../node_modules/jcrop/build/js/shade.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _rect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rect */ "../node_modules/jcrop/build/js/rect.js");
/* harmony import */ var _domobj__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./domobj */ "../node_modules/jcrop/build/js/domobj.js");



class Manager {
  constructor (el) {
    if (typeof el === 'string') el = document.getElementById(el);
    this.el = el;
    this.shades = {};
  }

  init (options={}) {
    this.active = (options.shade!==undefined)? options.shade: true;

    this.keys().forEach(
      key => { this.shades[key] = Shade.create(options,key); }
    );

    this.el.addEventListener('crop.update',(e) => {
      if (e.cropTarget.isActive() && e.cropTarget.options.shade) {
        this.adjust(e.cropTarget.pos);
      }
    },false);

    this.enable();
  }

  adjust (rect) {
    const f = _rect__WEBPACK_IMPORTED_MODULE_0__["default"].from(this.el);
    const s = this.shades;
    s.t.h = rect.y;
    s.b.h = f.h - rect.y2;
    s.t.w = s.b.w = Math.floor(rect.w);
    s.l.w = s.t.x = s.b.x = Math.ceil(rect.x);
    s.r.w = f.w - (Math.ceil(rect.x) + Math.floor(rect.w));
  }

  keys () {
    return [ 't', 'l', 'r', 'b' ];
  }

  enable () {
    const s = this.shades;
    this.keys().forEach(key => s[key].insert(this.el));
  }

  disable () {
    const s = this.shades;
    this.keys().forEach(key => s[key].remove());
  }

  setStyle (color,opacity) {
    const s = this.shades;
    this.keys().forEach(key => s[key].color(color).opacity(opacity));
  }

}

Manager.attach = function (i) {
  const el = i.el;
  const m = new Manager(el);
  m.init(i.options);
  i.shades = m;
  i._optconf['shade'] = v => i.updateShades();
  i._optconf['shadeColor'] = v => m.setStyle(v);
  i._optconf['shadeOpacity'] = v => m.setStyle(null,v);
  return m;
};

class Shade extends _domobj__WEBPACK_IMPORTED_MODULE_1__["default"] {
  insert (el) { el.appendChild(this.el); }
  remove () { this.el.remove(); }

  set w (w) { this.el.style.width = w + 'px'; }
  set h (h) { this.el.style.height = h + 'px'; }
  set x (l) { this.el.style.left = l + 'px'; }

  color (c) {
    if (c) this.el.style.backgroundColor = c;
    return this;
  }

  opacity (o) {
    if (o) this.el.style.opacity = o;
    return this;
  }
}

Shade.create = function (o,key) {
  const el = document.createElement('div');
  const clname = o.shadeClass || 'jcrop-shade';
  el.className = `${clname} ${key}`;
  const obj = new Shade(el);
  return obj.color(o.shadeColor).opacity(o.shadeOpacity);
};

Shade.Manager = Manager;

/* harmony default export */ __webpack_exports__["default"] = (Shade);


/***/ }),

/***/ "../node_modules/jcrop/build/js/stage/dom.js":
/*!***************************************************!*\
  !*** ../node_modules/jcrop/build/js/stage/dom.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _util_extend__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/extend */ "../node_modules/jcrop/build/js/util/extend.js");
/* harmony import */ var _widget__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../widget */ "../node_modules/jcrop/build/js/widget.js");
/* harmony import */ var _shade__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../shade */ "../node_modules/jcrop/build/js/shade.js");
/* harmony import */ var _dragger__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../dragger */ "../node_modules/jcrop/build/js/dragger.js");
/* harmony import */ var _confobj__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../confobj */ "../node_modules/jcrop/build/js/confobj.js");
/* harmony import */ var _sticker__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../sticker */ "../node_modules/jcrop/build/js/sticker.js");







class Stage extends _confobj__WEBPACK_IMPORTED_MODULE_4__["default"] {

  constructor (el,options) {
    super(el,options);
    this.crops = new Set();
    this.active = null;
    this.enabled = true;
    this.init();
  }

  init () {
    this.initStageDrag();
    _shade__WEBPACK_IMPORTED_MODULE_2__["default"].Manager.attach(this);
  }

  initOptions () {
    this._optconf['multi'] = v => { if (!v) this.limitWidgets(); };
  }

  setEnabled (v=true) {
    const clname = this.options.disabledClass || 'jcrop-disable';
    this[v?'removeClass':'addClass'](clname);
    this.enabled = !!v;
    return this;
  }

  focus () {
    if (!this.enabled) return false;
    if (this.active) this.active.el.focus();
    else this.el.focus();
    return this;
  }

  limitWidgets (n=1) {
    if (!this.crops || (n<1)) return false;
    const crops = Array.from(this.crops);
    while (crops.length > n) this.removeWidget(crops.shift());
    return this;
  }

  canCreate () {
    const n = this.crops.size;
    const o = this.options;
    if (!this.enabled) return false;
    if ((o.multiMax!==null) && (n >= o.multiMax)) return false;
    if (!o.multi && (n >= o.multiMin)) return false;
    return true;
  }

  canRemove () {
    const n = this.crops.size;
    const o = this.options;
    if (!this.enabled) return false;
    if (this.active && !this.active.options.canRemove) return false;
    if (!o.canRemove || (n <= o.multiMin)) return false;
    return true;
  }

  initStageDrag () {
    var crop, pos, w, h, stick;
    Object(_dragger__WEBPACK_IMPORTED_MODULE_3__["default"])(this.el,
      (x,y,e) => {
        if (!this.canCreate()) return false;
        crop = (this.options.widgetConstructor || _widget__WEBPACK_IMPORTED_MODULE_1__["default"]).create(this.options);
        pos = crop.pos;
        pos.x = e.pageX - this.el.offsetParent.offsetLeft - this.el.offsetLeft;
        pos.y = e.pageY - this.el.offsetParent.offsetTop - this.el.offsetTop;
        w = this.el.offsetWidth;
        h = this.el.offsetHeight;
        this.addWidget(crop);
        stick = _sticker__WEBPACK_IMPORTED_MODULE_5__["default"].create(pos,w,h,'se');
        if (this.options.aspectRatio) stick.aspect = this.options.aspectRatio;
        crop.render(pos);
        this.focus();
        return true;
      },
      (x,y) => {
        crop.render(stick.move(x,y));
      },
      () => {
        crop.emit('crop.change');
      }
    );
  }

  reorderWidgets () {
    var z = 10;
    this.crops.forEach(crop => {
      crop.el.style.zIndex = z++;
      if (this.active === crop) crop.addClass('active');
      else crop.removeClass('active');
    });
    this.refresh();
  }

  activate (widget) {
    if (!this.enabled) return this;
    widget = widget || Array.from(this.crops).pop();
    if (widget) {
      if (this.active === widget) return;
      this.active = widget;
      this.crops.delete(widget);
      this.crops.add(widget);
      this.reorderWidgets();
      this.active.el.focus();
      this.options.shade && this.shades.enable();
      widget.emit('crop.activate');
    } else {
      this.shades.disable();
    }
    return this;
  }

  addWidget (widget) {
    widget.attachToStage(this);
    widget.appendTo(this.el);
    this.activate(widget);
    return this;
  }

  newWidget (rect,options={}) {
    options = Object(_util_extend__WEBPACK_IMPORTED_MODULE_0__["default"])({},this.options,options);
    const crop = (this.options.widgetConstructor || _widget__WEBPACK_IMPORTED_MODULE_1__["default"]).create(options);
    crop.render(rect);
    this.addWidget(crop);
    crop.el.focus();
    return crop;
  }

  removeWidget (widget) {
    if (!this.canRemove()) return false;
    widget.emit('crop.remove');
    widget.el.remove();
    this.crops.delete(widget);
    this.activate();
  }

  refresh () {
    this.options.shade && this.active &&
      this.shades.adjust(this.active.pos);
  }

  updateShades () {
    if (!this.shades) return;

    if (this.options.shade) this.shades.enable();
    else this.shades.disable();

    this.options.shade && this.active &&
      this.shades.adjust(this.active.pos);

    return this;
  }

  setOptions (options={}) {
    super.setOptions(options);
    if (this.crops) Array.from(this.crops).forEach(i => i.setOptions(options));
  }

  destroy () {
  }

}

/* harmony default export */ __webpack_exports__["default"] = (Stage);



/***/ }),

/***/ "../node_modules/jcrop/build/js/stage/image.js":
/*!*****************************************************!*\
  !*** ../node_modules/jcrop/build/js/stage/image.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dom */ "../node_modules/jcrop/build/js/stage/dom.js");


function div (clname,el = document.createElement('div')) {
  el.className = clname;
  return el;
}

class ImageStage extends _dom__WEBPACK_IMPORTED_MODULE_0__["default"] {
  constructor (el,options) {
    const wrapper = div('jcrop-stage jcrop-image-stage');
    el.parentNode.insertBefore(wrapper, el);
    wrapper.appendChild(el);
    super(wrapper,options);
    this.srcEl = el;
    el.onload = this.resizeToImage.bind(this);
    this.resizeToImage();
  }

  resizeToImage () {
    const w = this.srcEl.width;
    const h = this.srcEl.height;
    this.el.style.width = w+'px';
    this.el.style.height = h+'px';
    this.refresh();
  }

  destroy () {
    this.el.parentNode.insertBefore(this.srcEl,this.el);
    this.el.remove();
  }
}

/* harmony default export */ __webpack_exports__["default"] = (ImageStage);


/***/ }),

/***/ "../node_modules/jcrop/build/js/sticker.js":
/*!*************************************************!*\
  !*** ../node_modules/jcrop/build/js/sticker.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _rect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rect */ "../node_modules/jcrop/build/js/rect.js");
/* This class creates a draggable frame by locking the
   corner opposite to the one being dragged */



class Sticker {

  constructor (rect,w,h,ord) {
    this.sw = w;
    this.sh = h;
    this.rect = rect;
    this.locked = this.getCornerPoint(this.getOppositeCorner(ord));
    this.stuck = this.getCornerPoint(ord);
  }

  move (x,y) {
    return _rect__WEBPACK_IMPORTED_MODULE_0__["default"].fromPoints(this.locked, this.translateStuckPoint(x,y));
  }

  // Determine "quadrant" of handle drag relative to locked point
  // returns string tl = top left, br = bottom right, etc
  getDragQuadrant (x,y) {
    const relx = this.locked[0] - x;
    const rely = this.locked[1] - y;
    if ((relx < 0) && (rely < 0)) return 'br';
    else if ((relx >= 0) && (rely >= 0)) return 'tl';
    else if ((relx < 0) && (rely >= 0)) return 'tr';
    else return 'bl';
  }

  // get the maximum aspect ratio rectangle for the current drag
  getMaxRect (x,y,aspect) {
    return _rect__WEBPACK_IMPORTED_MODULE_0__["default"].getMax(
      Math.abs(this.locked[0] - x),
      Math.abs(this.locked[1] - y),
      aspect
    );
  }

  // given the offset of the drag versus the stuck point,
  // determine the real dragging coordinates
  translateStuckPoint (ox,oy) {
    const [xx,yy,sp] = this.stuck;

    var x = (xx === null)? sp: xx + ox;
    var y = (yy === null)? sp: yy + oy;

    if (x > this.sw) x = this.sw;
    if (y > this.sh) y = this.sh;
    if (x < 0) x = 0;
    if (y < 0) y = 0;

    if (this.aspect) {
      var [w,h] = this.getMaxRect(x,y,this.aspect);
      var quad = this.getDragQuadrant(x,y);
      var res = _rect__WEBPACK_IMPORTED_MODULE_0__["default"].fromPoint(this.locked,w,h,quad);
      return [ res.x2, res.y2 ];
    }

    return [x,y];
  }

  getCornerPoint (h) {
    const p = this.rect;
    switch (h) {
      case 'n': return [ null, p.y, p.x ];
      case 's': return [ null, p.y2, p.x2 ];
      case 'e': return [ p.x2, null, p.y2 ];
      case 'w': return [ p.x, null, p.y ];
      case 'se': return [ p.x2, p.y2 ];
      case 'sw': return [ p.x, p.y2 ];
      case 'ne': return [ p.x2, p.y ];
      case 'nw': return [ p.x, p.y ];
    }
  }

  getOppositeCorner (h) {
    switch (h) {
      case 'n': return 'se';
      case 's': return 'nw';
      case 'e': return 'nw';
      case 'w': return 'se';
      case 'se': return 'nw';
      case 'sw': return 'ne';
      case 'ne': return 'sw';
      case 'nw': return 'se';
    }
  }

}

Sticker.create = function (rect,w,h,ord) {
  return new Sticker(rect,w,h,ord);
};

/* harmony default export */ __webpack_exports__["default"] = (Sticker);


/***/ }),

/***/ "../node_modules/jcrop/build/js/util/extend.js":
/*!*****************************************************!*\
  !*** ../node_modules/jcrop/build/js/util/extend.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return extend; });
function extend () {
  var extended = {};

  for (let key in arguments) {
    var argument = arguments[key];
    for (let prop in argument) {
      if (Object.prototype.hasOwnProperty.call(argument, prop)) {
        extended[prop] = argument[prop];
      }
    }
  }

  return extended;
};



/***/ }),

/***/ "../node_modules/jcrop/build/js/widget.js":
/*!************************************************!*\
  !*** ../node_modules/jcrop/build/js/widget.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _util_extend__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/extend */ "../node_modules/jcrop/build/js/util/extend.js");
/* harmony import */ var _handle__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./handle */ "../node_modules/jcrop/build/js/handle.js");
/* harmony import */ var _defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./defaults */ "../node_modules/jcrop/build/js/defaults.js");
/* harmony import */ var _dragger__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dragger */ "../node_modules/jcrop/build/js/dragger.js");
/* harmony import */ var _rect__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./rect */ "../node_modules/jcrop/build/js/rect.js");
/* harmony import */ var _sticker__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./sticker */ "../node_modules/jcrop/build/js/sticker.js");
/* harmony import */ var _confobj__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./confobj */ "../node_modules/jcrop/build/js/confobj.js");
/* harmony import */ var _keyboard__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./keyboard */ "../node_modules/jcrop/build/js/keyboard.js");
/* harmony import */ var _animate__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./animate */ "../node_modules/jcrop/build/js/animate.js");










class Widget extends _confobj__WEBPACK_IMPORTED_MODULE_6__["default"] {

  constructor (el,options={}) {
    super(el,options);
    this.pos = _rect__WEBPACK_IMPORTED_MODULE_4__["default"].from(this.el);
    this.init();
  }

  init () {
    this.createHandles();
    this.createMover();
    this.attachFocus();
    _keyboard__WEBPACK_IMPORTED_MODULE_7__["default"].attach(this);
    return this;
  }

  initOptions () {
    this._optconf['aspectRatio'] = ar => {
      const p = this.pos;
      this.aspect = ar || null;
      if (this.aspect && p) {
        var [w,h] = _rect__WEBPACK_IMPORTED_MODULE_4__["default"].getMax(p.w,p.h,ar);
        this.render(_rect__WEBPACK_IMPORTED_MODULE_4__["default"].fromPoint([p.x,p.y],w,h));
      }
    };
  }

  attachToStage (stage) {
    this.stage = stage;
    this.emit('crop.attach');
  }

  attachFocus () {
    this.el.addEventListener('focus',(e) => {
      this.stage.activate(this);
      this.emit('crop.update');
    },false);
  }

  animate (rect,frames,efunc) {
    const t = this;
    efunc = efunc || t.options.animateEasingFunction || 'swing';
    frames = frames || t.options.animateFrames || 30;
    return Object(_animate__WEBPACK_IMPORTED_MODULE_8__["default"])(t.el,t.pos,rect,r => t.render(r.normalize()),frames,efunc)
      .then(() => this.emit('crop.change'));
  }

  createMover () {
    var w,h;
    this.pos = _rect__WEBPACK_IMPORTED_MODULE_4__["default"].from(this.el);
    var stick;
    Object(_dragger__WEBPACK_IMPORTED_MODULE_3__["default"])(
      this.el,
      () => {
        const pe = this.el.parentElement;
        if (!this.stage.enabled) return false;
        [w,h] = [ pe.offsetWidth, pe.offsetHeight ];
        stick = _rect__WEBPACK_IMPORTED_MODULE_4__["default"].from(this.el);
        this.el.focus();
        this.stage.activate(this);
        return true;
      },
      (x,y) => {
        this.pos.x = stick.x + x;
        this.pos.y = stick.y + y;
        this.render(this.pos.rebound(w,h));
      },
      () => {
        this.emit('crop.change');
      }
    );
  }

  nudge (x=0,y=0) {
    const pe = this.el.parentElement;
    const [w,h] = [ pe.offsetWidth, pe.offsetHeight ];
    if (x) this.pos.x += x;
    if (y) this.pos.y += y;
    this.render(this.pos.rebound(w,h));
    this.emit('crop.change');
  }

  createHandles () {
    this.options.handles.forEach(c => {
      const handle = _handle__WEBPACK_IMPORTED_MODULE_1__["default"].create('jcrop-handle '+c);
      handle.appendTo(this.el);

      var stick;
      Object(_dragger__WEBPACK_IMPORTED_MODULE_3__["default"])(handle.el,
        () => {
          if (!this.stage.enabled) return false;
          const pe = this.el.parentElement;
          const w = pe.offsetWidth;
          const h = pe.offsetHeight;
          stick = _sticker__WEBPACK_IMPORTED_MODULE_5__["default"].create(_rect__WEBPACK_IMPORTED_MODULE_4__["default"].from(this.el), w, h, c);
          if (this.aspect) stick.aspect = this.aspect;
          this.el.focus();
          this.emit('crop.active');
          return true;
        },
        (x,y) => this.render(stick.move(x,y)),
        () => {
          this.emit('crop.change');
        }
      );
    });
    return this;
  }

  isActive () {
    return (this.stage && (this.stage.active === this));
  }

  render (r) {
    r = r || this.pos;
    this.el.style.top = Math.round(r.y) + 'px';
    this.el.style.left = Math.round(r.x) + 'px';
    this.el.style.width = Math.round(r.w) + 'px';
    this.el.style.height = Math.round(r.h) + 'px';
    this.pos = r;
    this.emit('crop.update');
    return this;
  }

  doneDragging () {
    this.pos = _rect__WEBPACK_IMPORTED_MODULE_4__["default"].from(this.el);
  }

}

Widget.create = function (options={}) {
  const el = document.createElement('div');
  const opts = Object(_util_extend__WEBPACK_IMPORTED_MODULE_0__["default"])({},_defaults__WEBPACK_IMPORTED_MODULE_2__["default"],options);
  el.setAttribute('tabindex','0');
  el.className = opts.cropperClass || 'jcrop-widget';
  return new (options.widgetConstructor || Widget)(el,opts);
};

/* harmony default export */ __webpack_exports__["default"] = (Widget);


/***/ }),

/***/ "../node_modules/jcrop/dist/jcrop.css":
/*!********************************************!*\
  !*** ../node_modules/jcrop/dist/jcrop.css ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// extracted by extract-css-chunks-webpack-plugin

/***/ }),

/***/ "../node_modules/vanilla-picker/dist/vanilla-picker.mjs":
/*!**************************************************************!*\
  !*** ../node_modules/vanilla-picker/dist/vanilla-picker.mjs ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(__webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var classCallCheck = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};

var createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();

var slicedToArray = function () {
  function sliceIterator(arr, i) {
    var _arr = [];
    var _n = true;
    var _d = false;
    var _e = undefined;

    try {
      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
        _arr.push(_s.value);

        if (i && _arr.length === i) break;
      }
    } catch (err) {
      _d = true;
      _e = err;
    } finally {
      try {
        if (!_n && _i["return"]) _i["return"]();
      } finally {
        if (_d) throw _e;
      }
    }

    return _arr;
  }

  return function (arr, i) {
    if (Array.isArray(arr)) {
      return arr;
    } else if (Symbol.iterator in Object(arr)) {
      return sliceIterator(arr, i);
    } else {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    }
  };
}();

String.prototype.startsWith = String.prototype.startsWith || function (needle) {
    return this.indexOf(needle) === 0;
};
String.prototype.padStart = String.prototype.padStart || function (len, pad) {
    var str = this;while (str.length < len) {
        str = pad + str;
    }return str;
};

var colorNames = { cb: '0f8ff', tqw: 'aebd7', q: '-ffff', qmrn: '7fffd4', zr: '0ffff', bg: '5f5dc', bsq: 'e4c4', bck: '---', nch: 'ebcd', b: '--ff', bvt: '8a2be2', brwn: 'a52a2a', brw: 'deb887', ctb: '5f9ea0', hrt: '7fff-', chcT: 'd2691e', cr: '7f50', rnw: '6495ed', crns: '8dc', crms: 'dc143c', cn: '-ffff', Db: '--8b', Dcn: '-8b8b', Dgnr: 'b8860b', Dgr: 'a9a9a9', Dgrn: '-64-', Dkhk: 'bdb76b', Dmgn: '8b-8b', Dvgr: '556b2f', Drng: '8c-', Drch: '9932cc', Dr: '8b--', Dsmn: 'e9967a', Dsgr: '8fbc8f', DsTb: '483d8b', DsTg: '2f4f4f', Dtrq: '-ced1', Dvt: '94-d3', ppnk: '1493', pskb: '-bfff', mgr: '696969', grb: '1e90ff', rbrc: 'b22222', rwht: 'af0', stg: '228b22', chs: '-ff', gnsb: 'dcdcdc', st: '8f8ff', g: 'd7-', gnr: 'daa520', gr: '808080', grn: '-8-0', grnw: 'adff2f', hnw: '0fff0', htpn: '69b4', nnr: 'cd5c5c', ng: '4b-82', vr: '0', khk: '0e68c', vnr: 'e6e6fa', nrb: '0f5', wngr: '7cfc-', mnch: 'acd', Lb: 'add8e6', Lcr: '08080', Lcn: 'e0ffff', Lgnr: 'afad2', Lgr: 'd3d3d3', Lgrn: '90ee90', Lpnk: 'b6c1', Lsmn: 'a07a', Lsgr: '20b2aa', Lskb: '87cefa', LsTg: '778899', Lstb: 'b0c4de', Lw: 'e0', m: '-ff-', mgrn: '32cd32', nn: 'af0e6', mgnt: '-ff', mrn: '8--0', mqm: '66cdaa', mmb: '--cd', mmrc: 'ba55d3', mmpr: '9370db', msg: '3cb371', mmsT: '7b68ee', '': '-fa9a', mtr: '48d1cc', mmvt: 'c71585', mnLb: '191970', ntc: '5fffa', mstr: 'e4e1', mccs: 'e4b5', vjw: 'dead', nv: '--80', c: 'df5e6', v: '808-0', vrb: '6b8e23', rng: 'a5-', rngr: '45-', rch: 'da70d6', pgnr: 'eee8aa', pgrn: '98fb98', ptrq: 'afeeee', pvtr: 'db7093', ppwh: 'efd5', pchp: 'dab9', pr: 'cd853f', pnk: 'c0cb', pm: 'dda0dd', pwrb: 'b0e0e6', prp: '8-080', cc: '663399', r: '--', sbr: 'bc8f8f', rb: '4169e1', sbrw: '8b4513', smn: 'a8072', nbr: '4a460', sgrn: '2e8b57', ssh: '5ee', snn: 'a0522d', svr: 'c0c0c0', skb: '87ceeb', sTb: '6a5acd', sTgr: '708090', snw: 'afa', n: '-ff7f', stb: '4682b4', tn: 'd2b48c', t: '-8080', thst: 'd8bfd8', tmT: '6347', trqs: '40e0d0', vt: 'ee82ee', whT: '5deb3', wht: '', hts: '5f5f5', w: '-', wgrn: '9acd32' };

function printNum(num) {
    var decs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;

    var str = decs > 0 ? num.toFixed(decs).replace(/0+$/, '').replace(/\.$/, '') : num.toString();
    return str || '0';
}

var Color = function () {
    function Color(r, g, b, a) {
        classCallCheck(this, Color);


        var that = this;
        function parseString(input) {

            if (input.startsWith('hsl')) {
                var _input$match$map = input.match(/([\-\d\.e]+)/g).map(Number),
                    _input$match$map2 = slicedToArray(_input$match$map, 4),
                    h = _input$match$map2[0],
                    s = _input$match$map2[1],
                    l = _input$match$map2[2],
                    _a = _input$match$map2[3];

                if (_a === undefined) {
                    _a = 1;
                }

                h /= 360;
                s /= 100;
                l /= 100;
                that.hsla = [h, s, l, _a];
            } else if (input.startsWith('rgb')) {
                var _input$match$map3 = input.match(/([\-\d\.e]+)/g).map(Number),
                    _input$match$map4 = slicedToArray(_input$match$map3, 4),
                    _r = _input$match$map4[0],
                    _g = _input$match$map4[1],
                    _b = _input$match$map4[2],
                    _a2 = _input$match$map4[3];

                if (_a2 === undefined) {
                    _a2 = 1;
                }

                that.rgba = [_r, _g, _b, _a2];
            } else {
                if (input.startsWith('#')) {
                    that.rgba = Color.hexToRgb(input);
                } else {
                    that.rgba = Color.nameToRgb(input) || Color.hexToRgb(input);
                }
            }
        }

        if (r === undefined) ; else if (Array.isArray(r)) {
            this.rgba = r;
        } else if (b === undefined) {
            var color = r && '' + r;
            if (color) {
                parseString(color.toLowerCase());
            }
        } else {
            this.rgba = [r, g, b, a === undefined ? 1 : a];
        }
    }

    createClass(Color, [{
        key: 'printRGB',
        value: function printRGB(alpha) {
            var rgb = alpha ? this.rgba : this.rgba.slice(0, 3),
                vals = rgb.map(function (x, i) {
                return printNum(x, i === 3 ? 3 : 0);
            });

            return alpha ? 'rgba(' + vals + ')' : 'rgb(' + vals + ')';
        }
    }, {
        key: 'printHSL',
        value: function printHSL(alpha) {
            var mults = [360, 100, 100, 1],
                suff = ['', '%', '%', ''];

            var hsl = alpha ? this.hsla : this.hsla.slice(0, 3),
                vals = hsl.map(function (x, i) {
                return printNum(x * mults[i], i === 3 ? 3 : 1) + suff[i];
            });

            return alpha ? 'hsla(' + vals + ')' : 'hsl(' + vals + ')';
        }
    }, {
        key: 'printHex',
        value: function printHex(alpha) {
            var hex = this.hex;
            return alpha ? hex : hex.substring(0, 7);
        }
    }, {
        key: 'rgba',
        get: function get$$1() {
            if (this._rgba) {
                return this._rgba;
            }
            if (!this._hsla) {
                throw new Error('No color is set');
            }

            return this._rgba = Color.hslToRgb(this._hsla);
        },
        set: function set$$1(rgb) {
            if (rgb.length === 3) {
                rgb[3] = 1;
            }

            this._rgba = rgb;
            this._hsla = null;
        }
    }, {
        key: 'rgbString',
        get: function get$$1() {
            return this.printRGB();
        }
    }, {
        key: 'rgbaString',
        get: function get$$1() {
            return this.printRGB(true);
        }
    }, {
        key: 'hsla',
        get: function get$$1() {
            if (this._hsla) {
                return this._hsla;
            }
            if (!this._rgba) {
                throw new Error('No color is set');
            }

            return this._hsla = Color.rgbToHsl(this._rgba);
        },
        set: function set$$1(hsl) {
            if (hsl.length === 3) {
                hsl[3] = 1;
            }

            this._hsla = hsl;
            this._rgba = null;
        }
    }, {
        key: 'hslString',
        get: function get$$1() {
            return this.printHSL();
        }
    }, {
        key: 'hslaString',
        get: function get$$1() {
            return this.printHSL(true);
        }
    }, {
        key: 'hex',
        get: function get$$1() {
            var rgb = this.rgba,
                hex = rgb.map(function (x, i) {
                return i < 3 ? x.toString(16) : Math.round(x * 255).toString(16);
            });

            return '#' + hex.map(function (x) {
                return x.padStart(2, '0');
            }).join('');
        },
        set: function set$$1(hex) {
            this.rgba = Color.hexToRgb(hex);
        }
    }], [{
        key: 'hexToRgb',
        value: function hexToRgb(input) {

            var hex = (input.startsWith('#') ? input.slice(1) : input).replace(/^(\w{3})$/, '$1F').replace(/^(\w)(\w)(\w)(\w)$/, '$1$1$2$2$3$3$4$4').replace(/^(\w{6})$/, '$1FF');

            if (!hex.match(/^([0-9a-fA-F]{8})$/)) {
                throw new Error('Unknown hex color; ' + input);
            }

            var rgba = hex.match(/^(\w\w)(\w\w)(\w\w)(\w\w)$/).slice(1).map(function (x) {
                return parseInt(x, 16);
            });

            rgba[3] = rgba[3] / 255;
            return rgba;
        }
    }, {
        key: 'nameToRgb',
        value: function nameToRgb(input) {

            var hash = input.toLowerCase().replace('at', 'T').replace(/[aeiouyldf]/g, '').replace('ght', 'L').replace('rk', 'D').slice(-5, 4),
                hex = colorNames[hash];
            return hex === undefined ? hex : Color.hexToRgb(hex.replace(/\-/g, '00').padStart(6, 'f'));
        }
    }, {
        key: 'rgbToHsl',
        value: function rgbToHsl(_ref) {
            var _ref2 = slicedToArray(_ref, 4),
                r = _ref2[0],
                g = _ref2[1],
                b = _ref2[2],
                a = _ref2[3];

            r /= 255;
            g /= 255;
            b /= 255;

            var max = Math.max(r, g, b),
                min = Math.min(r, g, b);
            var h = void 0,
                s = void 0,
                l = (max + min) / 2;

            if (max === min) {
                h = s = 0;
            } else {
                var d = max - min;
                s = l > 0.5 ? d / (2 - max - min) : d / (max + min);
                switch (max) {
                    case r:
                        h = (g - b) / d + (g < b ? 6 : 0);break;
                    case g:
                        h = (b - r) / d + 2;break;
                    case b:
                        h = (r - g) / d + 4;break;
                }

                h /= 6;
            }

            return [h, s, l, a];
        }
    }, {
        key: 'hslToRgb',
        value: function hslToRgb(_ref3) {
            var _ref4 = slicedToArray(_ref3, 4),
                h = _ref4[0],
                s = _ref4[1],
                l = _ref4[2],
                a = _ref4[3];

            var r = void 0,
                g = void 0,
                b = void 0;

            if (s === 0) {
                r = g = b = l;
            } else {
                var hue2rgb = function hue2rgb(p, q, t) {
                    if (t < 0) t += 1;
                    if (t > 1) t -= 1;
                    if (t < 1 / 6) return p + (q - p) * 6 * t;
                    if (t < 1 / 2) return q;
                    if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;
                    return p;
                };

                var q = l < 0.5 ? l * (1 + s) : l + s - l * s,
                    p = 2 * l - q;

                r = hue2rgb(p, q, h + 1 / 3);
                g = hue2rgb(p, q, h);
                b = hue2rgb(p, q, h - 1 / 3);
            }

            var rgba = [r * 255, g * 255, b * 255].map(Math.round);
            rgba[3] = a;

            return rgba;
        }
    }]);
    return Color;
}();

var EventBucket = function () {
    function EventBucket() {
        classCallCheck(this, EventBucket);

        this._events = [];
    }

    createClass(EventBucket, [{
        key: 'add',
        value: function add(target, type, handler) {
            target.addEventListener(type, handler, false);
            this._events.push({
                target: target,
                type: type,
                handler: handler
            });
        }
    }, {
        key: 'remove',
        value: function remove(target, type, handler) {
            this._events = this._events.filter(function (e) {
                var isMatch = true;
                if (target && target !== e.target) {
                    isMatch = false;
                }
                if (type && type !== e.type) {
                    isMatch = false;
                }
                if (handler && handler !== e.handler) {
                    isMatch = false;
                }

                if (isMatch) {
                    EventBucket._doRemove(e.target, e.type, e.handler);
                }
                return !isMatch;
            });
        }
    }, {
        key: 'destroy',
        value: function destroy() {
            this._events.forEach(function (e) {
                return EventBucket._doRemove(e.target, e.type, e.handler);
            });
            this._events = [];
        }
    }], [{
        key: '_doRemove',
        value: function _doRemove(target, type, handler) {
            target.removeEventListener(type, handler, false);
        }
    }]);
    return EventBucket;
}();

function parseHTML(htmlString) {

    var div = document.createElement('div');
    div.innerHTML = htmlString;
    return div.firstElementChild;
}

function dragTrack(eventBucket, area, callback) {
    var dragging = false;

    function clamp(val, min, max) {
        return Math.max(min, Math.min(val, max));
    }

    function onMove(e, info, starting) {
        if (starting) {
            dragging = true;
        }
        if (!dragging) {
            return;
        }

        e.preventDefault();

        var bounds = area.getBoundingClientRect(),
            w = bounds.width,
            h = bounds.height,
            x = info.clientX,
            y = info.clientY;

        var relX = clamp(x - bounds.left, 0, w),
            relY = clamp(y - bounds.top, 0, h);

        callback(relX / w, relY / h);
    }

    function onMouse(e, starting) {
        var button = e.buttons === undefined ? e.which : e.buttons;
        if (button === 1) {
            onMove(e, e, starting);
        } else {
            dragging = false;
        }
    }

    function onTouch(e, starting) {
        if (e.touches.length === 1) {
            onMove(e, e.touches[0], starting);
        } else {
            dragging = false;
        }
    }

    eventBucket.add(area, 'mousedown', function (e) {
        onMouse(e, true);
    });
    eventBucket.add(area, 'touchstart', function (e) {
        onTouch(e, true);
    });
    eventBucket.add(window, 'mousemove', onMouse);
    eventBucket.add(area, 'touchmove', onTouch);
    eventBucket.add(window, 'mouseup', function (e) {
        dragging = false;
    });
    eventBucket.add(area, 'touchend', function (e) {
        dragging = false;
    });
    eventBucket.add(area, 'touchcancel', function (e) {
        dragging = false;
    });
}

var BG_TRANSP = 'url("data:image/svg+xml,%3Csvg xmlns=\'http://www.w3.org/2000/svg\' width=\'2\' height=\'2\'%3E%3Cpath d=\'M1,0H0V1H2V2H1\' fill=\'lightgrey\'/%3E%3C/svg%3E")';
var HUES = 360;

var EVENT_KEY = 'keydown',
    EVENT_CLICK_OUTSIDE = 'mousedown',
    EVENT_TAB_MOVE = 'focusin';

function $(selector, context) {
    return (context || document).querySelector(selector);
}

function stopEvent(e) {

    e.preventDefault();
    e.stopPropagation();
}
function onKey(bucket, target, keys, handler, stop) {
    bucket.add(target, EVENT_KEY, function (e) {
        if (keys.indexOf(e.key) >= 0) {
            if (stop) {
                stopEvent(e);
            }
            handler(e);
        }
    });
}

var _style = document.createElement('style');
_style.textContent = '.picker_wrapper.no_alpha .picker_alpha{display:none}.picker_wrapper.no_editor .picker_editor{position:absolute;z-index:-1;opacity:0}.picker_wrapper.no_cancel .picker_cancel{display:none}.layout_default.picker_wrapper{display:-webkit-box;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;flex-flow:row wrap;-webkit-box-pack:justify;justify-content:space-between;-webkit-box-align:stretch;align-items:stretch;font-size:10px;width:25em;padding:.5em}.layout_default.picker_wrapper input,.layout_default.picker_wrapper button{font-size:1rem}.layout_default.picker_wrapper>*{margin:.5em}.layout_default.picker_wrapper::before{content:\'\';display:block;width:100%;height:0;-webkit-box-ordinal-group:2;order:1}.layout_default .picker_slider,.layout_default .picker_selector{padding:1em}.layout_default .picker_hue{width:100%}.layout_default .picker_sl{-webkit-box-flex:1;flex:1 1 auto}.layout_default .picker_sl::before{content:\'\';display:block;padding-bottom:100%}.layout_default .picker_editor{-webkit-box-ordinal-group:2;order:1;width:6.5rem}.layout_default .picker_editor input{width:100%;height:100%}.layout_default .picker_sample{-webkit-box-ordinal-group:2;order:1;-webkit-box-flex:1;flex:1 1 auto}.layout_default .picker_done,.layout_default .picker_cancel{-webkit-box-ordinal-group:2;order:1}.picker_wrapper{box-sizing:border-box;background:#f2f2f2;box-shadow:0 0 0 1px silver;cursor:default;font-family:sans-serif;color:#444;pointer-events:auto}.picker_wrapper:focus{outline:none}.picker_wrapper button,.picker_wrapper input{box-sizing:border-box;border:none;box-shadow:0 0 0 1px silver;outline:none}.picker_wrapper button:focus,.picker_wrapper button:active,.picker_wrapper input:focus,.picker_wrapper input:active{box-shadow:0 0 2px 1px dodgerblue}.picker_wrapper button{padding:.4em .6em;cursor:pointer;background-color:whitesmoke;background-image:-webkit-gradient(linear, left bottom, left top, from(gainsboro), to(transparent));background-image:linear-gradient(0deg, gainsboro, transparent)}.picker_wrapper button:active{background-image:-webkit-gradient(linear, left bottom, left top, from(transparent), to(gainsboro));background-image:linear-gradient(0deg, transparent, gainsboro)}.picker_wrapper button:hover{background-color:white}.picker_selector{position:absolute;z-index:1;display:block;-webkit-transform:translate(-50%, -50%);transform:translate(-50%, -50%);border:2px solid white;border-radius:100%;box-shadow:0 0 3px 1px #67b9ff;background:currentColor;cursor:pointer}.picker_slider .picker_selector{border-radius:2px}.picker_hue{position:relative;background-image:-webkit-gradient(linear, left top, right top, from(red), color-stop(yellow), color-stop(lime), color-stop(cyan), color-stop(blue), color-stop(magenta), to(red));background-image:linear-gradient(90deg, red, yellow, lime, cyan, blue, magenta, red);box-shadow:0 0 0 1px silver}.picker_sl{position:relative;box-shadow:0 0 0 1px silver;background-image:-webkit-gradient(linear, left top, left bottom, from(white), color-stop(50%, rgba(255,255,255,0))),-webkit-gradient(linear, left bottom, left top, from(black), color-stop(50%, rgba(0,0,0,0))),-webkit-gradient(linear, left top, right top, from(gray), to(rgba(128,128,128,0)));background-image:linear-gradient(180deg, white, rgba(255,255,255,0) 50%),linear-gradient(0deg, black, rgba(0,0,0,0) 50%),linear-gradient(90deg, gray, rgba(128,128,128,0))}.picker_alpha,.picker_sample{position:relative;background:url("data:image/svg+xml,%3Csvg xmlns=\'http://www.w3.org/2000/svg\' width=\'2\' height=\'2\'%3E%3Cpath d=\'M1,0H0V1H2V2H1\' fill=\'lightgrey\'/%3E%3C/svg%3E") left top/contain white;box-shadow:0 0 0 1px silver}.picker_alpha .picker_selector,.picker_sample .picker_selector{background:none}.picker_editor input{font-family:monospace;padding:.2em .4em}.picker_sample::before{content:\'\';position:absolute;display:block;width:100%;height:100%;background:currentColor}.picker_arrow{position:absolute;z-index:-1}.picker_wrapper.popup{position:absolute;z-index:2;margin:1.5em}.picker_wrapper.popup,.picker_wrapper.popup .picker_arrow::before,.picker_wrapper.popup .picker_arrow::after{background:#f2f2f2;box-shadow:0 0 10px 1px rgba(0,0,0,0.4)}.picker_wrapper.popup .picker_arrow{width:3em;height:3em;margin:0}.picker_wrapper.popup .picker_arrow::before,.picker_wrapper.popup .picker_arrow::after{content:"";display:block;position:absolute;top:0;left:0;z-index:-99}.picker_wrapper.popup .picker_arrow::before{width:100%;height:100%;-webkit-transform:skew(45deg);transform:skew(45deg);-webkit-transform-origin:0 100%;transform-origin:0 100%}.picker_wrapper.popup .picker_arrow::after{width:150%;height:150%;box-shadow:none}.popup.popup_top{bottom:100%;left:0}.popup.popup_top .picker_arrow{bottom:0;left:0;-webkit-transform:rotate(-90deg);transform:rotate(-90deg)}.popup.popup_bottom{top:100%;left:0}.popup.popup_bottom .picker_arrow{top:0;left:0;-webkit-transform:rotate(90deg) scale(1, -1);transform:rotate(90deg) scale(1, -1)}.popup.popup_left{top:0;right:100%}.popup.popup_left .picker_arrow{top:0;right:0;-webkit-transform:scale(-1, 1);transform:scale(-1, 1)}.popup.popup_right{top:0;left:100%}.popup.popup_right .picker_arrow{top:0;left:0}';
document.documentElement.firstElementChild.appendChild(_style);

var Picker = function () {
    function Picker(options) {
        classCallCheck(this, Picker);


        this.settings = {

            popup: 'right',
            layout: 'default',
            alpha: true,
            editor: true,
            editorFormat: 'hex',
            cancelButton: false,
            defaultColor: '#0cf'
        };

        this._events = new EventBucket();

        this.onChange = null;

        this.onDone = null;

        this.onOpen = null;

        this.onClose = null;

        this.setOptions(options);
    }

    createClass(Picker, [{
        key: 'setOptions',
        value: function setOptions(options) {
            var _this = this;

            if (!options) {
                return;
            }
            var settings = this.settings;

            function transfer(source, target, skipKeys) {
                for (var key in source) {
                    if (skipKeys && skipKeys.indexOf(key) >= 0) {
                        continue;
                    }

                    target[key] = source[key];
                }
            }

            if (options instanceof HTMLElement) {
                settings.parent = options;
            } else {

                if (settings.parent && options.parent && settings.parent !== options.parent) {
                    this._events.remove(settings.parent);
                    this._popupInited = false;
                }

                transfer(options, settings);

                if (options.onChange) {
                    this.onChange = options.onChange;
                }
                if (options.onDone) {
                    this.onDone = options.onDone;
                }
                if (options.onOpen) {
                    this.onOpen = options.onOpen;
                }
                if (options.onClose) {
                    this.onClose = options.onClose;
                }

                var col = options.color || options.colour;
                if (col) {
                    this._setColor(col);
                }
            }

            var parent = settings.parent;
            if (parent && settings.popup && !this._popupInited) {

                var openProxy = function openProxy(e) {
                    return _this.openHandler(e);
                };

                this._events.add(parent, 'click', openProxy);

                onKey(this._events, parent, [' ', 'Spacebar', 'Enter'], openProxy);

                this._popupInited = true;
            } else if (options.parent && !settings.popup) {
                this.show();
            }
        }
    }, {
        key: 'openHandler',
        value: function openHandler(e) {
            if (this.show()) {

                e && e.preventDefault();

                this.settings.parent.style.pointerEvents = 'none';

                var toFocus = e && e.type === EVENT_KEY ? this._domEdit : this.domElement;
                setTimeout(function () {
                    return toFocus.focus();
                }, 100);

                if (this.onOpen) {
                    this.onOpen(this.colour);
                }
            }
        }
    }, {
        key: 'closeHandler',
        value: function closeHandler(e) {
            var event = e && e.type;
            var doHide = false;

            if (!e) {
                doHide = true;
            } else if (event === EVENT_CLICK_OUTSIDE || event === EVENT_TAB_MOVE) {

                var knownTime = (this.__containedEvent || 0) + 100;
                if (e.timeStamp > knownTime) {
                    doHide = true;
                }
            } else {

                stopEvent(e);

                doHide = true;
            }

            if (doHide && this.hide()) {
                this.settings.parent.style.pointerEvents = '';

                if (event !== EVENT_CLICK_OUTSIDE) {
                    this.settings.parent.focus();
                }

                if (this.onClose) {
                    this.onClose(this.colour);
                }
            }
        }
    }, {
        key: 'movePopup',
        value: function movePopup(options, open) {

            this.closeHandler();

            this.setOptions(options);
            if (open) {
                this.openHandler();
            }
        }
    }, {
        key: 'setColor',
        value: function setColor(color, silent) {
            this._setColor(color, { silent: silent });
        }
    }, {
        key: '_setColor',
        value: function _setColor(color, flags) {
            if (typeof color === 'string') {
                color = color.trim();
            }
            if (!color) {
                return;
            }

            flags = flags || {};
            var c = void 0;
            try {

                c = new Color(color);
            } catch (ex) {
                if (flags.failSilently) {
                    return;
                }
                throw ex;
            }

            if (!this.settings.alpha) {
                var hsla = c.hsla;
                hsla[3] = 1;
                c.hsla = hsla;
            }
            this.colour = this.color = c;
            this._setHSLA(null, null, null, null, flags);
        }
    }, {
        key: 'setColour',
        value: function setColour(colour, silent) {
            this.setColor(colour, silent);
        }
    }, {
        key: 'show',
        value: function show() {
            var parent = this.settings.parent;
            if (!parent) {
                return false;
            }

            if (this.domElement) {
                var toggled = this._toggleDOM(true);

                this._setPosition();

                return toggled;
            }

            var html = this.settings.template || '<div class="picker_wrapper" tabindex="-1"><div class="picker_arrow"></div><div class="picker_hue picker_slider"><div class="picker_selector"></div></div><div class="picker_sl"><div class="picker_selector"></div></div><div class="picker_alpha picker_slider"><div class="picker_selector"></div></div><div class="picker_editor"><input aria-label="Type a color name or hex value"/></div><div class="picker_sample"></div><div class="picker_done"><button>Ok</button></div><div class="picker_cancel"><button>Cancel</button></div></div>';
            var wrapper = parseHTML(html);

            this.domElement = wrapper;
            this._domH = $('.picker_hue', wrapper);
            this._domSL = $('.picker_sl', wrapper);
            this._domA = $('.picker_alpha', wrapper);
            this._domEdit = $('.picker_editor input', wrapper);
            this._domSample = $('.picker_sample', wrapper);
            this._domOkay = $('.picker_done button', wrapper);
            this._domCancel = $('.picker_cancel button', wrapper);

            wrapper.classList.add('layout_' + this.settings.layout);
            if (!this.settings.alpha) {
                wrapper.classList.add('no_alpha');
            }
            if (!this.settings.editor) {
                wrapper.classList.add('no_editor');
            }
            if (!this.settings.cancelButton) {
                wrapper.classList.add('no_cancel');
            }
            this._ifPopup(function () {
                return wrapper.classList.add('popup');
            });

            this._setPosition();

            if (this.colour) {
                this._updateUI();
            } else {
                this._setColor(this.settings.defaultColor);
            }
            this._bindEvents();

            return true;
        }
    }, {
        key: 'hide',
        value: function hide() {
            return this._toggleDOM(false);
        }
    }, {
        key: 'destroy',
        value: function destroy() {
            this._events.destroy();
            if (this.domElement) {
                this.settings.parent.removeChild(this.domElement);
            }
        }
    }, {
        key: '_bindEvents',
        value: function _bindEvents() {
            var _this2 = this;

            var that = this,
                dom = this.domElement,
                events = this._events;

            function addEvent(target, type, handler) {
                events.add(target, type, handler);
            }

            addEvent(dom, 'click', function (e) {
                return e.preventDefault();
            });

            dragTrack(events, this._domH, function (x, y) {
                return that._setHSLA(x);
            });

            dragTrack(events, this._domSL, function (x, y) {
                return that._setHSLA(null, x, 1 - y);
            });

            if (this.settings.alpha) {
                dragTrack(events, this._domA, function (x, y) {
                    return that._setHSLA(null, null, null, 1 - y);
                });
            }

            var editInput = this._domEdit;
            {
                addEvent(editInput, 'input', function (e) {
                    that._setColor(this.value, { fromEditor: true, failSilently: true });
                });

                addEvent(editInput, 'focus', function (e) {
                    var input = this;

                    if (input.selectionStart === input.selectionEnd) {
                        input.select();
                    }
                });
            }

            this._ifPopup(function () {

                var popupCloseProxy = function popupCloseProxy(e) {
                    return _this2.closeHandler(e);
                };

                addEvent(window, EVENT_CLICK_OUTSIDE, popupCloseProxy);
                addEvent(window, EVENT_TAB_MOVE, popupCloseProxy);
                onKey(events, dom, ['Esc', 'Escape'], popupCloseProxy);

                var timeKeeper = function timeKeeper(e) {
                    _this2.__containedEvent = e.timeStamp;
                };
                addEvent(dom, EVENT_CLICK_OUTSIDE, timeKeeper);

                addEvent(dom, EVENT_TAB_MOVE, timeKeeper);

                addEvent(_this2._domCancel, 'click', popupCloseProxy);
            });

            var onDoneProxy = function onDoneProxy(e) {
                _this2._ifPopup(function () {
                    return _this2.closeHandler(e);
                });
                if (_this2.onDone) {
                    _this2.onDone(_this2.colour);
                }
            };
            addEvent(this._domOkay, 'click', onDoneProxy);
            onKey(events, dom, ['Enter'], onDoneProxy);
        }
    }, {
        key: '_setPosition',
        value: function _setPosition() {
            var parent = this.settings.parent,
                elm = this.domElement;

            if (parent !== elm.parentNode) {
                parent.appendChild(elm);
            }

            this._ifPopup(function (popup) {

                if (getComputedStyle(parent).position === 'static') {
                    parent.style.position = 'relative';
                }

                var cssClass = popup === true ? 'popup_right' : 'popup_' + popup;

                ['popup_top', 'popup_bottom', 'popup_left', 'popup_right'].forEach(function (c) {

                    if (c === cssClass) {
                        elm.classList.add(c);
                    } else {
                        elm.classList.remove(c);
                    }
                });

                elm.classList.add(cssClass);
            });
        }
    }, {
        key: '_setHSLA',
        value: function _setHSLA(h, s, l, a, flags) {
            flags = flags || {};

            var col = this.colour,
                hsla = col.hsla;

            [h, s, l, a].forEach(function (x, i) {
                if (x || x === 0) {
                    hsla[i] = x;
                }
            });
            col.hsla = hsla;

            this._updateUI(flags);

            if (this.onChange && !flags.silent) {
                this.onChange(col);
            }
        }
    }, {
        key: '_updateUI',
        value: function _updateUI(flags) {
            if (!this.domElement) {
                return;
            }
            flags = flags || {};

            var col = this.colour,
                hsl = col.hsla,
                cssHue = 'hsl(' + hsl[0] * HUES + ', 100%, 50%)',
                cssHSL = col.hslString,
                cssHSLA = col.hslaString;

            var uiH = this._domH,
                uiSL = this._domSL,
                uiA = this._domA,
                thumbH = $('.picker_selector', uiH),
                thumbSL = $('.picker_selector', uiSL),
                thumbA = $('.picker_selector', uiA);

            function posX(parent, child, relX) {
                child.style.left = relX * 100 + '%';
            }
            function posY(parent, child, relY) {
                child.style.top = relY * 100 + '%';
            }

            posX(uiH, thumbH, hsl[0]);

            this._domSL.style.backgroundColor = this._domH.style.color = cssHue;

            posX(uiSL, thumbSL, hsl[1]);
            posY(uiSL, thumbSL, 1 - hsl[2]);

            uiSL.style.color = cssHSL;

            posY(uiA, thumbA, 1 - hsl[3]);

            var opaque = cssHSL,
                transp = opaque.replace('hsl', 'hsla').replace(')', ', 0)'),
                bg = 'linear-gradient(' + [opaque, transp] + ')';

            this._domA.style.backgroundImage = bg + ', ' + BG_TRANSP;

            if (!flags.fromEditor) {
                var format = this.settings.editorFormat,
                    alpha = this.settings.alpha;

                var value = void 0;
                switch (format) {
                    case 'rgb':
                        value = col.printRGB(alpha);break;
                    case 'hsl':
                        value = col.printHSL(alpha);break;
                    default:
                        value = col.printHex(alpha);
                }
                this._domEdit.value = value;
            }

            this._domSample.style.color = cssHSLA;
        }
    }, {
        key: '_ifPopup',
        value: function _ifPopup(actionIf, actionElse) {
            if (this.settings.parent && this.settings.popup) {
                actionIf && actionIf(this.settings.popup);
            } else {
                actionElse && actionElse();
            }
        }
    }, {
        key: '_toggleDOM',
        value: function _toggleDOM(toVisible) {
            var dom = this.domElement;
            if (!dom) {
                return false;
            }

            var displayStyle = toVisible ? '' : 'none',
                toggle = dom.style.display !== displayStyle;

            if (toggle) {
                dom.style.display = displayStyle;
            }
            return toggle;
        }
    }], [{
        key: 'StyleElement',
        get: function get$$1() {
            return _style;
        }
    }]);
    return Picker;
}();

/* harmony default export */ __webpack_exports__["default"] = (Picker);


/***/ })

}]);
//# sourceMappingURL=vendors~white-label~.._node_modules_j.js.map?_rev=8878bc037361654e0a40