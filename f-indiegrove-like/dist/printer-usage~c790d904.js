(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{"/3la":function(e,t,r){"use strict";r.r(t),t.default=angular.module("deskworks.PrinterUsage",["ngResource","ngFileUpload","deskworks.helper","datesDeserializer"]).factory("PrinterUsage",["$resource","$q","$filter","datesDeserializer","deskworksConfig","helper","Upload",function(e,t,r,n,a,s,f){var l=a.getApiAbsUrl("/dw-print/printer-usages"),i="".concat(l,"/:id/:action"),o=n(["printerUsages.postDate","postDate"]),c=e(i,{},{query:{method:"GET",isArray:!1,transformResponse:[angular.fromJson,o]},get:{method:"GET",isArray:!1,transformResponse:[angular.fromJson,o]},update:{method:"PUT"}});return{query:function(e,t,r){return c.query({centerId:e||0,page:t||1,pageSize:r||10}).$promise},get:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:50,n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"id";return c.get({id:e,page:t,pageSize:r,sort:n}).$promise},save:function(e){return c.update({id:e.id},this.serialize(e)).$promise},delete:function(e){return c.delete({id:e}).$promise},postCharges:function(e){return c.save({id:e,action:"charge"},{}).$promise},import:function(e,t,r){return f.upload({url:l+"?centerId="+e+"&importProfileId="+t,method:"POST",withCredentials:!0,data:{file:r}})},serialize:function(e){return{number:e.number,postDate:r("date")(e.postDate,"yyyy-MM-dd")}}}}])},"21nL":function(e,t,r){"use strict";r.r(t);r("JBxO"),r("FdtR");var n=r("yCd9"),a=r.n(n);t.default=angular.module("deskworks.PrinterUsageListCtrl",["deskworks.PrinterUsage","deskworks.PrintImportProfile","ngFileUpload"]).controller("PrinterUsageListCtrl",["$scope","$q","$translate","dwAlerts","state","helper","PrinterUsage","PrintImportProfile",function(e,t,r,n,s,f,l,i){var o=this;s.setPageTitle(r.instant("PRINTER_USAGE.LIST.PAGE_TITLE")),o.onInit=function(){o.navPage(),i.query({centerId:s.getCurrentCenterId()}).catch((function(e){return n.error(e,"Failed to get import profiles.")})).then((function(e){o.importProfiles=e,o.importProfile=o.importProfiles[0]}))},o.import=function(e,i){if(i&&i.length>0)return n.error(r.instant("PRINTER_USAGE.INVALID_FORMAT"));if(e&&e.length&&!f.pointFirstInvalid("#printerUsageImport")){o.spinImport=!0;var c=a()(e).call(e,(function(e){return l.import(s.getCurrentCenterId(),o.importProfile.id,e).catch((function(t){return n.error(t,"Failed to import "+e.name)}))}));return t.all(c).finally((function(){return o.navPage(o.data.page).finally((function(){o.spinImport=!1}))}))}},o.edit=function(e){return s.setPath("/printer-usage/"+e.id)},o.navPage=function(e){return l.query(s.getCurrentCenterId(),e).catch((function(e){return n.error(e,"Failed to query printer usages.")})).then((function(e){o.data=e,o.usages=o.data.printerUsages}))},o.onInit()}])},"3CdH":function(e,t,r){"use strict";r.r(t),t.default=angular.module("deskworks.optsPrintFormattingType",[]).factory("optsPrintFormattingType",(function(){return[{id:"Sharp",name:"Sharp",columns:[{id:"colPrinterCode",_name:"PRINTER_USAGE_SETTINGS.IMPORT_PROFILES.PRINTER_CODE",default:"Login Name"},{id:"colJobMode",_name:"PRINTER_USAGE_SETTINGS.IMPORT_PROFILES.JOB_MODE",default:"Job Mode"},{id:"colBwCount",_name:"PRINTER_USAGE_SETTINGS.IMPORT_PROFILES.PRINT_BLACK",default:"Black & White Total Count"},{id:"colColorCount",_name:"PRINTER_USAGE_SETTINGS.IMPORT_PROFILES.PRINT_COLOR",default:"Full Color Total Count"}]},{id:"Canon",name:"Canon",columns:[{id:"colPrinterCode",_name:"PRINTER_USAGE_SETTINGS.IMPORT_PROFILES.PRINTER_CODE",default:"Login Name"},{id:"colBwCount",_name:"PRINTER_USAGE_SETTINGS.IMPORT_PROFILES.PRINT_BLACK",default:"Black & White Total Count"},{id:"colColorCount",_name:"PRINTER_USAGE_SETTINGS.IMPORT_PROFILES.PRINT_COLOR",default:"Full Color Total Count"},{id:"colScanCount",_name:"PRINTER_USAGE_SETTINGS.IMPORT_PROFILES.SCAN",default:"Scan Total Count"},{id:"colFaxCount",_name:"PRINTER_USAGE_SETTINGS.IMPORT_PROFILES.FAX",default:"Fax Total Count"}]},{id:"Ezeep",name:"Ezeep",columns:[{id:"colPrinterCode",_name:"PRINTER_USAGE_SETTINGS.IMPORT_PROFILES.PRINTER_CODE",default:"User"},{id:"colBwCount",_name:"PRINTER_USAGE_SETTINGS.IMPORT_PROFILES.PRINT_BLACK",default:"B/W"},{id:"colColorCount",_name:"PRINTER_USAGE_SETTINGS.IMPORT_PROFILES.PRINT_COLOR",default:"Color"}]}]}))},"6UyV":function(e,t,r){"use strict";r.r(t);var n=r("0zKI"),a=r.n(n);r("JBxO"),r("FdtR");t.default=angular.module("deskworks.printPartNumbersDirective",["autoSave","deskworks.helper","deskworks.state","deskworks.PrintUsageType"]).directive("printPartNumbers",(function(){return{restrict:"E",scope:!0,templateUrl:"settings/print-part-numbers.tpl.html",controller:"PrintPartNumbersCtrl as $ctrl",bindToController:{}}})).controller("PrintPartNumbersCtrl",["$scope","$translate","$window","$q","state","autoSave","helper","dwAlerts","PrintUsageType",function(e,t,r,n,s,f,l,i,o){var c=this;c.$onInit=function(){o.query({centerId:s.getCurrentCenterId()}).catch((function(e){return i.error(e,"Failed to get printer usage types.")})).then((function(e){c.usageTypes=e})),o.getPrinterProducts().catch((function(e){return i.error(e,"Failed to get printer products.")})).then((function(e){c.products=e}))},c.save=f.wrap((function(e){return c.saving=!0,o.save(e).catch((function(e){return i.error(e,"Failed to save printer usage type.")})).finally((function(){c.saving=!1}))})),c.add=function(e){var t=e.productMappings;t.push({from:t.length?null:1,to:null})},c.delete=function(e,t){var r=e.productMappings;return a()(r).call(r,t,1),r.length&&(r[r.length-1].to=null),r.length&&(r[0].from=1),o.save(e).catch((function(e){return i.error(e,"Failed to save printer usage type.")})).finally((function(){c.saving=!1}))}}])},CfYn:function(e,t){e.exports='<form name="formMemberStatement" id="printerUsage" novalidate ff-bulk-read-only> <h1 class="page-title">{{state.getPageTitle()}}</h1> <ff-row ng-if="!$ctrl.usage" class="animate-collapse"><ff-spin class="ff-spin-placeholder"></ff-spin></ff-row> <div class="gutter-v" ng-if="$ctrl.usage" class="animate-collapse"> <ff-panel style="max-width:600px"> <label class="ff-row"> <ff-label flex="0 0 100px"><req translate="PRINTER_USAGE.NUMBER"></req></ff-label> <ff-text ff-model="$ctrl.usage.number" ff-required="true" ff-validate-alert="{{\'PRINTER_USAGE.NUMBER\' | translate}}"></ff-text> </label> <label class="ff-row"> <ff-label flex="0 0 100px"><req translate="PRINTER_USAGE.POST_DATE"></req></ff-label> <ff-date ff-model="$ctrl.usage.postDate" ff-required="true" ff-validate-alert="{{\'PRINTER_USAGE.POST_DATE\' | translate}}"></ff-date> </label> <label class="ff-row"> <ff-label flex="0 0 100px"><span translate="PRINTER_USAGE.POSTED"></span></ff-label> <ff-static ff-bind="$ctrl.usage.posted | yesno"></ff-static> </label> </ff-panel> <ff-btn-group> <ff-btn sense="save" type="submit" ff-click="$ctrl.save(formMemberStatement)" ff-disabled="formMemberStatement.$pristine"> <span translate="GLOBAL.BTN_SAVE"></span> </ff-btn> <ff-btn sense="back" ff-click="$ctrl.back()"><span translate="GLOBAL.BTN_BACK"></span></ff-btn> <ff-btn sense="delete" ff-click="$ctrl.delete()"><span translate="GLOBAL.BTN_DELETE"></span></ff-btn> <ff-btn sense="charge" ff-click="$ctrl.postCharges()" ng-if="!$ctrl.usage.posted"> <span translate="PRINTER_USAGE.BTN_POST_CHARGES"></span> </ff-btn> </ff-btn-group> <ff-panel> <ff-panel-header><span translate="PRINTER_USAGE.JOBS.HEADER"></span></ff-panel-header> <ff-header ng-if="$ctrl.usage.jobs.length"> <ff-row> <cell flex="1 0 8%" class="ff-center show-sm" title="{{\'PRINTER_USAGE.JOBS.#.HINT\' | translate}}"> <span translate="PRINTER_USAGE.JOBS.#"></span> </cell> <cell flex="1 0 12%" class="show-xs"> <div class="ff-center" style="display:flex"> <ff-sort flex="none" props="$ctrl.usage" col-id="\'id\'" ff-click="$ctrl.sort(\'id\')"></ff-sort> <span translate="PRINTER_USAGE.JOBS.ID"></span> </div> </cell> <cell flex="1 0 15%" class="ff-center"> <span translate="PRINTER_USAGE.JOBS.PRINTER_CODE"></span> </cell> <cell flex="1 0 33%"> <div class="ff-center" style="display:flex"> <ff-sort flex="none" props="$ctrl.usage" col-id="\'memberName\'" ff-click="$ctrl.sort(\'memberName\')"></ff-sort> <span translate="PRINTER_USAGE.JOBS.USER_NAME"></span> </div> </cell> <cell flex="1 0 10%" class="ff-center" ng-if="$ctrl.jobsColumnsNames.mode"> <span translate="PRINTER_USAGE.JOBS.JOB_MODE"></span> </cell> <cell flex="1 0 10%" class="ff-center"> <span translate="PRINTER_USAGE.JOBS.BLACK_WHITE"></span> </cell> <cell flex="1 0 12%" class="ff-center"> <span translate="PRINTER_USAGE.JOBS.FULL_COLOR"></span> </cell> <cell flex="1 0 10%" class="ff-center" ng-if="$ctrl.jobsColumnsNames.scanCount"> <span translate="PRINTER_USAGE.JOBS.SCAN"></span> </cell> <cell flex="1 0 12%" class="ff-center" ng-if="$ctrl.jobsColumnsNames.faxCount"> <span translate="PRINTER_USAGE.JOBS.FAX"></span> </cell> </ff-row> </ff-header> <ff-row ng-repeat="job in $ctrl.usage.jobs"> <ff-static flex="1 0 8%" class="ff-center show-sm" ff-bind="::$ctrl.usage.pageSize * ($ctrl.usage.page - 1) + $index + 2"></ff-static> <ff-static flex="1 0 12%" class="ff-center show-xs" ff-bind="::job.id"></ff-static> <ff-static flex="1 0 15%" class="ff-center" style="overflow:visible" ff-style="{ overflow: \'visible\' }"><span> {{::job.printerCode}} <ff-hint hint-type="danger" ng-if="!job.valid"><span translate="PRINTER_USAGE.JOBS.UNKNOWN.HINT"></span></ff-hint> </span></ff-static> <ff-static flex="1 0 33%" class="ff-center" ff-bind="::job.memberName"></ff-static> <ff-static flex="1 0 10%" class="ff-center" ff-bind="::job.mode" ng-if="$ctrl.jobsColumnsNames.mode"></ff-static> <ff-static flex="1 0 10%" class="ff-center" ff-bind="::job.blackAndWhiteCount"></ff-static> <ff-static flex="1 0 12%" class="ff-center" ff-bind="::job.fullColorCount"></ff-static> <ff-static flex="1 0 12%" class="ff-center" ff-bind="::job.scanCount" ng-if="$ctrl.jobsColumnsNames.scanCount"></ff-static> <ff-static flex="1 0 12%" class="ff-center" ff-bind="::job.faxCount" ng-if="$ctrl.jobsColumnsNames.faxCount"></ff-static> </ff-row> <span translate="PRINTER_USAGE.JOBS.EMPTY" ng-if="!$ctrl.usage.jobs.length"></span> <ff-pagination props="$ctrl.usage" ff-click="$ctrl.navPage($page)" ng-if="$ctrl.usage.pageCount > 1"></ff-pagination> </ff-panel> </div> </form> '},Hs8i:function(e,t,r){var n={"./printer-usage/printer-usage-edit.tpl.html":"CfYn","./printer-usage/printer-usage-list.tpl.html":"MfVl","./settings/print-import-profiles.tpl.html":"PnoK","./settings/print-part-numbers.tpl.html":"nK3R","./settings/printer-usage-settings.tpl.html":"u6gI"};function a(e){var t=s(e);return r(t)}function s(e){if(!r.o(n,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return n[e]}a.keys=function(){return Object.keys(n)},a.resolve=s,e.exports=a,a.id="Hs8i"},LaoV:function(e,t,r){"use strict";r.r(t);r("3dw1"),r("Muwe"),r("y89P");var n=r("yCd9"),a=r.n(n),s=r("lRNC"),f=r.n(s),l=["$injector",function(e){var t,n,s=(t=r("Tzrq"),a()(n=f()(t).call(t)).call(n,t));e.loadNewModules(a()(s).call(s,(function(e){return e.default.name}))),e.invoke(["$templateCache",function(e){var t=r("Hs8i");f()(t).call(t).forEach((function(r){return e.put(r.replace(/^\.\//,""),t(r))}))}])}];t.default=l},MfVl:function(e,t){e.exports='<div id="printerUsages" ff-bulk-read-only> <h1 class="page-title">{{state.getPageTitle()}}</h1> <div class="gutter-v"> <ff-panel ngf-drop="true" ngf-change="$ctrl.import($files, $rejectedFiles)" ngf-multiple="true" ngf-pattern="\'text/csv,.csv\'" ngf-accept="\'text/csv,.csv\'" ngf-drag-over-class="dragover"> <ff-row ng-if="!$ctrl.usages" class="animate-collapse"><ff-spin class="ff-spin-placeholder"></ff-spin></ff-row> <ff-header ng-if="$ctrl.usages" class="animate-collapse"> <ff-row> <cell class="ff-center"><span translate="PRINTER_USAGE.NUMBER"></span></cell> <cell flex="0 0 40%" class="ff-center"><span translate="PRINTER_USAGE.POST_DATE"></span></cell> <cell flex="0 0 20%" class="ff-center"><span translate="PRINTER_USAGE.POSTED"></span></cell> <ff-btn flex="none" size="xs" class="buttons-row zero-height"></ff-btn> </ff-row> </ff-header> <ff-row ng-repeat="usage in $ctrl.usages" class="animate-collapse"> <ff-static class="ff-center" ff-bind="usage.number"></ff-static> <ff-static flex="0 0 40%" class="ff-center" ff-bind="usage.postDate | date:\'mediumDate\'"></ff-static> <ff-static flex="0 0 20%" class="ff-center" ff-bind="usage.posted | yesno"></ff-static> <ff-btn flex="none" sense="edit" size="xs" class="buttons-row" ff-click="$ctrl.edit(usage)" title="{{\'GLOBAL.BTN_EDIT\' | translate}}"></ff-btn> </ff-row> <ff-pagination props="$ctrl.data" ff-click="$ctrl.navPage($page)"></ff-pagination> </ff-panel> <div id="printerUsageImport" class="ff-row" style="max-width:450px;margin-left:auto"> <span flex="none"> <ff-btn sense="import" ff-spin="$ctrl.spinImport" ngf-select="$ctrl.import($files, $invalidFiles)" ngf-multiple="true" ngf-pattern="\'text/csv,.csv\'" ngf-accept="\'text/csv,.csv\'"> <span translate="PRINTER_USAGE.BTN_IMPORT"></span> </ff-btn> </span> <label flex="auto" class="ff-row"> <span flex="none" translate="PRINTER_USAGE.USING" style="align-items:center;margin:0 .5rem"></span> <ff-select name="importProfile" ff-model="$ctrl.importProfile" ff-required="true" ff-options="profile.name for profile in $ctrl.importProfiles" ff-validate-alert="{{\'PRINTER_USAGE.IMPORT_PROFILE\' | translate}}"> </ff-select> </label> </div> </div> </div> '},PnoK:function(e,t){e.exports='<div class="ff-grid gutter-v" ff-bulk-read-only> <ff-spin class="ff-spin-placeholder animate-collapse" ng-if="!$ctrl.profiles"></ff-spin> <ng-form name="profile.$$form" ng-repeat="profile in $ctrl.profiles track by $index" class="animate-collapse"> <ff-panel> <ff-panel-header ng-if="!$index"> <cell> <span translate="PRINTER_USAGE_SETTINGS.IMPORT_PROFILES.HEADER"></span> <ff-hint flex="none"><span translate="PRINTER_USAGE_SETTINGS.IMPORT_PROFILES.HEADER.HINT"></span></ff-hint> </cell> </ff-panel-header> <ff-spin ng-if="profile.$$autoSaving"></ff-spin> <label class="ff-row"> <ff-label flex="0 0 50%"><req translate="PRINTER_USAGE_SETTINGS.IMPORT_PROFILES.NAME"></req></ff-label> <ff-text ff-model="profile.name" ff-required="true" ff-change="$ctrl.save(profile)" ff-validate-alert="{{\'PRINTER_USAGE_SETTINGS.IMPORT_PROFILES.NAME\' | translate}}"></ff-text> </label> <label class="ff-row"> <ff-label flex="0 0 50%"><req translate="PRINTER_USAGE_SETTINGS.IMPORT_PROFILES.FORMATTING_TYPE"></req></ff-label> <ff-select ff-model="profile.$$formattingType" ff-required="true" ff-change="$ctrl.onTypeChange(profile)" ff-validate-alert="{{\'PRINTER_USAGE_SETTINGS.IMPORT_PROFILES.FORMATTING_TYPE\' | translate}}" ff-options="type as type.name for type in $ctrl.types"> </ff-select> </label> <label class="ff-row" ng-repeat="col in profile.$$formattingType.columns"> <ff-label flex="0 0 50%"><req translate="{{col._name}}"></req></ff-label> <ff-text ff-model="profile[col.id]" ff-required="true" ff-change="$ctrl.save(profile)" ff-validate-alert="{{col._name | translate}}"></ff-text> </label> <ff-btn-group class="ff-section-buttons"> <ff-btn sense="delete" size="sm" ff-click="$ctrl.delete(profile)"><span translate="GLOBAL.BTN_DELETE"></span></ff-btn> </ff-btn-group> </ff-panel> </ng-form> <ff-btn-group> <ff-btn sense="new" size="sm" ff-click="$ctrl.new()"><span translate="PRINTER_USAGE_SETTINGS.NEW_IMPORT_PROFILE"></span></ff-btn> </ff-btn-group> </div> '},"QxK+":function(e,t,r){"use strict";r.r(t);var n=r("nbuU"),a=r.n(n);r("3dw1");t.default=angular.module("deskworks.PrintImportProfile",["ngResource","deskworks.config","deskworks.optsPrintFormattingType"]).factory("PrintImportProfile",["$resource","deskworksConfig","optsPrintFormattingType",function(e,t,r){var n=e(t.getApiAbsUrl("/dw-print/import-profiles/:id"),{},{update:{method:"PUT"}});return{new:function(){return r[0].columns.reduce((function(e,t){return e[t.id]=t.default,e}),{formattingType:r[0].id,$$formattingType:r[0]})},query:function(e){return n.query(e).$promise.then((function(e){return e.forEach((function(e){e.$$formattingType=a()(r).call(r,(function(t){return t.id===e.formattingType}))})),e}))},save:function(e,t){return t.id?n.update(angular.extend({id:t.id},e),t).$promise:n.save(e,t).$promise.then((function(e){return t.id=e.id,e}))},delete:function(e){return n.delete({id:e.id}).$promise}}}])},Sbb6:function(e,t,r){"use strict";r.r(t);r("3dw1");var n=r("KK/u"),a=r.n(n),s=r("03wM"),f=r.n(s);t.default=angular.module("deskworks.PrinterUsageEditCtrl",["deskworks.PrinterUsage"]).controller("PrinterUsageEditCtrl",["$scope","$window","$translate","$route","dwAlerts","state","helper","PrinterUsage",function(e,t,r,n,s,l,i,o){var c=this;l.setPageTitle(r.instant("PRINTER_USAGE.LIST.PAGE_TITLE")),c.onInit=function(){c.navPage()},c.back=function(){return l.setPath("/printer-usage")},c.save=function(e){if(!i.pointFirstInvalid("#printerUsage"))return o.save(c.usage).catch((function(e){return s.error(e,"Failed to update printer usage.")})).then((function(){return e.$setPristine()}))},c.delete=function(){if(t.confirm(r.instant("PRINTER_USAGE.CONFIRM_DELETE")))return o.delete(c.usage.id).catch((function(e){return s.error(e,"Failed to delete printer usage.")})).then((function(){return l.setPath("/printer-usage")}))},c.postCharges=function(){return o.postCharges(c.usage.id).catch((function(e){return s.error(e,"Failed to post charges for printer usage.")})).then((function(){return l.setPath("/printer-usage")}))},c.sort=function(e){return c.navPage(1,e)},c.navPage=function(e,t){return t=t||c.usage&&a()(c.usage),o.get(n.current.params.printerUsageId,e,c.usage&&c.usage.pageSize,t).catch((function(e){return s.error(e,"Failed to query printer usages.")})).then((function(e){c.usage=e,c.usage.jobs.length&&(c.jobsColumnsNames={},f()(c.usage.jobs[0]).forEach((function(e){return c.jobsColumnsNames[e]=e})))}))},c.onInit()}])},Tzrq:function(e,t,r){var n={"./printer-usage/printer-usage-edit.controller.js":"Sbb6","./printer-usage/printer-usage-list.controller.js":"21nL","./services/opts-print-formatting-type.service.js":"3CdH","./services/print-import-profile.service.js":"QxK+","./services/print-usage-type.service.js":"dWvu","./services/printer-usage.service.js":"/3la","./settings/print-import-profiles.directive.js":"Ylgi","./settings/print-part-numbers.directive.js":"6UyV","./settings/printer-usage-settings.controller.js":"syc3"};function a(e){var t=s(e);return r(t)}function s(e){if(!r.o(n,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return n[e]}a.keys=function(){return Object.keys(n)},a.resolve=s,e.exports=a,a.id="Tzrq"},Ylgi:function(e,t,r){"use strict";r.r(t);var n=r("0zKI"),a=r.n(n);r("3dw1");t.default=angular.module("deskworks.printImportProfilesDirective",["autoSave","deskworks.helper","deskworks.state","deskworks.PrintImportProfile","deskworks.optsPrintFormattingType"]).directive("printImportProfiles",(function(){return{restrict:"E",scope:!0,templateUrl:"settings/print-import-profiles.tpl.html",controller:"PrintImportProfilesCtrl as $ctrl",bindToController:{}}})).controller("PrintImportProfilesCtrl",["$scope","$translate","$window","$q","state","autoSave","helper","dwAlerts","PrintImportProfile","optsPrintFormattingType",function(e,t,r,n,s,f,l,i,o,c){var p=this;p.types=c,p.$onInit=function(){o.query({centerId:s.getCurrentCenterId()}).catch((function(e){return i.error(e,"Failed to get import profiles.")})).then((function(e){p.profiles=e}))},p.new=function(){p.profiles.push(o.new())},p.save=f.wrap((function(e){return o.save({centerId:s.getCurrentCenterId()},e).catch((function(e){return i.error(e,"Failed to save print import profile.")}))})),p.onTypeChange=function(e){return e.formattingType!==e.$$formattingType.id&&(e.$$formattingType.columns.forEach((function(t){e[t.id]=t.default})),e.formattingType=e.$$formattingType.id),p.save(e)},p.delete=function(e){if(r.confirm(t.instant("PRINTER_USAGE_SETTINGS.CONFIRM_DELETE")))return n.when(e.id?o.delete(e):null).catch((function(e){return i.error(e,"Failed to delete import profile.")})).then((function(){var t;a()(t=p.profiles).call(t,p.profiles.indexOf(e),1)}))}}])},dWvu:function(e,t,r){"use strict";r.r(t),t.default=angular.module("deskworks.PrintUsageType",["ngResource","deskworks.config"]).factory("PrintUsageType",["$resource","deskworksConfig",function(e,t){var r=t.getApiAbsUrl("/dw-print/usage-types"),n=t.getApiAbsUrl("/dw-print/printer-products"),a=e(r,{},{query:{method:"GET",isArray:!0}}),s=e(r+"/:usageTypeId",{},{update:{method:"PUT"}}),f=e(n,{},{query:{method:"GET",isArray:!0}});return{query:function(e){return a.query(e).$promise},save:function(e){return s.update({usageTypeId:e.id},e).$promise},getPrinterProducts:function(){return f.query().$promise}}}])},nK3R:function(e,t){e.exports='<div ff-bulk-read-only> <ff-panel> <ff-panel-header><span translate="PRINTER_USAGE_SETTINGS.PART_NUMBERS.HEADER"></span></ff-panel-header> <ff-header> <ff-row> <cell flex="0 0 50px" class="ff-center" title="{{\'PRINTER_USAGE_SETTINGS.PART_NUMBERS.FROM.HINT\' | translate}}"> <span translate="PRINTER_USAGE_SETTINGS.PART_NUMBERS.FROM"></span> </cell> <cell flex="0 0 50px" class="ff-center" title="{{\'PRINTER_USAGE_SETTINGS.PART_NUMBERS.TO.HINT\' | translate}}"> <span translate="PRINTER_USAGE_SETTINGS.PART_NUMBERS.TO"></span> </cell> <cell title="{{\'PRINTER_USAGE_SETTINGS.PART_NUMBERS.MAP_TO.HINT\' | translate}}"> <span translate="PRINTER_USAGE_SETTINGS.PART_NUMBERS.MAP_TO"></span> </cell> </ff-row> </ff-header> <ff-row><ff-spin class="ff-spin-placeholder animate-collapse" ng-if="!$ctrl.usageTypes"></ff-spin></ff-row> <ng-form name="usageType.$$form" ng-repeat="usageType in $ctrl.usageTypes" class="ff-col animate-collapse"> <ff-row> <ff-label class="em"> {{usageType.type}} <ff-spin ng-if="usageType.$$autoSaving" class="ff-spin-sm" style="margin:0 .5rem 0 auto"></ff-spin> </ff-label> <ff-btn sense="add" size="xs" flex="none" class="buttons-row" ff-click="$ctrl.add(usageType)" title="{{\'PRINTER_USAGE_SETTINGS.PART_NUMBERS.BTN_ADD.HINT\' | translate}}"></ff-btn> </ff-row> <ff-row ng-repeat="mapping in usageType.productMappings"> <ff-number flex="0 0 50px" class="ff-center" ff-model="mapping.from" ff-required="true" ff-disabled="!$index" ff-lt="mapping.to" ff-gt="usageType.productMappings[$index - 1].to" ff-change="$ctrl.save(usageType)" ff-validate-alert="{{\'PRINTER_USAGE_SETTINGS.PART_NUMBERS.FROM.HINT\' | translate}}"></ff-number> <ff-number flex="0 0 50px" class="ff-center" ff-model="mapping.to" ff-required="true" ff-change="$ctrl.save(usageType)" ff-validate-alert="{{\'PRINTER_USAGE_SETTINGS.PART_NUMBERS.TO.HINT\' | translate}}" ff-gt="mapping.from" ff-lt="usageType.productMappings[$index + 1].from" ng-if="$index < usageType.productMappings.length - 1"></ff-number> <ff-static flex="0 0 50px" class="ff-center" ff-disabled="true" ng-if="$index === usageType.productMappings.length - 1">&infin;</ff-static> <ff-select ff-model="mapping.productId" ff-required="true" ff-change="$ctrl.save(usageType)" ff-validate-alert="{{\'PRINTER_USAGE_SETTINGS.PART_NUMBERS.MAP_TO.HINT\' | translate}}" ff-options="product.id as product.name for product in $ctrl.products"> </ff-select> <ff-btn sense="remove" size="xs" flex="none" class="buttons-row" ff-click="$ctrl.delete(usageType, $index)" title="{{\'PRINTER_USAGE_SETTINGS.PART_NUMBERS.BTN_DELETE.HINT\' | translate}}"></ff-btn> </ff-row> </ng-form> </ff-panel> </div> '},syc3:function(e,t,r){"use strict";r.r(t);var n=r("Ylgi"),a=r("6UyV");t.default=angular.module("deskworks.printerUsageSettings",["deskworks.state",n.default.name,a.default.name]).controller("PrinterUsageSettingsCtrl",["$scope","$translate","dwAlerts","state",function(e,t,r,n){n.setPageTitle(t.instant("PRINTER_USAGE_SETTINGS.PAGE_TITLE"))}])},u6gI:function(e,t){e.exports='<div id="printerUsageSettings" ff-bulk-read-only> <h1 class="page-title">{{state.getPageTitle()}}</h1> <div class="ff-grid gutter-v gutter-h"> <print-import-profiles flex="{lg: \'0 0 50%\'}"></print-import-profiles> <print-part-numbers flex="{lg: \'0 0 50%\'}"></print-part-numbers> </div> </div> '}}]);