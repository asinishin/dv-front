(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{0:function(e,t){},1:function(e,t){},2:function(e,t){},"2/1H":function(e,t,n){"use strict";t.a=angular.module("deskworks.ReservationUnit",["ngResource","ngFileUpload","deskworks.config"]).factory("ReservationUnit",["$resource","$q","Upload","deskworksConfig",function(e,t,n,r){var s=e(r.getApiAbsUrl("/centers/:centerId/reservation-units/:id"),{},{update:{method:"PUT"}});return{query:function(e){return s.query({centerId:e}).$promise},get:function(e,n){return"new"===n?t.when({id:"new"}):s.get({centerId:e,id:n}).$promise},save:function(e,t){return t.id&&"new"!==t.id?s.update({centerId:e,id:t.id},t).$promise:s.save({centerId:e},t).$promise.then(function(e){return t.id=e.id,e})},delete:function(e,t){return s.delete({centerId:e,id:t}).$promise},uploadPhoto:function(e,t,s){return n.upload({url:r.getApiAbsUrl("/centers/".concat(e,"/reservation-units/").concat(t)),method:"PUT",withCredentials:!0,data:{photo:s}})}}}])},3:function(e,t){},Bz93:function(e,t){e.exports='<ff-row ff-dim=!$ctrl.settings> <label> <ff-label flex="0 1 132px"> <span translate=USER_PROFILE.MESSAGE_BOARD_NOTICES></span> </ff-label> <ff-select name=messageBoardNotices ff-model=$ctrl.settings.notification ff-options="opt.id as opt.name for opt in $ctrl.optsMessageBoardNotices"></ff-select> </label> </ff-row> '},DOvr:function(e,t){angular.module("deskworks.signInLink",["deskworks.state"]).directive("signInLink",["state",function(e){return{template:'<a ng-href="{{state.getLoggedUserId() ? \'#/sign-out\' : \'#/sign-in\'}}" ng-click="signInOrOut($event)" ff-spin="spin" snap-close class="sidebar-item" ng-class="{ active: active }"><span ng-if="!state.getLoggedUserId()" translate="SIDEBAR.SIGN_IN"></span><span ng-if="state.getLoggedUserId()" translate="SIDEBAR.SIGN_OUT"></span></a>',restrict:"E",scope:!0,link:function(t,n,r){t.state=e,r.$observe("active",function(e){t.active="true"===e}),t.signInOrOut=function(t){t.stopPropagation(),t.preventDefault(),e.resetParams(),e.setPath(e.getLoggedUserId()?"/sign-out":"/sign-in")}}}}])},"Dpp/":function(e,t,n){"use strict";n.r(t);n("Sie7");t.default=angular.module("deskworks.dwSignIn",["deskworks.helper","deskworks.state","ngStorage","deskworks.userProfile.service"]).directive("dwSignIn",function(){return{restrict:"EAC",scope:!0,transclude:{extraButtons:"?extraButtons"},templateUrl:"sign-in/dw-sign-in.tpl.html",controller:"dwSignIn",controllerAs:"dwSignIn",bindToController:{showSignUp:"<"}}}).controller("dwSignIn",["$scope","$element","$attrs","$q","$timeout","$localStorage","$translate","helper","state","userProfileService",function(e,t,n,r,s,a,i,o,l,c){var f=this;f.rememberMe=!angular.isDefined(a.rememberMe)||a.rememberMe,f.signIn=function(){return f.error=null,f.success=null,f.info=i.instant("SIGN_IN.SIGNING_IN"),l.login(f.login,f.password,f.rememberMe).then(function(){return f.info=i.instant("SIGN_IN.SUCCESS"),a.rememberMe=f.rememberMe,e.$emit("dwSignIn:SignIn"),s(5e3)}).catch(function(e){return f.info=null,f.error=e.data&&e.data.error||i.instant("SIGN_IN.INVALID_LOGIN_PASSWORD"),r.reject(f.error)})},f.forgotPassword=function(e){f.error=null,f.info=null,f.success=null,f.restorePassword=e},f.sendPassword=function(){return f.error=null,f.info=i.instant("SIGN_IN.RESTORE_PASSWORD.SENDING"),c.restorePassword({email:f.email}).then(function(){f.info=null,f.success=i.instant("SIGN_IN.RESTORE_PASSWORD.SUCCESS"),f.restorePassword=!1}).catch(function(e){return f.info=null,f.error=e.data&&e.data.error||"Failed to restore password.",r.reject(f.error)})},f.signUp=function(){e.$emit("dwSignIn:SignUp")}}])},EyXH:function(e,t){e.exports="<dw-sign-in id=signIn></dw-sign-in> "},"I/kG":function(e,t){},L3Yn:function(e,t,n){"use strict";n.r(t);n("DbwS"),n("t91x");angular.module("deskworks.signIn",["ngRoute","ngStorage","flexForms","deskworks.state","deskworks.config","deskworks.dwSignIn","deskworks.isMultiSite"]).config(["$routeProvider",function(e){var t;e.when("/sign-in",{templateUrl:"sign-in/sign-in.tpl.html",controller:"SignInCtrl",controllerAs:"vm",label:"Sign In",routeBranch:"sign-in",hideSidebar:!0,userTasksPolicy:!1,landing:!0,reloadOnSearch:!1,translations:["sign-in"]}),e.when("/sign-out",{routeBranch:"sign-out",hideSidebar:!0,userTasksPolicy:!1,landing:!0,resolve:{logout:["state","isMultiSite","deskworksConfig",function(e,n,r){return t=e.getParam("silent")||t,e.logout().finally(function(){if(!t)return n()?void(window.location=r.getSitesUrl()):e.setPath("/sign-in")})}]}})}]).controller("SignInCtrl",["$scope","$route","$location","$localStorage","$timeout","$translate","state","deskworksConfig","isMultiSite",function(e,t,n,r,s,a,i,o,l){var c=this;function f(){return window.location=o.getSitesUrl(),s(5e3)}i.setPageTitle(a.instant("SIGN_IN.PAGE_TITLE")),e.$on("dwSignIn:SignIn",function(e){i.setPath(i.getParam("redirect")||o.getDefaultRoute(),!0),i.setParam("redirect"),e.stopPropagation()}),e.$watch(l,function(e){c.back=e?f:null})}])},Mm7d:function(e,t){e.exports='<form name=formSignIn class=sign-in> <h4 class=page-title ng-bind="dwSignIn.restorePassword ? (\'SIGN_IN.RESTORE_PASSWORD.PAGE_TITLE\' | translate) : state.getPageTitle()"></h4> <div class=gutter-v> <ff-board> <ff-panel ng-if=!dwSignIn.restorePassword> <ff-panel> <ff-panel-header> <span ng-class="{ \'text-danger\': dwSignIn.error }"> {{dwSignIn.error || dwSignIn.success || dwSignIn.info || (\'SIGN_IN.HINT\' | translate)}} </span> </ff-panel-header> <ff-row class=sign-up-block ng-if=dwSignIn.showSignUp> <span style=align-items:center translate=SIGN_IN.NO_ACCOUNT_YET></span> <ff-btn flex="0 0 auto" sense=signup ff-click=dwSignIn.signUp()><span translate=SIGN_IN.BTN_SIGN_UP></span></ff-btn> </ff-row> <label class=ff-row> <ff-label flex="0 0 80px"><span translate=GLOBAL.LOGIN></span></ff-label> <ff-login name=login ff-model=dwSignIn.login ff-required=true ff-maxlength=256 ff-validate-alert="{{\'GLOBAL.LOGIN\' | translate}}"></ff-login> </label> <label class=ff-row> <ff-label flex="0 0 80px"><span translate=GLOBAL.PASSWORD></span></ff-label> <ff-password name=password ff-model=dwSignIn.password ff-required=true ff-maxlength=256 ff-attr-autocomplete=existing-password ff-validate-alert="{{\'GLOBAL.PASSWORD\' | translate}}"></ff-password> </label> <ff-row class=sign-in-bottom> <ff-btn flex="0 0 auto" sense=link ff-attr-tabindex={{1}} ff-click=dwSignIn.forgotPassword(true)> <span translate=SIGN_IN.FORGOT_PASSWORD></span> </ff-btn> <label flex="1 1 100%"> <ff-checkbox name=rememberMe ff-model=dwSignIn.rememberMe class=ff-right ff-label="{{\'SIGN_IN.REMEMBER_ME\' | translate}}"></ff-checkbox> </label> </ff-row> </ff-panel> </ff-panel> <ff-panel ng-if=dwSignIn.restorePassword> <ff-panel-header> <span ng-class="{ \'text-danger\': dwSignIn.error }"> {{dwSignIn.error || dwSignIn.info || (\'SIGN_IN.RESTORE_PASSWORD.HINT\' | translate)}} </span> </ff-panel-header> <label class=ff-row> <ff-label flex="0 0 70px"><req translate=GLOBAL.EMAIL></req></ff-label> <ff-email name=email ff-model=dwSignIn.email ff-required=true ff-validate-alert="{{\'GLOBAL.EMAIL\' | translate}}"></ff-email> </label> </ff-panel> </ff-board> <ff-btn-group ng-if=!dwSignIn.restorePassword> <span ng-transclude=extraButtons></span> <ff-btn sense=back ff-click=vm.back() ng-if=vm.back> <span translate=GLOBAL.BTN_BACK></span> </ff-btn> <ff-btn sense=back ff-click=$ctrl.back() ng-if=$ctrl.back> <span translate=GLOBAL.BTN_BACK></span> </ff-btn> <ff-btn type=submit sense=ok ff-disabled=formSignIn.$invalid ff-click=dwSignIn.signIn()> <span translate=SIGN_IN.BTN_SIGN_IN></span> </ff-btn> </ff-btn-group> <ff-btn-group ng-if=dwSignIn.restorePassword> <ff-btn type=submit sense=ok ff-disabled=formSignIn.$invalid ff-click=dwSignIn.sendPassword()> <span translate=SIGN_IN.RESTORE_PASSWORD.BTN_SEND></span> </ff-btn> <ff-btn sense=cancel ff-click=dwSignIn.forgotPassword(false)> <span translate=GLOBAL.BTN_CANCEL></span> </ff-btn> </ff-btn-group> </div> </form> '},P6hd:function(e,t,n){"use strict";n("pMUn");t.a=angular.module("scrollPointerEventsNone",[]).directive("scrollPointerEventsNone",function(){return{restrict:"AC",link:function(e,t){var n;function r(){clearTimeout(n),t.addClass("pointer-events-none"),n=setTimeout(function(){return t.removeClass("pointer-events-none")},100)}t.on("scroll",r),e.$on("$destroy",function(){return t.off("scroll",r)})}}})},QfWi:function(e,t,n){"use strict";n.r(t);n("NFdj"),n("vybQ"),n("jMkn"),n("DREr"),n("KNin"),n("xBYL"),n("7sMi"),n("vUE2"),n("RxAD"),n("Lrhl"),n("D1ip"),n("3/3J");var r=n("TiKg"),s=n.n(r),a=(n("F/wX"),n("+Sv2"),n("8ScX")),i=n.n(a),o=(n("XtiM"),n("flw3")),l=n.n(o),c=n("2CfY"),f=n.n(c);n("2IKX"),n("qVB+"),n("n+7y"),n("zVY+"),n("H7Ub");window.moment=s.a,window.Snap=i.a,window.NATS=l.a,window.bowser=f.a},Sie7:function(e,t,n){},Z5NS:function(e,t,n){"use strict";n.r(t);n("DbwS"),n("t91x");t.default=angular.module("deskworks.sidebar",["deskworks.UserTasks.service","deskworks.centerSelector","deskworks.signInLink","flexForms.ngCollapse","deskworks.sidebarTasks.service","deskworks.appDim"]).directive("sidebar",function(){return{restrict:"E",scope:!0,templateUrl:"sidebar/sidebar.tpl.html",controller:"SidebarCtrl as $ctrl"}}).controller("SidebarCtrl",["$scope","$rootScope","$element","$route","$timeout","state","helper","routeHelper","UserTasks","appDim",function(e,t,n,r,s,a,i,o,l,c){var f=this;function u(){return a.isLoggedAdmin()||(f.tasks=[],l.tasks=[]),s(function(){if(a.getLoggedUserId()&&a.getCurrentCenterId())return l.query(a.getCurrentCenterId(),a.isMasterProfile()&&a.getCurrentUserId()).then(function(e){f.tasks=e,l.tasks=[],f.tasks.forEach(function(e){l.tasks=l.tasks.concat(e.tasks)}),d()})})}function d(){var e;if(f.currentTask&&f.tasks&&f.tasks.length)return f.tasks.forEach(function(t){t.active=!!i.findByKeyValue(t.tasks,"url",f.currentTask),t.active&&(e=!0,t.open=!0,s(function(){t.open=!0}))}),e||"/dashboard"===f.currentTask||"/sign-in"===f.currentTask||"/sign-out"===f.currentTask}function g(e){e.reduce(function(e,t){return t?e+1:e},0)&&t.$emit("SIDEBAR:ACCORD-COLLAPSED")}function p(){angular.forEach(f.tasks,function(e){angular.forEach(e.tasks,function(e){e.directUrl&&(e.directUrl=l.interpolateTaskUrl(e.url))})})}function m(){f.offLogin=t.$on("LOGIN",u),f.offLogout=t.$on("LOGOUT",u),f.offRefresh=t.$on("SIDEBAR:REFRESH",u),f.offCenter=t.$on("CHANGE-CENTER",u),f.offCollapseAll=t.$on("SIDEBAR:ACCORD-COLLAPSE-ALL",function(){angular.forEach(f.tasks,function(e){e.open=!1})}),f.offChangeUser=t.$on("CHANGE-USER",function(){a.isLoggedAdmin()||u()})}f.$onInit=function(){f.state=a,f.offRouteStart=t.$on("$routeChangeStart",function(e,t){t.$$route&&(f.pendingTask="/"+t.$$route.routeBranch)}),f.offRouteSuccess=t.$on("$routeChangeSuccess",function(){f.currentTask=f.pendingTask,f.pendingTask=null,c(!1)}),f.offRouteError=t.$on("$routeChangeError",function(){f.pendingTask=null,c(!1)}),o.auth(null).finally(function(){u().finally(m)}).catch(angular.noop),e.$watch("$ctrl.currentTask",d),e.$watchGroup(["$ctrl.tasks",a.getCurrentCenterId,a.getCurrentUserId],p),e.$watchCollection(function(){return f.tasks?f.tasks.map(function(e){return e.open}):[]},g)},f.$onDestroy=function(){f.offRouteStart(),f.offRouteSuccess(),f.offRouteError(),function(){f.offLogin&&f.offLogin();f.offLogout&&f.offLogout();f.offRefresh&&f.offRefresh();f.offCenter&&f.offCenter();f.offCollapseAll&&f.offCollapseAll();f.offChangeUser&&f.offChangeUser()}()},f.$postLink=function(){n.addClass("sidebar")},f.toggleGroup=function(e){var t=e.open;f.tasks.forEach(function(e){e.open=!1}),e.open=!t},f.navigate=function(e,t){t.directUrl||(e.preventDefault(),e.stopPropagation(),t.dashboard&&(t.url=a.isLoggedAdmin()?"/dashboard-admin":"/dashboard"),t.url&&(t.url===a.getPath()?r.reload():(a.resetParams(),a.setPath(t.url)),c(!0)))}}])},"f+zm":function(e,t){e.exports='<div class=sidebar-logo ng-if=!$app.hideSidebarHeader> <a href={{wlLinks.homepageUrl}} title={{wlLinks.companyName}} target=_blank rel=noopener> <img src=/api/v1/white-label/images/logo.png class=white-label-prefix> </a> </div> <div class=sidebar-selectors ng-if=$ctrl.state.getLoggedUserId()> <label class="center-selector sidebar-selector" ng-show="$ctrl.state.getUserCenters().length > 1"> <span translate=SIDEBAR.CURRENT_CENTER></span> <dw-select-center></dw-select-center> </label> <label class="user-selector sidebar-selector" ng-if=$ctrl.state.isLoggedAdmin() title="{{\'SIDEBAR.CURRENT_USER.HINT\' | translate}}"> <span translate=SIDEBAR.CURRENT_USER></span> <dw-select-user></dw-select-user> </label> <label class="dw-select-profile sidebar-selector" ng-if=!$ctrl.state.isLoggedAdmin()></label> </div> <div class=sidebar-body> <div class=sidebar-body-inner> <ul class="sidebar-items ff-relative"> <li ff-spin="\'/dashboard\' === $ctrl.pendingTask" class=dash-sidebar> <a class=sidebar-item href=#/dashboard target=_blank rel=noopener ng-click="$ctrl.navigate($event, { dashboard: true })" snap-close ng-class="{ active: $ctrl.currentTask === \'/dashboard\' }"> <span translate=SIDEBAR.DASHBOARD></span> </a> </li> </ul> <div class=sidebar-groups> <div class=sidebar-group ng-repeat="group in $ctrl.tasks" ng-if="group.tasks.length > 0"> <h4 class=sidebar-group-header ng-class="{ active: group.active, open: group.open }" ng-click=$ctrl.toggleGroup(group) ng-if=group.name> <span ng-bind="group.name || \'[No Name]\'"></span> </h4> <ul class=sidebar-items ng-collapse="group.name && !group.open" lazy-rendering=false> <li ng-repeat-start="task in group.tasks" ff-spin="task.url === $ctrl.pendingTask" ng-if="task.url !== \'/widget-check-in\'"> <a class=sidebar-item ng-href="{{\'#\' + task.url}}" target=_blank rel=noopener ng-if=!task.directUrl ng-class="{ active: $ctrl.currentTask === task.url, disabled: !task.url }" ng-click="$ctrl.navigate($event, task)" snap-close> <span ng-bind=task.name></span> </a> <a class=sidebar-item ng-href={{task.directUrl}} target={{task.target}} rel={{task.rel}} ng-if=task.directUrl snap-close><span ng-bind=task.name></span></a> </li> <dw-check-in-widget ng-repeat-end ng-if="task.url === \'/widget-check-in\' && $ctrl.state.getLoggedUserId() && (!$ctrl.state.isLoggedAdmin() || $ctrl.state.isUserSelected())"> </dw-check-in-widget> </ul> </div> </div> <ul class=sidebar-items> <li ng-if=$ctrl.state.isLoggedAdmin()> <a href=https://support.satellitedeskworks.com/ target=_blank rel=noopener class=sidebar-item> <span translate=SIDEBAR.SUPPORT></span> </a> </li> <li ng-if="!$ctrl.state.isLoggedAdmin() && wlLinks.contactLinkUrl"> <a href={{wlLinks.contactLinkUrl}} target=_blank rel=noopener class=sidebar-item> <span translate=SIDEBAR.CONTACT></span> </a> </li> <li ff-spin="$ctrl.pendingTask === \'/sign-in\' || $ctrl.pendingTask === \'/sign-out\'"> <sign-in-link active="{{$ctrl.currentTask === \'/sign-in\'}}"></sign-in-link> </li> </ul> </div> </div> '},fqDN:function(e,t){angular.module("deskworks.whitelabel",[]).provider("whitelabel",function(){"use strict";(new Date).getFullYear();return{setProperty:function(e,t){window.getComputedStyle(document.documentElement).getPropertyValue("--dynamic-white-label")||document.documentElement.style.setProperty(e,t)},setHeaderTemplate:function(e){return e},setHeaderTemplateMobile:function(e){return e},setHeaderTemplateDesktop:function(e){return e},setFooterTemplate:function(e){return e},setFooterTemplateMobile:function(e){return e},setFooterTemplateDesktop:function(e){return e},setSidebarTemplate:function(e){return e},setSidebarTemplateMobile:function(e){return e},setSidebarTemplateDesktop:function(e){return e},setPageTitlePostfix:function(e){return e},setTermsAndConditionsTemplate:function(e){return e},setContactTemplate:function(e){return'<a href="https://satellitedeskworks.com/#contacts" title="Contact Us" target="_blank" rel="noopener" class="sidebar-item"><span>Contact</span></a>'},$get:function(){return{setProperty:function(e,t){return document.documentElement.style.setProperty(e,t)},getProperty:function(e){return window.getComputedStyle(document.documentElement).getPropertyValue(e)}}}}})},nF3y:function(e,t){angular.module("deskworks.sidebarTasks.service",[]).factory("sidebarTasks",function(){"use strict";return["widget-check-in","profile","new-member","new-user","usage-entry","member-usage","member-log","our-members","new-reservation","simple-reservation","reservation-calendar","reservations","equipment-reservation","billing-profiles","purchases","recurring-charges","member-statement","generate-invoice","bulk-invoicing","bulk-charges","printer-usage","membership-report","recurring-billing-report","income-report","income-by-item-report","accounts-receivable-report","deposit-transaction-report","credit-balance-report","reservation-report","mailbox-report","security-deposit-report","availability-report","member-usage-report","check-in-report","reservation-utilization-report","write-off-report","reservation-usage-report","pricelists","products","membership-types","reservation-types","reservation-units","product-categories","floor-plans","email-all-members","email-site-members","message-board","splash-page","tasks","system-emails","access-cards","centers","administrators","lead-sources","setup/bulk-invoices","setup/recurring-invoices","setup/expired-card-email","setup/declined-card-email","setup/welcome-letter","setup/reservation-confirmation","setup/reservation-reminder","setup/cal-sync-error-email","setup/passes-used-up-email","setup/bucket-used-up-email","setup/renewal-notice-email","notifications/receipt-email","notifications/message-board-notices","setup/settings","setup/api-settings","setup/printer-usage-settings","setup/import","banks","owners-regions","user-fields","integrations-setup","reservation-tablet-setup","quick-books-errors","ezeep-errors","white-label-settings"]})},pMUn:function(e,t,n){},zTcH:function(e,t,n){"use strict";angular.module("deskworks.MessageBoardUserSettings",["ngResource","deskworks.config"]).factory("MessageBoardUserSettings",["$resource","$q","deskworksConfig","helper",function(e,t,n,r){var s=e(n.getApiAbsUrl("/dw-mail/message-board/users/:userId"),{},{update:{method:"PUT"}});return{get:function(e){return!e||r.isUid(e)?t.when({notification:"immediately"}):s.get({userId:e}).$promise},save:function(e,t){return s.update({userId:e},t).$promise}}}]),angular.module("deskworks.optsMessageBoardNotices",[]).factory("optsMessageBoardNotices",["$rootScope","$translate",function(e,t){var n=[{id:"immediately",_name:"USER_PROFILE.MESSAGE_BOARD_NOTICES.IMMEDIATELY"},{id:"daily",_name:"USER_PROFILE.MESSAGE_BOARD_NOTICES.DAILY"},{id:"weekly",_name:"USER_PROFILE.MESSAGE_BOARD_NOTICES.WEEKLY"},{id:"never",_name:"USER_PROFILE.MESSAGE_BOARD_NOTICES.NEVER"}];function r(){n.forEach(function(e){e.name=t.instant(e._name)})}return r(),e.$on("$setTranslationsSuccess",r),n}]);var r=n("Bz93"),s=n.n(r);angular.module("deskworks.messageBoardUserSettings",["deskworks.MessageBoardUserSettings","deskworks.optsMessageBoardNotices"]).directive("messageBoardUserSettings",function(){return{template:s.a,restrict:"EAC",scope:!0,controller:"MessageBoardUserSettingsCtrl as $ctrl",bindToController:{userId:"<",save:"="}}}).controller("MessageBoardUserSettingsCtrl",["$scope","$timeout","state","helper","dwAlerts","MessageBoardUserSettings","optsMessageBoardNotices",function(e,t,n,r,s,a,i){var o=this;function l(){return t(function(){return a.save(o.userId,o.settings).catch(function(e){return s.error(e,"Failed to save message board user settings.")})})}o.optsMessageBoardNotices=i,o.$onInit=function(){o.save=l,a.get(o.userId).catch(function(e){return s.error(e,"Failed to get message board user settings.")}).then(function(e){o.settings=e})}}])}}]);