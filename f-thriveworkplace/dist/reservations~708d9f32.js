(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{"/qdO":function(e,t,n){"use strict";n.r(t);var r=n("YoJi");t.default=r.a},"2AQp":function(e,t,n){var r={"./reservation-calendar/index.js":"/qdO","./reservation-form/index.js":"yUci","./user-reservations/user-reservations.controller.js":"qNkH"};function a(e){var t=f(e);return n(t)}function f(e){if(!n.o(r,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return r[e]}a.keys=function(){return Object.keys(r)},a.resolve=f,e.exports=a,a.id="2AQp"},Khvr:function(e,t){e.exports='<div class=reservations-list ng-show=!$ctrl.editingReservation ff-bulk-read-only> <h4 class=page-title ng-bind=state.getPageTitle()></h4> <ff-panel> <ff-panel-header class=ff-read-only-ignore> <ff-row class=gutter-h-half> <label ng-repeat="opt in ::$ctrl.optsFilter" flex=none> <ff-radio ff-model=$ctrl.filter ff-value=::opt.id ff-label={{opt.name}} ff-change=$ctrl.onFilter() class=ff-small-height></ff-radio> </label> </ff-row> </ff-panel-header> <ff-panel> <ff-panel-header> <ff-row> <cell flex="0 1 145px" class=ff-center><span translate=USER_RESERVATIONS.DATE></span></cell> <cell flex="1 1 150px"><span translate=USER_RESERVATIONS.SPACE></span></cell> <cell flex="0 1 145px" class=ff-center><span translate=USER_RESERVATIONS.TIME></span></cell> <cell flex="1 1 200px" class=show-sm><span translate=USER_RESERVATIONS.NOTES></span></cell> <cell flex="0 1 110px" ng-if=::$ctrl.settings.enableAccessCodes> <span translate=USER_RESERVATIONS.ACCESS_CODE></span> </cell> <cell flex="0 1 130px" class=show-md ng-if=::state.isLoggedAdmin()> <span translate=USER_RESERVATIONS.ADDED_BY></span> </cell> <cell flex="0 1 110px" class=show-md ng-if=::state.isLoggedAdmin()> <span translate=USER_RESERVATIONS.UPDATED_ON></span> </cell> </ff-row> </ff-panel-header> </ff-panel> <ff-col infinite-scroll=$ctrl.fetch() infinite-scroll-distance=2 infinite-scroll-container="\'.snap-content-scroller\'"> <ff-row ng-repeat="res in $ctrl.reservations"> <ff-static flex="0 1 145px" ff-bind="::res.from | date:\'weekDate\'" class=ff-right></ff-static> <ff-static flex="1 1 150px" ff-bind=::res.reservationUnitName></ff-static> <ff-static flex="0 1 145px" class=ff-center><span><span nice-time=::res.from></span> - <span nice-time=::res.to></span></span></ff-static> <ff-static flex="1 1 200px" class=show-sm ff-bind=::res.reservationNote></ff-static> <ff-static flex="0 1 110px" ff-bind="::res.accessCode | nd" ng-if=::$ctrl.settings.enableAccessCodes></ff-static> <ff-static flex="0 1 130px" class=show-md ff-bind=::res.addedBy ng-if=::state.isLoggedAdmin()></ff-static> <ff-static flex="0 1 110px" class=show-md ff-bind="::res.updatedAt | date:\'mediumDate\'" ng-if=::state.isLoggedAdmin()></ff-static> <ff-btn-group class=floating-toolbar> <ff-row> <ff-btn sense=edit size=xs class=ff-btn-icon ff-click=$ctrl.editReservation(res) title="{{\'GLOBAL.BTN_EDIT\' | translate}}" ng-if=::$ctrl.isEditable(res)></ff-btn> <ff-btn sense=delete size=xs class=ff-btn-icon ff-click=$ctrl.cancelReservation(res) title="{{\'GLOBAL.BTN_CANCEL\' | translate}}"></ff-btn> </ff-row> </ff-btn-group> </ff-row> <div class="ff-spin ff-spin-placeholder" ng-if=$ctrl.fetching></div> </ff-col> <ff-row ng-if="!$ctrl.reservations.length && !$ctrl.fetching" class=ff-no-frame> <ff-label>{{\'GLOBAL.NONE\' | translate}}</ff-label> </ff-row> </ff-panel> <ff-btn-group class=buttons-bottom> <ff-btn sense=new ff-click=$ctrl.newReservation()> <span translate=USER_RESERVATIONS.BTN_NEW></span> </ff-btn> </ff-btn-group> </div> <form name=formEditReservation class=reservations-edit ng-if=$ctrl.editingReservation ff-bulk-read-only> <h4 class=page-title>Edit Reservation</h4> <div class="ff-grid ff-gutter-v ff-gutter-h"> <ff-panel flex="{md: \'0 0 50%\'}"> <ff-panel-header>{{\'Center: \' + state.getCurrentCenter().name}}</ff-panel-header> <label class=ff-row> <ff-label flex="0 0 80px">Category</ff-label> <ff-static ff-bind=$ctrl.editingReservation.resCategoryName></ff-static> </label> <label class=ff-row> <ff-label flex="0 0 80px">Unit</ff-label> <ff-static ff-bind=$ctrl.editingReservation.reservationUnitName></ff-static> </label> <dw-date-time name=from ff-label="Start Time" ff-model=$ctrl.editingReservation.from label-flex="0 0 80px" ff-required=true ff-date-diff=23 ff-date-order="{ early: $ctrl.editingReservation.from, late: $ctrl.editingReservation.to }" ff-validate-alert="{ field: \'Start Date\', late: \'End Date\' }"> </dw-date-time> <dw-date-time name=to ff-label="End Time" ff-model=$ctrl.editingReservation.to label-flex="0 0 80px" ff-required=true ff-date-diff=23 ff-date-order="{ early: $ctrl.editingReservation.from, late: $ctrl.editingReservation.to }" ff-validate-alert="{ field: \'End Date\', early: \'Start Date\' }"> </dw-date-time> </ff-panel> <ff-panel flex="{md: \'0 0 50%\'}"> <ff-panel-header>Notes</ff-panel-header> <ff-row> <ff-textarea ff-model=$ctrl.editingReservation.reservationNote rowspan=5></ff-textarea> </ff-row> </ff-panel> </div> <ff-btn-group class=buttons-bottom> <ff-btn sense=save type=submit ff-click=$ctrl.saveReservation() ff-disabled=formEditReservation.$pristine>Save Reservation</ff-btn> <ff-btn sense=back ff-click=$ctrl.back()>Back</ff-btn> </ff-btn-group> </form> '},Lkwn:function(e,t,n){var r={"./user-reservations/user-reservations.tpl.html":"Khvr"};function a(e){var t=f(e);return n(t)}function f(e){if(!n.o(r,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return r[e]}a.keys=function(){return Object.keys(r)},a.resolve=f,e.exports=a,a.id="Lkwn"},qNkH:function(e,t,n){"use strict";n.r(t);n("2UZ+"),n("it7j"),n("DbwS"),n("t91x");var r=n("2/1H");t.default=angular.module("deskworks.userReservations",["session","deskworks.reservationService",r.a.name]).controller("UserReservationsCtrl",["$scope","$filter","$route","$translate","$timeout","dwAlerts","reservationService","ReservationUnit","reservationUnits","user","state","session","helper","settings",function(e,t,n,r,a,f,i,s,o,l,c,d,u,p){var m=this;c.setPageTitle(r.instant("USER_RESERVATIONS.PAGE_TITLE",{userName:u.join([l.firstName,l.lastName]," ")})),m.optsFilter=[{id:"all",name:r.instant("USER_RESERVATIONS.FILTER.ALL")},{id:"upcoming",name:r.instant("USER_RESERVATIONS.FILTER.UPCOMING")},{id:"past",name:r.instant("USER_RESERVATIONS.FILTER.PAST")}],m.filter=m.optsFilter[0].id,m.settings=p,m.reservations=[],m.params={centerId:c.getCurrentCenterId(),userId:c.getCurrentUserId(),offset:0,limit:50},m.fetch=function(){if(m.eof||m.fetching)return m.fetching;m.fetching=i.query(m.params).catch(function(e){return f.error(e,"Failed to query reservations.")}).finally(function(){m.fetching=null}).then(function(e){e.forEach(function(e){e.resCategoryName=u.find(o,e.reservationUnitId),e.resCategoryName&&(e.resCategoryName=e.resCategoryName.reservationTypeName)}),m.reservations=m.reservations.concat(e),m.params.offset=m.reservations.length,m.eof=e.length<m.params.limit})},m.onFilter=function(){m.reservations=[],m.params.offset=0,m.eof=!1,m.params.from="upcoming"===m.filter?moment():null,m.params.to="past"===m.filter?moment():null,m.fetch()},e.$watch("$ctrl.editingReservation.from",function(e,t){moment.isMoment(e)&&moment.isMoment(t)&&(e.date()===t.date()&&e.month()===t.month()&&e.year()===t.year()||(m.editingReservation.to=moment([e.year(),e.month(),e.date(),m.editingReservation.to.hour()||e.hour(),m.editingReservation.to.minute()||e.minute(),0,0])))}),m.saveReservation=function(){if(m.editingReservation&&!u.pointFirstInvalid(".reservations-edit")){var e={id:m.editingReservation.id,from:m.editingReservation.from,to:m.editingReservation.to,reservationNote:m.editingReservation.reservationNote};return i.save(c.getCurrentCenterId(),c.getCurrentUserId(),e).catch(function(e){return f.error(e,"Failed to update reservation.")}).then(function(){delete m.editingReservation,m.onFilter()})}},m.isEditable=function(e){return d.isAdmin()||d.isRole("member")},m.editReservation=function(e){if(d.isRole("member"))return c.setParam("date",t("date")(e.from,"yyyy-MM-ddTHH:mm:00Z")),c.setPath("/edit-reservation/"+e.id);d.isAdmin()&&(m.editingReservation=angular.copy(e))},m.back=function(){delete m.editingReservation},m.cancelReservation=function(e){if(confirm(r.instant("USER_RESERVATIONS.CONFIRM_DELETE")))return i.delete(c.getCurrentCenterId(),c.getCurrentUserId(),e.id).catch(function(e){return f.error(e,"Failed to cancel reservation.")}).then(function(){var t=u.findIndex(m.reservations,e.id);m.reservations.splice(t,1)})},m.newReservation=function(){return c.setPath("/new-reservation")}}])},roXK:function(e,t,n){"use strict";n.r(t);n("t91x");var r=["$injector",function(e){var t,r=(t=n("2AQp")).keys().map(t);e.loadNewModules(r.map(function(e){return e.default.name})),e.invoke(["$templateCache",function(e){var t=n("Lkwn");t.keys().forEach(function(n){return e.put(n.replace(/^\.\//,""),t(n))})}])}];t.default=r},yUci:function(e,t,n){"use strict";n.r(t);var r=n("bOPx");t.default=r.a}}]);